<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="getEnrolleeWaitingPeriod" path="/shared/Delta_DV/Application/Published/Benefit/getEnrolleeWaitingPeriod" type="PROCEDURE" subtype="XQUERY_TRANSFORM_PROCEDURE" changeToken="0">
  <annotation><![CDATA[API to get Waiting Periods of the requested Enrollee.

This API required the following input parameters:
1. Enrollee ID (header)]]></annotation>
  <parameters>
    <parameter name="waitingPeriod" direction="OUT" nullable="true">
      <datatype name="waitingPeriod" referenceDefinitionSet="/shared/Delta_DV/Application/DefinitionSets/Benefit/defxAI_EnrolleeWaitingPeriod" referenceType="waitingPeriod" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="waitingPeriod">
        <schemaDatatype>
          <datatype name="waitingPeriod" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="ELEMENT_DECL" anonymous="true" type="TREE" refId="257">
            <element name="memberInfo">
              <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="513">
                <element name="contractId">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="memberId">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
              </datatype>
            </element>
            <element name="waitingPeriodsInfo" maxOccurs="2147483647" minOccurs="0">
              <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="769">
                <element name="conditionCode">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="conditionCodeDescription">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="effectiveDate">
                  <datatype name="date" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DATE"/>
                </element>
                <element name="endDate">
                  <datatype name="date" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DATE"/>
                </element>
                <element name="explanationCode">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="waitingPeriodInMonths">
                  <datatype name="integer" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="decimal" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DECIMAL" maxDigits="32" maxFractionalDigits="0"/>
                </element>
                <element name="treatment" maxOccurs="2147483647" minOccurs="0">
                  <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1025">
                    <element name="treatmentCode">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="treatmentDescription">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="procedureClass" maxOccurs="2147483647" minOccurs="0">
                      <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1281">
                        <element name="summaryCategoryCode">
                          <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                        </element>
                        <element name="summaryCategoryDescription">
                          <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                        </element>
                        <element name="classificationCode">
                          <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                        </element>
                        <element name="classificationDescription">
                          <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                        </element>
                      </datatype>
                    </element>
                  </datatype>
                </element>
              </datatype>
            </element>
          </datatype>
        </schemaDatatype>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/shared/Delta_DV/Application/DefinitionSets/Benefit/defxAI_EnrolleeWaitingPeriod" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/Business/BusinessSemantic/Benefit/Procedures/prcBl_GetEnrolleeWaitingPeriod" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/Business/Logical/Benefit/Procedures/prcBl_EnrolleeWaitingPeriodInfo" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/Physical/Formatting/PackagedQueries/Benefit/pkgPl_EnrolleeWaitingPeriodProcedureClass" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/Physical/Formatting/PackagedQueries/Benefit/pkgPl_EnrolleeWaitingPeriodTreatment" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <attribute name="creationDate" type="LONG">1606774090814</attribute>
  <attribute name="creatorUserDomain" type="STRING">dev</attribute>
  <attribute name="creatorUserId" type="INTEGER">3100101</attribute>
  <attribute name="creatorUserName" type="STRING">dca89313</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">true</attribute>
  <attribute name="lastModifiedDate" type="LONG">1610479316477</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">dev</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">3100101</attribute>
  <attribute name="lastModifiedUserName" type="STRING">dca31940</attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1606774090814</attribute>
  <attribute name="transformModel" type="NULL"/>
  <attribute name="xquery" type="STRING">declare copy-namespaces no-preserve,inherit;
declare namespace ns1=&quot;http://www.w3.org/2001/XMLSchema&quot;;

&lt;root xmlns:ns1=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;{
  let $nodes := (
    let $query := &quot;select oContractID,oMemberID from /shared/Delta_DV/Business/BusinessSemantic/Benefit/Procedures/prcBl_GetEnrolleeWaitingPeriod()&quot;
    let $EnrolleeInfo1 := composite:executeQuery($query)//result
    for $EnrolleeInfo in $EnrolleeInfo1
    return
    element waitingPeriod {
      let $nodes := (
        element memberInfo {
          element contractId {$EnrolleeInfo/oContractID/text()},
          element memberId {$EnrolleeInfo/oMemberID/text()}
        }
      )
      return
      $nodes[1],
      let $inputs := (if (empty($EnrolleeInfo/oContractID/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$EnrolleeInfo/oContractID/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($EnrolleeInfo/oMemberID/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$EnrolleeInfo/oMemberID/text()), &quot;&apos;&quot;) cast as xs:string)
      let $query := concat( &quot;select ConditionCD,ConditionDESC,EffDate,EndDate,ExplanationCD,WaitingPeriodMonths from /shared/Delta_DV/Business/Logical/Benefit/Procedures/prcBl_EnrolleeWaitingPeriodInfo(&quot;, concat( string-join($inputs,&quot;,&quot;), &quot;)&quot;))
      let $EnrolleeWaitingPeriodInfo1 := composite:executeQuery($query)//result
      for $EnrolleeWaitingPeriodInfo in $EnrolleeWaitingPeriodInfo1
      return
      element waitingPeriodsInfo {
        element conditionCode {$EnrolleeWaitingPeriodInfo/ConditionCD/text()},
        element conditionCodeDescription {$EnrolleeWaitingPeriodInfo/ConditionDESC/text()},
        element effectiveDate {$EnrolleeWaitingPeriodInfo/EffDate/text()},
        element endDate {$EnrolleeWaitingPeriodInfo/EndDate/text()},
        element explanationCode {$EnrolleeWaitingPeriodInfo/ExplanationCD/text()},
        element waitingPeriodInMonths {$EnrolleeWaitingPeriodInfo/WaitingPeriodMonths/text()},
        let $inputs := (if (empty($EnrolleeWaitingPeriodInfo/ConditionCD/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$EnrolleeWaitingPeriodInfo/ConditionCD/text()), &quot;&apos;&quot;) cast as xs:string)
        let $query := concat( &quot;select ConditionCD,TreatmentCD,TreatmentCDDesc from /shared/Delta_DV/Physical/Formatting/PackagedQueries/Benefit/pkgPl_EnrolleeWaitingPeriodTreatment(&quot;, concat( string-join($inputs,&quot;,&quot;), &quot;)&quot;))
        let $TreatmentInfo1 := composite:executeQuery($query)//result
        for $TreatmentInfo in $TreatmentInfo1
        return
        element treatment {
          element treatmentCode {$TreatmentInfo/TreatmentCD/text()},
          element treatmentDescription {$TreatmentInfo/TreatmentCDDesc/text()},
          let $inputs := (if (empty($TreatmentInfo/ConditionCD/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$TreatmentInfo/ConditionCD/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($TreatmentInfo/TreatmentCD/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$TreatmentInfo/TreatmentCD/text()), &quot;&apos;&quot;) cast as xs:string)
          let $query := concat( &quot;select ConditionCD,TreatmentCD,SummaryCategoryCD,SummaryCategoryCDDESC,ClassificationCD,ClassificationCDDESC from /shared/Delta_DV/Physical/Formatting/PackagedQueries/Benefit/pkgPl_EnrolleeWaitingPeriodProcedureClass(&quot;, concat( string-join($inputs,&quot;,&quot;), &quot;)&quot;))
          let $ProcedureClass1 := composite:executeQuery($query)//result
          for $ProcedureClass in $ProcedureClass1
          return
          element procedureClass {
            element summaryCategoryCode {$ProcedureClass/SummaryCategoryCD/text()},
            element summaryCategoryDescription {$ProcedureClass/SummaryCategoryCDDESC/text()},
            element classificationCode {$ProcedureClass/ClassificationCD/text()},
            element classificationDescription {$ProcedureClass/ClassificationCDDESC/text()}
          }
        }
      }
    }
  )
  return
  $nodes[1]
}&lt;/root&gt;/waitingPeriod</attribute>
  <attribute name="xqueryModel" type="BYTE_ARRAY">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</attribute>
</metadata>