<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="postMemberSearch" path="/shared/Delta_DV/Application/Published/Enrollment/postMemberSearch" type="PROCEDURE" subtype="XQUERY_TRANSFORM_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="membershipSearchResponse" direction="OUT" nullable="true">
      <datatype name="membershipSearchResponse" referenceDefinitionSet="/shared/Delta_DV/Application/DefinitionSets/Enrollment/defxAl_MemberSearch" referenceType="membershipSearchResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="membershipSearchResponse">
        <schemaDatatype>
          <datatype name="membershipSearchResponse" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="ELEMENT_DECL" anonymous="true" type="TREE" refId="257">
            <element name="members" maxOccurs="2147483647" minOccurs="0">
              <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="513">
                <element name="firstName">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="lastName">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="middleName">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="suffix">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="title">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="dateOfBirth">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="information">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="spokenLanguage">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="writtenLanguage">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="ethnicity">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="race">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="ssn">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="personId">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="actionCode">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="eligibilities" maxOccurs="2147483647" minOccurs="0">
                  <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="769">
                    <element name="contractId">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="memberId">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="enrolleeId">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="groupId">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="groupName">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="divisionId">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="divisionName">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="coverageType">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="contractTypeCode">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="coverageTermReasonCode">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="divisionSelfFunded">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="relationshipCode">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="relationship">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="effectiveDate">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="endDate">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="termReasonCode">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="waitingPeriod">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="benefitPackageId">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="groupTypeIdentifier">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="healthCareContractHolderIdentifier">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="state">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="product">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="regulatoryAgency">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="defaultNetworkId">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="groupLevel3">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="groupLevel4">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="planName">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="providers">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                  </datatype>
                </element>
                <element name="identifiers" maxOccurs="2147483647" minOccurs="0">
                  <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1025">
                    <element name="name">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="value">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="contractId">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="effectiveDate">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="endDate">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                  </datatype>
                </element>
                <element name="addresses">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="contactAddress">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="contact" maxOccurs="2147483647" minOccurs="0">
                  <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1281">
                    <element name="contactNumbers">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="emailid">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                  </datatype>
                </element>
                <element name="accounts">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="aptc">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="brokers">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="employerReferences">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="otherCarriers">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
              </datatype>
            </element>
            <element name="errors" maxOccurs="2147483647" minOccurs="0">
              <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1537">
                <element name="errorCode">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="errorMsg">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
              </datatype>
            </element>
          </datatype>
        </schemaDatatype>
      </datatype>
    </parameter>
    <parameter name="inJson" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="5000"/>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/shared/Delta_DV/Application/DefinitionSets/Enrollment/defxAl_MemberSearch" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <attribute name="creationDate" type="LONG">1599121952560</attribute>
  <attribute name="creatorUserDomain" type="STRING">dev</attribute>
  <attribute name="creatorUserId" type="INTEGER">3980101</attribute>
  <attribute name="creatorUserName" type="STRING">dos59246</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">true</attribute>
  <attribute name="lastModifiedDate" type="LONG">1611825641270</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">dev</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">3980101</attribute>
  <attribute name="lastModifiedUserName" type="STRING">dos59246</attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1599121952560</attribute>
  <attribute name="transformModel" type="NULL"/>
  <attribute name="xquery" type="STRING">declare copy-namespaces no-preserve,inherit;
declare namespace ns1=&quot;http://www.w3.org/2001/XMLSchema&quot;;
declare variable $inJson external;

&lt;root xmlns:ns1=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;{
  let $nodes := (
    element membershipSearchResponse {
      let $inputs := (if (empty($inJson)) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$inJson), &quot;&apos;&quot;) cast as xs:string)
      let $query := concat( &quot;select PersonID,NetworkID,FirstName,LastName,MiddleName,NameSuffix,PersonTitle,BirthDate,Information,EthnicityCode,RaceCode,SSN,SpokenLanguage,WrittenLanguage,GenericIDFieldIND,NetworkFlag,EnrolContractFRMT,EnrolMemberFRMT,ContractId,AltId,AltIdFlag,GenericId,GenericIdContractFRMT,GenericIdMemberFRMT,ErrorCode,ErrorDescription from /shared/Delta_DV/Business/BusinessSemantic/Enrollment/Procedures/prcBl_PostMemberSearch(&quot;, concat( string-join($inputs,&quot;,&quot;), &quot;)&quot;))
      let $MemberSearch1 := composite:executeQuery($query)//result
      for $MemberSearch in $MemberSearch1
      return
 if(not(empty($MemberSearch/PersonID/text()))) then 
      element members {
        element firstName {$MemberSearch/FirstName/text()},
        element lastName {$MemberSearch/LastName/text()},
        element middleName {$MemberSearch/MiddleName/text()},
        element suffix {$MemberSearch/NameSuffix/text()},
        element title {$MemberSearch/PersonTitle/text()},
        element dateOfBirth {$MemberSearch/BirthDate/text()},
        element information {$MemberSearch/Information/text()},
        element spokenLanguage {$MemberSearch/SpokenLanguage/text()},
        element writtenLanguage {$MemberSearch/WrittenLanguage/text()},
        element ethnicity {$MemberSearch/EthnicityCode/text()},
        element race {$MemberSearch/RaceCode/text()},
        element ssn {$MemberSearch/SSN/text()},
        element personId {$MemberSearch/PersonID/text()},
        element actionCode {&apos;&apos;},
        let $inputs := (if (empty($MemberSearch/PersonID/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/PersonID/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/NetworkID/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/NetworkID/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/NetworkFlag/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/NetworkFlag/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/EnrolContractFRMT/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/EnrolContractFRMT/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/EnrolMemberFRMT/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/EnrolMemberFRMT/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/ContractId/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/ContractId/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/AltId/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/AltId/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/AltIdFlag/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/AltIdFlag/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/GenericIDFieldIND/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/GenericIDFieldIND/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/GenericId/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/GenericId/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/GenericIdContractFRMT/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/GenericIdContractFRMT/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/GenericIdMemberFRMT/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/GenericIdMemberFRMT/text()), &quot;&apos;&quot;) cast as xs:string)
        let $query := concat( &quot;select ContractID,MemberID,EnroleeID,GroupID,GroupName,DivisionID,DivisionName,CoverageType,CoverageTypeCode,CoverageTermReasonCode,DivisionSelfFunded,RelationShipCode,RelationShip,EffDate,EndDate,MemberTermReasonCode,WaitingPeriod,BenefitPkgID,Bl4,Bl5,Bl6,Bl7,RegulatoryAgency,DefaultNetworkID,EmpGrpLvl3Id,EmpGrpLvl4Id from /shared/Delta_DV/Physical/Formatting/PackagedQueries/Enrollment/pkgPl_EligibilityCoverageDetail(&quot;, concat( string-join($inputs,&quot;,&quot;), &quot;)&quot;))
        let $EligibilityCoverageDetails1 := composite:executeQuery($query)//result
        for $EligibilityCoverageDetails in $EligibilityCoverageDetails1
        return
        element eligibilities {
          element contractId {$EligibilityCoverageDetails/ContractID/text()},
          element memberId {$EligibilityCoverageDetails/MemberID/text()},
          element enrolleeId {$EligibilityCoverageDetails/EnroleeID/text()},
          element groupId {$EligibilityCoverageDetails/GroupID/text()},
          element groupName {$EligibilityCoverageDetails/GroupName/text()},
          element divisionId {$EligibilityCoverageDetails/DivisionID/text()},
          element divisionName {$EligibilityCoverageDetails/DivisionName/text()},
          element coverageType {$EligibilityCoverageDetails/CoverageType/text()},
          element contractTypeCode {$EligibilityCoverageDetails/CoverageTypeCode/text()},
          element coverageTermReasonCode {$EligibilityCoverageDetails/CoverageTermReasonCode/text()},
          element divisionSelfFunded {$EligibilityCoverageDetails/DivisionSelfFunded/text()},
          element relationshipCode {$EligibilityCoverageDetails/RelationShipCode/text()},
          element relationship {$EligibilityCoverageDetails/RelationShip/text()},
          element effectiveDate {$EligibilityCoverageDetails/EffDate/text()},
          element endDate {$EligibilityCoverageDetails/EndDate/text()},
          element termReasonCode {$EligibilityCoverageDetails/MemberTermReasonCode/text()},
          element waitingPeriod {$EligibilityCoverageDetails/WaitingPeriod/text()},
          element benefitPackageId {$EligibilityCoverageDetails/BenefitPkgID/text()},
          element groupTypeIdentifier {$EligibilityCoverageDetails/Bl4/text()},
          element healthCareContractHolderIdentifier {$EligibilityCoverageDetails/Bl5/text()},
          element state {$EligibilityCoverageDetails/Bl6/text()},
          element product {$EligibilityCoverageDetails/Bl7/text()},
          element regulatoryAgency {$EligibilityCoverageDetails/RegulatoryAgency/text()},
          element defaultNetworkId {$EligibilityCoverageDetails/DefaultNetworkID/text()},
          element groupLevel3 {$EligibilityCoverageDetails/EmpGrpLvl3Id/text()},
          element groupLevel4 {$EligibilityCoverageDetails/EmpGrpLvl4Id/text()},
          element planName {&apos;&apos;},
          element providers {&apos;&apos;}
        },
        let $inputs := (if (empty($MemberSearch/PersonID/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/PersonID/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/NetworkID/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/NetworkID/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/NetworkFlag/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/NetworkFlag/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/EnrolContractFRMT/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/EnrolContractFRMT/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/EnrolMemberFRMT/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/EnrolMemberFRMT/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/ContractId/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/ContractId/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/AltId/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/AltId/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/AltIdFlag/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/AltIdFlag/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/GenericIDFieldIND/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/GenericIDFieldIND/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/GenericId/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/GenericId/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/GenericIdContractFRMT/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/GenericIdContractFRMT/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/GenericIdMemberFRMT/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/GenericIdMemberFRMT/text()), &quot;&apos;&quot;) cast as xs:string)
        let $query := concat( &quot;select ContractID,EffDate,EndDate,Name,AlternateID from /shared/Delta_DV/Physical/Formatting/PackagedQueries/Enrollment/pkgPl_MemberIdentifier(&quot;, concat( string-join($inputs,&quot;,&quot;), &quot;)&quot;))
        let $MemberIdentifiers1 := composite:executeQuery($query)//result
        for $MemberIdentifiers in $MemberIdentifiers1
        return
        element identifiers {
          element name {$MemberIdentifiers/Name/text()},
          element value {$MemberIdentifiers/AlternateID/text()},
          element contractId {$MemberIdentifiers/ContractID/text()},
          element effectiveDate {$MemberIdentifiers/EffDate/text()},
          element endDate {$MemberIdentifiers/EndDate/text()}
        }
      } else if ($MemberSearch1/ErrorCode/text()=5) then element members{}
     else
      element errors {
        element errorCode {$MemberSearch1/ErrorCode/text()},
        element errorMsg {$MemberSearch1/ErrorDescription/text()}
      }
    }
  )
  return
  $nodes[1]
}&lt;/root&gt;/membershipSearchResponse</attribute>
  <attribute name="xqueryModel" type="BYTE_ARRAY">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</attribute>
</metadata>