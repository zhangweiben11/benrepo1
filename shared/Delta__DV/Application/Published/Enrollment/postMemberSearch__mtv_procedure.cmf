<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="postMemberSearch_mtv" path="/shared/Delta_DV/Application/Published/Enrollment/postMemberSearch_mtv" type="PROCEDURE" subtype="XQUERY_TRANSFORM_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="membershipSearchResponse" direction="OUT" nullable="true">
      <datatype name="membershipSearchResponse" referenceDefinitionSet="/shared/Delta_DV/Application/DefinitionSets/Enrollment/defxAl_MemberSearch" referenceType="membershipSearchResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="membershipSearchResponse">
        <schemaDatatype>
          <datatype name="membershipSearchResponse" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="ELEMENT_DECL" anonymous="true" type="TREE" refId="257">
            <element name="members" maxOccurs="2147483647" minOccurs="0">
              <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="513">
                <element name="firstName">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="lastName">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="middleName">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="suffix">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="title">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="dateOfBirth">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="information">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="spokenLanguage">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="writtenLanguage">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="ethnicity">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="race">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="ssn">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="personId">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="actionCode">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="eligibilities" maxOccurs="2147483647" minOccurs="0">
                  <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="769">
                    <element name="contractId">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="memberId">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="enrolleeId">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="groupId">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="groupName">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="divisionId">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="divisionName">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="coverageType">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="contractTypeCode">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="coverageTermReasonCode">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="divisionSelfFunded">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="relationshipCode">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="relationship">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="effectiveDate">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="endDate">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="termReasonCode">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="waitingPeriod">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="benefitPackageId">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="groupTypeIdentifier">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="healthCareContractHolderIdentifier">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="state">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="product">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="regulatoryAgency">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="defaultNetworkId">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="groupLevel3">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="groupLevel4">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="planName">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="providers">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                  </datatype>
                </element>
                <element name="identifiers" maxOccurs="2147483647" minOccurs="0">
                  <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1025">
                    <element name="name">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="value">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="contractId">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="effectiveDate">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="endDate">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                  </datatype>
                </element>
                <element name="addresses">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="contactAddress">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="contact" maxOccurs="2147483647" minOccurs="0">
                  <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1281">
                    <element name="contactNumbers">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="emailid">
                      <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                    </element>
                  </datatype>
                </element>
                <element name="accounts">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="aptc">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="brokers">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="employerReferences">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="otherCarriers">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
              </datatype>
            </element>
            <element name="errors" maxOccurs="2147483647" minOccurs="0">
              <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1537">
                <element name="errorCode">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
                <element name="errorMsg">
                  <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                </element>
              </datatype>
            </element>
          </datatype>
        </schemaDatatype>
      </datatype>
    </parameter>
    <parameter name="inJson" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="5000"/>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/shared/Delta_DV/Application/DefinitionSets/Enrollment/defxAl_MemberSearch" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <attribute name="creationDate" type="LONG">1599121952560</attribute>
  <attribute name="creatorUserDomain" type="STRING">dev</attribute>
  <attribute name="creatorUserId" type="INTEGER">3980101</attribute>
  <attribute name="creatorUserName" type="STRING">dos59246</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">true</attribute>
  <attribute name="lastModifiedDate" type="LONG">1612328851819</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">dev</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">3980101</attribute>
  <attribute name="lastModifiedUserName" type="STRING">dos59246</attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1599121952560</attribute>
  <attribute name="transformModel" type="NULL"/>
  <attribute name="xquery" type="STRING">declare copy-namespaces no-preserve,inherit;
declare namespace ns1=&quot;http://www.w3.org/2001/XMLSchema&quot;;
declare variable $inJson external;

&lt;root xmlns:ns1=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;{
  let $nodes := (
    element membershipSearchResponse {
      let $inputs := (if (empty($inJson)) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$inJson), &quot;&apos;&quot;) cast as xs:string)
      let $query := concat( &quot;select PersonID,NetworkID,FirstName,LastName,MiddleName,NameSuffix,PersonTitle,BirthDate,Information,EthnicityCode,RaceCode,SSN,SpokenLanguage,WrittenLanguage,GenericIDFieldIND,NetworkFlag,EnrolContractFRMT,EnrolMemberFRMT,ContractId,AltId,AltIdFlag,GenericId,GenericIdContractFRMT,GenericIdMemberFRMT,ErrorCode,ErrorDescription from /shared/Delta_DV/Business/BusinessSemantic/Enrollment/Procedures/prcBl_PostMemberSearch_modified_mtv(&quot;, concat( string-join($inputs,&quot;,&quot;), &quot;)&quot;))
      let $MemberSearch1 := composite:executeQuery($query)//result
      for $MemberSearch in $MemberSearch1
      return
 if(not(empty($MemberSearch/PersonID/text()))) then 
      element members {
        element firstName {$MemberSearch/FirstName/text()},
        element lastName {$MemberSearch/LastName/text()},
        element middleName {$MemberSearch/MiddleName/text()},
        element suffix {$MemberSearch/NameSuffix/text()},
        element title {$MemberSearch/PersonTitle/text()},
        element dateOfBirth {$MemberSearch/BirthDate/text()},
        element information {$MemberSearch/Information/text()},
        element spokenLanguage {$MemberSearch/SpokenLanguage/text()},
        element writtenLanguage {$MemberSearch/WrittenLanguage/text()},
        element ethnicity {$MemberSearch/EthnicityCode/text()},
        element race {$MemberSearch/RaceCode/text()},
        element ssn {$MemberSearch/SSN/text()},
        element personId {$MemberSearch/PersonID/text()},
        element actionCode {&apos;&apos;},
        let $inputs := (if (empty($MemberSearch/PersonID/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/PersonID/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/NetworkID/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/NetworkID/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/NetworkFlag/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/NetworkFlag/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/EnrolContractFRMT/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/EnrolContractFRMT/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/EnrolMemberFRMT/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/EnrolMemberFRMT/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/ContractId/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/ContractId/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/AltId/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/AltId/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/AltIdFlag/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/AltIdFlag/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/GenericIDFieldIND/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/GenericIDFieldIND/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/GenericId/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/GenericId/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/GenericIdContractFRMT/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/GenericIdContractFRMT/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/GenericIdMemberFRMT/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/GenericIdMemberFRMT/text()), &quot;&apos;&quot;) cast as xs:string)
        let $query := concat( &quot;select ContractID,MemberID,EnroleeID,GroupID,GroupName,DivisionID,DivisionName,CoverageType,CoverageTypeCode,CoverageTermReasonCode,DivisionSelfFunded,RelationShipCode,RelationShip,EffDate,EndDate,MemberTermReasonCode,WaitingPeriod,BenefitPkgID,Bl4,Bl5,Bl6,Bl7,RegulatoryAgency,DefaultNetworkID,EmpGrpLvl3Id,EmpGrpLvl4Id from /shared/Delta_DV/Physical/Formatting/PackagedQueries/Enrollment/pkgPl_EligibilityCoverageDetail_mtv(&quot;, concat( string-join($inputs,&quot;,&quot;), &quot;)&quot;))
        let $EligibilityCoverageDetails1 := composite:executeQuery($query)//result
        for $EligibilityCoverageDetails in $EligibilityCoverageDetails1
        return
        element eligibilities {
          element contractId {$EligibilityCoverageDetails/ContractID/text()},
          element memberId {$EligibilityCoverageDetails/MemberID/text()},
          element enrolleeId {$EligibilityCoverageDetails/EnroleeID/text()},
          element groupId {$EligibilityCoverageDetails/GroupID/text()},
          element groupName {$EligibilityCoverageDetails/GroupName/text()},
          element divisionId {$EligibilityCoverageDetails/DivisionID/text()},
          element divisionName {$EligibilityCoverageDetails/DivisionName/text()},
          element coverageType {$EligibilityCoverageDetails/CoverageType/text()},
          element contractTypeCode {$EligibilityCoverageDetails/CoverageTypeCode/text()},
          element coverageTermReasonCode {$EligibilityCoverageDetails/CoverageTermReasonCode/text()},
          element divisionSelfFunded {$EligibilityCoverageDetails/DivisionSelfFunded/text()},
          element relationshipCode {$EligibilityCoverageDetails/RelationShipCode/text()},
          element relationship {$EligibilityCoverageDetails/RelationShip/text()},
          element effectiveDate {$EligibilityCoverageDetails/EffDate/text()},
          element endDate {$EligibilityCoverageDetails/EndDate/text()},
          element termReasonCode {$EligibilityCoverageDetails/MemberTermReasonCode/text()},
          element waitingPeriod {$EligibilityCoverageDetails/WaitingPeriod/text()},
          element benefitPackageId {$EligibilityCoverageDetails/BenefitPkgID/text()},
          element groupTypeIdentifier {$EligibilityCoverageDetails/Bl4/text()},
          element healthCareContractHolderIdentifier {$EligibilityCoverageDetails/Bl5/text()},
          element state {$EligibilityCoverageDetails/Bl6/text()},
          element product {$EligibilityCoverageDetails/Bl7/text()},
          element regulatoryAgency {$EligibilityCoverageDetails/RegulatoryAgency/text()},
          element defaultNetworkId {$EligibilityCoverageDetails/DefaultNetworkID/text()},
          element groupLevel3 {$EligibilityCoverageDetails/EmpGrpLvl3Id/text()},
          element groupLevel4 {$EligibilityCoverageDetails/EmpGrpLvl4Id/text()},
          element planName {&apos;&apos;},
          element providers {&apos;&apos;}
        },
        let $inputs := (if (empty($MemberSearch/PersonID/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/PersonID/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/NetworkID/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/NetworkID/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/NetworkFlag/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/NetworkFlag/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/EnrolContractFRMT/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/EnrolContractFRMT/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/EnrolMemberFRMT/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/EnrolMemberFRMT/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/ContractId/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/ContractId/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/AltId/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/AltId/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/AltIdFlag/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/AltIdFlag/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/GenericIDFieldIND/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/GenericIDFieldIND/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/GenericId/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/GenericId/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/GenericIdContractFRMT/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/GenericIdContractFRMT/text()), &quot;&apos;&quot;) cast as xs:string,if (empty($MemberSearch/GenericIdMemberFRMT/text())) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$MemberSearch/GenericIdMemberFRMT/text()), &quot;&apos;&quot;) cast as xs:string)
        let $query := concat( &quot;select ContractID,EffDate,EndDate,Name,AlternateID from /shared/Delta_DV/Physical/Formatting/PackagedQueries/Enrollment/pkgPl_MemberIdentifier_mtv(&quot;, concat( string-join($inputs,&quot;,&quot;), &quot;)&quot;))
        let $MemberIdentifiers1 := composite:executeQuery($query)//result
        for $MemberIdentifiers in $MemberIdentifiers1
        return
        element identifiers {
          element name {$MemberIdentifiers/Name/text()},
          element value {$MemberIdentifiers/AlternateID/text()},
          element contractId {$MemberIdentifiers/ContractID/text()},
          element effectiveDate {$MemberIdentifiers/EffDate/text()},
          element endDate {$MemberIdentifiers/EndDate/text()}
        }
      } else if ($MemberSearch1/ErrorCode/text()=5) then element members{}
     else
      element errors {
        element errorCode {$MemberSearch1/ErrorCode/text()},
        element errorMsg {$MemberSearch1/ErrorDescription/text()}
      }
    }
  )
  return
  $nodes[1]
}&lt;/root&gt;/membershipSearchResponse</attribute>
  <attribute name="xqueryModel" type="BYTE_ARRAY"></attribute>
</metadata>