<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="Mrigank_transformSearchXquery" path="/shared/Delta_DV/Business/Logical/Billing/Mrigank_transformSearchXquery" type="PROCEDURE" subtype="-131" changeToken="0">
  <parameters>
    <parameter name="SearchDetails" direction="IN" nullable="true">
      <datatype name="XML" namespace="/users/dev/dca89313/paymentserach_xml/Mrigank_transformSearchXquery" referenceType="{/users/dev/dca89313/paymentserach_xml/Mrigank_transformSearchXquery}XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="{/users/dev/dca89313/paymentserach_xml/Mrigank_transformSearchXquery}XML">
        <schemaDatatype>
          <datatype name="XML" type="TREE" refId="257"></datatype>
        </schemaDatatype>
      </datatype>
    </parameter>
    <parameter name="SearchOutput" direction="OUT" nullable="true">
      <datatype name="output" namespace="/users/dev/dca89313/paymentserach_xml/Mrigank_transformSearchXquery" referenceType="{/users/dev/dca89313/paymentserach_xml/Mrigank_transformSearchXquery}output" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="{/users/dev/dca89313/paymentserach_xml/Mrigank_transformSearchXquery}output">
        <schemaDatatype>
          <datatype name="output" type="TREE" refId="257"></datatype>
        </schemaDatatype>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <attribute name="creationDate" type="LONG">1598883682965</attribute>
  <attribute name="creatorUserDomain" type="STRING">dev</attribute>
  <attribute name="creatorUserId" type="INTEGER">3100101</attribute>
  <attribute name="creatorUserName" type="STRING">dca89313</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">true</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609896176534</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">3100101</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1598883682965</attribute>
  <attribute name="xquery" type="STRING">declare copy-namespaces no-preserve,inherit;
declare namespace xquery =  &quot;http://compositesw.com/transform/xquery&quot;;
declare namespace custom =  &quot;http://compositesw.com/transform/custom&quot;;
declare namespace xs =  &quot;http://www.w3.org/2001/XMLSchema&quot;;
declare namespace ext2 =  &quot;http://www.compositesw.com/extensions2&quot;;
declare namespace sql =  &quot;http://compositesw.com/transform/sql&quot;;

declare variable $SearchDetails external;
declare function local:cast4( $sortField)
{
  fn:substring($sortField, 0 ,21)
};

declare function local:cast5( $sortOrder)
{
  fn:substring($sortOrder, 0 ,21)
};

declare function local:cast3( $parentGroupNumber)
{
  fn:substring($parentGroupNumber, 0 ,51)
};

declare function local:cast6( $receiptNumber)
{
  fn:substring($receiptNumber, 0 ,51)
};

declare function local:cast( $max)
{
  let $result := $max
  return (
  $result
  )
};

declare function local:cast2( $min)
{
  let $result := $min
  return (
  $result
  )
};

declare function local:cast10( $start)
{
  fn:substring($start, 0 ,11)
};

declare function local:cast11( $end)
{
  fn:substring($end, 0 ,11)
};

declare function local:cast12( $invoiceNumber)
{
  fn:substring($invoiceNumber, 0 ,51)
};

declare function local:cast13( $start)
{
  fn:substring($start, 0 ,11)
};

declare function local:cast14( $end)
{
  fn:substring($end, 0 ,11)
};

declare function local:cast17( $paymentAmount)
{
  let $result := $paymentAmount
  return (
  $result
  )
};

declare function local:cast15( $max)
{
  let $result := $max
  return (
  $result
  )
};

declare function local:cast16( $min)
{
  let $result := $min
  return (
  $result
  )
};

declare function local:cast20( $max)
{
  let $result := $max
  return (
  $result
  )
};

declare function local:cast21( $min)
{
  let $result := $min
  return (
  $result
  )
};

declare function local:cast9( $max)
{
  let $result := $max
  return (
  $result
  )
};

declare function local:cast23( $min)
{
  let $result := $min
  return (
  $result
  )
};

declare function local:cast24( $max)
{
  let $result := $max
  return (
  $result
  )
};

declare function local:cast25( $min)
{
  let $result := $min
  return (
  $result
  )
};

declare function local:cast7( $max)
{
  let $result := $max
  return (
  $result
  )
};

declare function local:cast8( $min)
{
  let $result := $min
  return (
  $result
  )
};

let $nodes := 
(
  (
    for $var1 at $counter0 in $SearchDetails/sort
    return 
      if (fn:not($counter0 &lt;= 2147483647 and fn:true()))
      then ()
      else 
        element outPaymentSearch
        {
          (
            let $var4 := $var1/sortField/text()
            let $var3:= local:cast4(fn:data($var4))
            return
            element SortField
            {
              $var3
            }
            ,
            let $var7 := $var1/sortOrder/text()
            let $var6:= local:cast5(fn:data($var7))
            return
            element SortOrder
            {
              $var6
            }
            ,
            
            let $var114 := $SearchDetails/search/billToIds
            return
            element BillToIds
            {
              
&#x9;&#x9;&#x9;  composite:formatStringSequence ($var114)
            }


            ,
            let $var14 := $SearchDetails/search/parentGroupNumber/text()
            let $var13:= local:cast3(fn:data($var14))
            return
            element ParentGroupNumber
            {
              $var13
            }
            ,
            let $var17 := $SearchDetails/search/receiptNumber/text()
            let $var16:= local:cast6(fn:data($var17))
            return
            element ReceiptNumber
            {
              $var16
            }
            ,
            let $var20 := $SearchDetails/search/receiptAmount/max/text()
            let $var19:= local:cast(fn:data($var20))
            return
            element ReceiptAmountMax
            {
              $var19
            }
            ,
            let $var23 := $SearchDetails/search/receiptAmount/min/text()
            let $var22:= local:cast2(fn:data($var23))
            return
            element ReceiptAmountMin
            {
              $var22
            }
            ,
            let $var26 := $SearchDetails/search/paymentDateRange/start/text()
            let $var25:= local:cast10(fn:data($var26))
            return
            element PaymentDateStart
            {
              $var25
            }
            ,
            let $var29 := $SearchDetails/search/paymentDateRange/end/text()
            let $var28:= local:cast11(fn:data($var29))
            return
            element PaymentDateEnd
            {
              $var28
            }
            ,
            let $var32 := $SearchDetails/search/invoiceNumber/text()
            let $var31:= local:cast12(fn:data($var32))
            return
            element InvoiceNumber
            {
              $var31
            }
            ,
            let $var35 := $SearchDetails/search/invoiceDateRange/start/text()
            let $var34:= local:cast13(fn:data($var35))
            return
            element InvoiceDateStart
            {
              $var34
            }
            ,
            let $var38 := $SearchDetails/search/invoiceDateRange/end/text()
            let $var37:= local:cast14(fn:data($var38))
            return
            element InvoiceDateRangeEnd
            {
              $var37
            }
            ,
            let $var41 := $SearchDetails/search/paymentAmount/text()
            let $var40:= local:cast17(fn:data($var41))
            return
            element PaymentAmount
            {
              $var40
            }
            ,
 let $var115 := $SearchDetails/search/paymentTypes
            return
            element PaymentTypes
            {
              
&#x9;&#x9;&#x9;  composite:formatStringSequence ($var115)
            }


            ,
&#x9;&#x9;&#x9;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  
            let $var116 := $SearchDetails/search/paymentStatuses
            return
            element PaymentStatuses
            {
              
&#x9;&#x9;&#x9;  composite:formatStringSequence ($var116)
            }


            ,
            let $var44 := $SearchDetails/search/appliedAmount/max/text()
            let $var43:= local:cast15(fn:data($var44))
            return
            element AppliedAmountMax
            {
              $var43
            }
            ,
            let $var47 := $SearchDetails/search/appliedAmount/min/text()
            let $var46:= local:cast16(fn:data($var47))
            return
            element AppliedAmountMin
            {
              $var46
            }
            ,
            let $var50 := $SearchDetails/search/adjustmentAmount/max/text()
            let $var49:= local:cast20(fn:data($var50))
            return
            element AdjustmentAmountMax
            {
              $var49
            }
            ,
            let $var53 := $SearchDetails/search/adjustmentAmount/min/text()
            let $var52:= local:cast21(fn:data($var53))
            return
            element AdjustmentAmountMin
            {
              $var52
            }
            ,
            let $var56 := $SearchDetails/search/originalInvoiceAmount/max/text()
            let $var55:= local:cast9(fn:data($var56))
            return
            element OriginalInvoiceAmountMax
            {
              $var55
            }
            ,
            let $var59 := $SearchDetails/search/originalInvoiceAmount/min/text()
            let $var58:= local:cast23(fn:data($var59))
            return
            element OriginalInvoiceAmountMin
            {
              $var58
            }
            ,
            let $var62 := $SearchDetails/search/outstandingBalance/max/text()
            let $var61:= local:cast24(fn:data($var62))
            return
            element OutstandingBalanceMax
            {
              $var61
            }
            ,
            let $var65 := $SearchDetails/search/outstandingBalance/min/text()
            let $var64:= local:cast25(fn:data($var65))
            return
            element OutstandingBalanceMin
            {
              $var64
            }
            ,
            let $var68 := $SearchDetails/search/creditMemo/max/text()
            let $var67:= local:cast7(fn:data($var68))
            return
            element CreditMemoMax
            {
              $var67
            }
            ,
            let $var71 := $SearchDetails/search/creditMemo/min/text()
            let $var70:= local:cast8(fn:data($var71))
            return
            element CreditMemoMin
            {
              $var70
            }
            ,
            element NumberOfRowsPerPage
            {
              $SearchDetails/pagination/numberOfRowsPerPage/text()
            }
            ,
            element PageNumber
            {
              $SearchDetails/pagination/pageNumber/text()
            }
          )
        }
    ,
    let $counter := count($SearchDetails/sort)
    return
      if ($counter &gt;= 0) then
      ()
      else 
        for $k in (1 to ( 0 - $counter))
        return
          element outPaymentSearch
          {
            (
              element SortField
              {
              }
              ,
              element SortOrder
              {
              }
              ,
              (
                for $var75 at $counter76 in $SearchDetails/search/billToIds
                return 
                  if (fn:not($counter76 &lt;= 1))
                  then ()
                  else 
                    element BillToIds
                    {
                      $var75/text()
                    }
                ,
                let $counter := count($SearchDetails/search/billToIds)
                return
                  if ($counter &gt;= 1) then
                  ()
                  else 
                    for $k in (1 to ( 1 - $counter))
                    return
                      element BillToIds
                      {
                      }
              )
              ,
              element ParentGroupNumber
              {
              }
              ,
              element ReceiptNumber
              {
              }
              ,
              element ReceiptAmountMax
              {
              }
              ,
              element ReceiptAmountMin
              {
              }
              ,
              element PaymentDateStart
              {
              }
              ,
              element PaymentDateEnd
              {
              }
              ,
              element InvoiceNumber
              {
              }
              ,
              element InvoiceDateStart
              {
              }
              ,
              element InvoiceDateRangeEnd
              {
              }
              ,
              element PaymentAmount
              {
              }
              ,
              element PaymentTypes
              {
              }
              ,
              element PaymentStatuses
              {
              }
              ,
              element AppliedAmountMax
              {
              }
              ,
              element AppliedAmountMin
              {
              }
              ,
              element AdjustmentAmountMax
              {
              }
              ,
              element AdjustmentAmountMin
              {
              }
              ,
              element OriginalInvoiceAmountMax
              {
              }
              ,
              element OriginalInvoiceAmountMin
              {
              }
              ,
              element OutstandingBalanceMax
              {
              }
              ,
              element OutstandingBalanceMin
              {
              }
              ,
              element CreditMemoMax
              {
              }
              ,
              element CreditMemoMin
              {
              }
              ,
              element NumberOfRowsPerPage
              {
              }
              ,
              element PageNumber
              {
              }
            )
          }
  )
)
return
$nodes</attribute>
</metadata>