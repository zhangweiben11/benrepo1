<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="prcBl_PostMemberSearch_New" path="/shared/Delta_DV/Business/BusinessSemantic/Enrollment/Procedures/prcBl_PostMemberSearch_New" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="inJson" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="5000"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="256">
        <element name="PersonID">
          <datatype name="VARCHAR" type="STRING" maxLength="16"/>
        </element>
        <element name="NetworkID">
          <datatype name="VARCHAR" type="STRING" maxLength="12"/>
        </element>
        <element name="FirstName">
          <datatype name="VARCHAR" type="STRING" maxLength="25"/>
        </element>
        <element name="LastName">
          <datatype name="VARCHAR" type="STRING" maxLength="35"/>
        </element>
        <element name="MiddleName">
          <datatype name="VARCHAR" type="STRING" maxLength="25"/>
        </element>
        <element name="NameSuffix">
          <datatype name="VARCHAR" type="STRING" maxLength="10"/>
        </element>
        <element name="PersonTitle">
          <datatype name="VARCHAR" type="STRING" maxLength="10"/>
        </element>
        <element name="BirthDate">
          <datatype name="VARCHAR" type="STRING" maxLength="25"/>
        </element>
        <element name="Information">
          <datatype name="VARCHAR" type="STRING" maxLength="50"/>
        </element>
        <element name="EthnicityCode">
          <datatype name="VARCHAR" type="STRING" maxLength="2"/>
        </element>
        <element name="RaceCode">
          <datatype name="VARCHAR" type="STRING" maxLength="8"/>
        </element>
        <element name="SSN">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="SpokenLanguage">
          <datatype name="VARCHAR" type="STRING" maxLength="80"/>
        </element>
        <element name="WrittenLanguage">
          <datatype name="VARCHAR" type="STRING" maxLength="80"/>
        </element>
        <element name="GenericIDFieldIND">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="NetworkFlag">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="EnrolContractFRMT">
          <datatype name="VARCHAR" type="STRING" maxLength="25"/>
        </element>
        <element name="EnrolMemberFRMT">
          <datatype name="VARCHAR" type="STRING" maxLength="5"/>
        </element>
        <element name="ContractId">
          <datatype name="VARCHAR" type="STRING" maxLength="25"/>
        </element>
        <element name="AltId">
          <datatype name="VARCHAR" type="STRING" maxLength="25"/>
        </element>
        <element name="AltIdFlag">
          <datatype name="VARCHAR" type="STRING" maxLength="5"/>
        </element>
        <element name="GenericId">
          <datatype name="VARCHAR" type="STRING" maxLength="225"/>
        </element>
        <element name="GenericIdContractFRMT">
          <datatype name="VARCHAR" type="STRING" maxLength="225"/>
        </element>
        <element name="GenericIdMemberFRMT">
          <datatype name="VARCHAR" type="STRING" maxLength="225"/>
        </element>
        <element name="ErrorCode">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="ErrorDescription">
          <datatype name="VARCHAR" type="STRING" maxLength="500"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/shared/Delta_DV/Business/Logical/Enrollment/Procedures/prcBl_MemberRequest" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inSearchJson" direction="IN">
        <datatype type="STRING" maxLength="50000"/>
      </element>
      <element name="outMemberRequest" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="FirstName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="LastName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="DateOfBirth">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="Brand">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="SSN">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ContractId">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="Enrolleeid">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="PersonId">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="SubscriberId">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="AlternateSubscriberId">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="CaseId">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="RfcId">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="GenericId">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/Physical/Common/prcPl_DateStringToDate" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inDateStr" direction="IN">
        <datatype type="STRING" maxLength="12"/>
      </element>
      <element name="outDate" direction="OUT">
        <datatype type="DATE"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/Physical/Formatting/PackagedQueries/Enrollment/pkgPl_MemberValidation" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="UCFirstName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="UCLastName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DateOfBirth" direction="IN">
        <datatype type="DATE"/>
      </element>
      <element name="NetworkId" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="NetworkFlag" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="SSN" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="EnrolContractID" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="EnrolMemberID" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="ContractId" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="PersonID" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="AltID" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="AltIDFlag" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="GenericIdFlag" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="GenericId" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="PersonID">
            <datatype type="STRING" maxLength="16"/>
          </element>
          <element name="FirstName">
            <datatype type="STRING" maxLength="25"/>
          </element>
          <element name="LastName">
            <datatype type="STRING" maxLength="35"/>
          </element>
          <element name="MiddleName">
            <datatype type="STRING" maxLength="25"/>
          </element>
          <element name="NameSuffix">
            <datatype type="STRING" maxLength="10"/>
          </element>
          <element name="PersonTitle">
            <datatype type="STRING" maxLength="10"/>
          </element>
          <element name="BirthDate">
            <datatype type="STRING" maxLength="25"/>
          </element>
          <element name="Information">
            <datatype type="STRING" maxLength="50"/>
          </element>
          <element name="EthnicityCode">
            <datatype type="STRING" maxLength="2"/>
          </element>
          <element name="RaceCode">
            <datatype type="STRING" maxLength="8"/>
          </element>
          <element name="SSN">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="SpokenLanguage">
            <datatype type="STRING" maxLength="80"/>
          </element>
          <element name="WrittenLanguage">
            <datatype type="STRING" maxLength="80"/>
          </element>
          <element name="GenericIDFieldIND">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">PROCEDURE prcBl_PostMemberSearch_New(
IN  inJson VARCHAR(5000),
   OUT result PIPE (
               PersonID VARCHAR(16),
               NetworkID VARCHAR(12),
               FirstName  VARCHAR(25),
               LastName  VARCHAR(35),
               MiddleName  VARCHAR(25),
               NameSuffix  VARCHAR(10),
               PersonTitle  VARCHAR(10),
               BirthDate VARCHAR(25),
               Information  VARCHAR(50),
               EthnicityCode  VARCHAR(2),
               RaceCode  VARCHAR(8),
               SSN INTEGER,
               SpokenLanguage  VARCHAR(80),
               WrittenLanguage  VARCHAR(80),
&#x9;&#x9;&#x9;   GenericIDFieldIND INTEGER,
               NetworkFlag INTEGER,
               EnrolContractFRMT VARCHAR(25),
               EnrolMemberFRMT VARCHAR(5),
               ContractId VARCHAR(25),
               AltId VARCHAR(25),
               AltIdFlag VARCHAR(5),
&#x9;&#x9;&#x9;   GenericId VARCHAR(225),
&#x9;&#x9;&#x9;   GenericIdContractFRMT VARCHAR(225),
&#x9;&#x9;&#x9;   GenericIdMemberFRMT VARCHAR(225),
               ErrorCode INTEGER,
               ErrorDescription VARCHAR(500)
        )
)
BEGIN

DECLARE curMemberJSONSearch CURSOR(
        FirstName VARCHAR(255),
&#x9;&#x9;LastName VARCHAR(255),
&#x9;&#x9;DateOfBirth VARCHAR(255),
        Brand VARCHAR(255),
&#x9;&#x9;SSN VARCHAR(255),
&#x9;&#x9;ContractId VARCHAR(255),
&#x9;&#x9;Enrolleeid VARCHAR(255),
        PersonId VARCHAR(255),
&#x9;&#x9;SubscriberId VARCHAR(255),
&#x9;&#x9;AlternateSubscriberId VARCHAR(255),
&#x9;    CaseId VARCHAR(255),
        RfcId VARCHAR(255),
&#x9;&#x9;GenericId VARCHAR(255));

DECLARE rowMemberJSONSearch ROW(
        FirstName VARCHAR(255),
&#x9;&#x9;LastName VARCHAR(255),
&#x9;&#x9;DateOfBirth VARCHAR(255),
        Brand VARCHAR(255),
&#x9;&#x9;SSN VARCHAR(255),
&#x9;&#x9;ContractId VARCHAR(255),
&#x9;&#x9;Enrolleeid VARCHAR(255),
        PersonId VARCHAR(255),
&#x9;&#x9;SubscriberId VARCHAR(255),
&#x9;&#x9;AlternateSubscriberId VARCHAR(255),
&#x9;    CaseId VARCHAR(255),
        RfcId VARCHAR(255),
&#x9;&#x9;GenericId VARCHAR(255));

DECLARE curMemberValidationSearch CURSOR(         
               PersonID VARCHAR(16),
              -- NetworkID VARCHAR(12),
               FirstName  VARCHAR(25),
               LastName  VARCHAR(35),
               MiddleName  VARCHAR(25),
               NameSuffix  VARCHAR(10),
               PersonTitle  VARCHAR(10),
               BirthDate VARCHAR(25),
               Information  VARCHAR(50),
               EthnicityCode  VARCHAR(2),
               RaceCode  VARCHAR(8),
               SSN  INTEGER,
               SpokenLanguage  VARCHAR(80),
               WrittenLanguage  VARCHAR(80),
&#x9;&#x9;&#x9;   GenericIDFieldIND INTEGER
 );
DECLARE rowMemberValidationSearch row(         
               PersonID VARCHAR(16),
              -- NetworkID VARCHAR(12),
               FirstName  VARCHAR(25),
               LastName  VARCHAR(35),
               MiddleName  VARCHAR(25),
               NameSuffix  VARCHAR(10),
               PersonTitle  VARCHAR(10),
               BirthDate VARCHAR(25),
               Information  VARCHAR(50),
               EthnicityCode  VARCHAR(2),
               RaceCode  VARCHAR(8),
               SSN  INTEGER,
               SpokenLanguage  VARCHAR(80),
               WrittenLanguage  VARCHAR(80),
&#x9;&#x9;&#x9;   GenericIDFieldIND INTEGER
 );

        DECLARE varFirstName VARCHAR(255);
        DECLARE varFirstNameFRMT VARCHAR(255);
&#x9;    DECLARE varLastName VARCHAR(255);
        DECLARE varLastNameFRMT VARCHAR(255);
&#x9;&#x9;DECLARE varDateOfBirth VARCHAR(12);        
        DECLARE varDateOfBirthFRMT DATE;
&#x9;&#x9;DECLARE varSSN VARCHAR(255);
        DECLARE varSSNFRMT INTEGER;
&#x9;&#x9;DECLARE varBrand VARCHAR(255);
        DECLARE varConvNetworkId VARCHAR(255);
&#x9;&#x9;DECLARE varSubscriberId VARCHAR(255);
        DECLARE varSubscriberFlag INTEGER DEFAULT 0;
  &#x9;&#x9;DECLARE varAlternateSubscriberId VARCHAR(255);
        DECLARE varAlternateSubscriberFlag INTEGER DEFAULT 0;
        DECLARE varCaseId VARCHAR(255);
        DECLARE varCaseIdFlag INTEGER DEFAULT 0;
        DECLARE varContractId VARCHAR(255);
&#x9;&#x9;DECLARE varEnrolleeid VARCHAR(255);
        DECLARE varPersonId  VARCHAR(255);
        DECLARE varRfcId  VARCHAR(255);
&#x9;&#x9;DECLARE varGenericId VARCHAR(255);
&#x9;&#x9;DECLARE varGenericIdFlag INTEGER DEFAULT 0;
&#x9;&#x9;DECLARE varGenericIdContractFRMT VARCHAR(255);
&#x9;&#x9;DECLARE varGenericIdMemberFRMT VARCHAR(255);
        DECLARE varRfcIdFlag INTEGER DEFAULT 0;
        DECLARE varAtlIdCnt INTEGER DEFAULT 0;
        DECLARE varAltID VARCHAR(255);
        DECLARE varAltIDFlag VARCHAR(255);
        DECLARE varEnrolContractFRMT VARCHAR(255);
        DECLARE varEnrolMemberFRMT VARCHAR(255);
        DECLARE varrecordcount INTEGER DEFAULT 0;
        DECLARE varNetworkFlag INTEGER DEFAULT 0;
        DECLARE varErrorCode INTEGER DEFAULT 0;
        DECLARE varErrorDescription VARCHAR(255);




CALL /shared/Delta_DV/Business/Logical/Enrollment/Procedures/prcBl_MemberRequest(inJson,curMemberJSONSearch);
FETCH curMemberJSONSearch INTO rowMemberJSONSearch;
IF NOT curMemberJSONSearch.FOUND THEN
   SET varErrorCode = 1;
   SET varErrorDescription = &apos;Invalid Request&apos;;
   INSERT INTO result(ErrorCode,ErrorDescription) VALUES (varErrorCode,varErrorDescription);
END IF;

SET varFirstName = rowMemberJSONSearch.FirstName ;
SET varLastName = rowMemberJSONSearch.LastName;
SET varDateOfBirth = rowMemberJSONSearch.DateOfBirth;
SET varBrand = rowMemberJSONSearch.Brand; 
SET varSSN = rowMemberJSONSearch.SSN;
SET varContractId = rowMemberJSONSearch.ContractId;
SET varEnrolleeid = rowMemberJSONSearch.Enrolleeid;
SET varPersonId = rowMemberJSONSearch.PersonId;
SET varSubscriberId = rowMemberJSONSearch.SubscriberId;
SET varAlternateSubscriberId = rowMemberJSONSearch.AlternateSubscriberId;
SET varCaseId = rowMemberJSONSearch.CaseId; 
SET varRfcId = rowMemberJSONSearch.RfcId; 
SET varGenericId = rowMemberJSONSearch.GenericId; 
CLOSE curMemberJSONSearch;
--Logic for AlternateID combinations
SET varSubscriberFlag = CASE WHEN varSubscriberId &lt;&gt; &apos;NULL&apos; THEN 1 ELSE 0 END;
SET varAlternateSubscriberFlag = CASE WHEN varAlternateSubscriberId &lt;&gt; &apos;NULL&apos; THEN 1 ELSE 0 END;
SET varCaseIdFlag = CASE WHEN varCaseId &lt;&gt; &apos;NULL&apos; THEN 1 ELSE 0 END;
SET varRfcIdFlag = CASE WHEN varRfcId &lt;&gt; &apos;NULL&apos; THEN 1 ELSE 0 END;
SET varAtlIdCnt = varSubscriberFlag+varAlternateSubscriberFlag+varCaseIdFlag+varRfcIdFlag;

--Execute the below code only if it is not an Invalid Request
--Validate Json request and return all error codes in the error array
IF (varErrorCode &lt;&gt; 1) THEN 
   IF (varFirstName =&apos;NULL&apos; or varLastName =&apos;NULL&apos; OR varDateOfBirth =&apos;NULL&apos;) AND (varSSN IS NULL and varEnrolleeid=&apos;NULL&apos; and varContractId=&apos;NULL&apos; AND varPersonId=&apos;NULL&apos; and varSubscriberId=&apos;NULL&apos; and varAlternateSubscriberId=&apos;NULL&apos; AND varCaseId =&apos;NULL&apos; AND varRfcId=&apos;NULL&apos; AND varGenericId=&apos;NULL&apos;) THEN
      SET varErrorCode = 2;
      SET varErrorDescription = &apos;(FirstName,LastName &amp; DateofBirth) OR (SSN/Enrolleeid/ContractID/PersonID/SuppliedID/AssignedID/CaseID/RfcID) OR (GenericID &amp; FirstName/LastName/DateofBirth) are mandatory fields.Please provide values for these fields&apos;;
      INSERT INTO result(ErrorCode,ErrorDescription) VALUES (varErrorCode,varErrorDescription);
   END IF;
   ---IF (varErrorCode &lt;&gt;2) THEN
   IF (varFirstName =&apos;NULL&apos; AND varLastName =&apos;NULL&apos; AND varDateOfBirth =&apos;NULL&apos;) AND ( varGenericId &lt;&gt;&apos;NULL&apos;) THEN
      SET varErrorCode = 9;
      SET varErrorDescription = &apos;Please provide values for FirstName/LastName/DateofBirth along with GenericID&apos;;
      INSERT INTO result(ErrorCode,ErrorDescription) VALUES (varErrorCode,varErrorDescription);
   END IF;
   --IF (varErrorCode &lt;&gt;9) THEN
   IF (varSSN IS NOT NULL OR varEnrolleeid &lt;&gt;&apos;NULL&apos; OR varContractId &lt;&gt;&apos;NULL&apos; OR varPersonId &lt;&gt;&apos;NULL&apos; OR varSubscriberId &lt;&gt;&apos;NULL&apos; OR varAlternateSubscriberId &lt;&gt;&apos;NULL&apos; OR varCaseId &lt;&gt;&apos;NULL&apos; OR varRfcId &lt;&gt; &apos;NULL&apos; ) AND ( varGenericId &lt;&gt;&apos;NULL&apos;) THEN
      SET varErrorCode = 10;
      SET varErrorDescription = &apos;(GenericID) AND (SSN/Enrolleeid/ContractID/PersonID/SuppliedID/AssignedID/CaseID/RfcID) are mutually exclusive .Cannot support values in both fields&apos;;
      INSERT INTO result(ErrorCode,ErrorDescription) VALUES (varErrorCode,varErrorDescription);
   END IF;&#x9;  
   --IF (varErrorCode &lt;&gt;10) THEN
   IF replace(varFirstName,&apos;*&apos;,&apos;&apos;) =&apos;&apos; or replace(varLastName,&apos;*&apos;,&apos;&apos;) =&apos;&apos;  THEN---Execute the below code only if Mandatory Fields are available in the request
      SET varErrorCode = 6;
      SET varErrorDescription = &apos;Cannot Support FirstName/LastName only with *. Atleast 1 Alphabet is expected along with *&apos;;
      INSERT INTO result(ErrorCode,ErrorDescription) VALUES (varErrorCode,varErrorDescription);
   END IF;
   --IF (varErrorCode &lt;&gt;6) THEN ---Execute the below code only if FirstName/LastName is Valid
   SELECT pFrmtCommDate.outDate 
   INTO   varDateOfBirthFRMT
   FROM   /shared/Delta_DV/Physical/Common/prcPl_DateStringToDate(varDateOfBirth) pFrmtCommDate;
   IF varDateOfBirth &lt;&gt;&apos;NULL&apos; AND (varDateOfBirthFRMT=&apos;&apos; OR varDateOfBirthFRMT IS NULL OR LENGTH(varDateOfBirth) &lt;&gt;10 or instr(varDateOfBirth,&apos;/&apos;,1,1) &lt;&gt; 3 or instr(varDateOfBirth,&apos;/&apos;,1,2) &lt;&gt; 6) THEN
      SET varErrorCode = 3;
      SET varErrorDescription = &apos;DateOfBirth format should be MM/DD/YYYY&apos;;
      INSERT INTO result(ErrorCode,ErrorDescription) VALUES (varErrorCode,varErrorDescription);
   END IF;
   --IF (varErrorCode &lt;&gt;3) THEN ---Execute the below code only if DateOfBirth Field is in Correct format
   IF varBrand &lt;&gt; &apos;DCUSA&apos; AND varBrand &lt;&gt; &apos;DD&apos; AND varBrand &lt;&gt; &apos;DI&apos; AND varBrand IS NOT NULL THEN
      SET varErrorCode = 4;
      SET varErrorDescription = &apos;Expected Brand Input data is DCUSA/DI/DD/no data. Please check the Brand Data&apos;;
      INSERT INTO result(ErrorCode,ErrorDescription) VALUES (varErrorCode,varErrorDescription);   
   END IF;
   --IF (varErrorCode &lt;&gt;4) THEN ---Execute the below code only if Brand input value is expected one
   IF varAtlIdCnt &gt; 1 THEN
      SET varErrorCode = 7;
      SET varErrorDescription = &apos;Multiple values in suppliedId/assignedId/caseId/rfcId is not supported. Search by providing single value in any of these fields&apos;; 
      INSERT INTO result(ErrorCode,ErrorDescription) VALUES (varErrorCode,varErrorDescription);  
   END IF;
   --IF (varErrorCode &lt;&gt;7) THEN--------Execute the below code only if AlternateID combination is provided as expected
   IF (varSSN NOT BETWEEN -2147483648 AND 2147483647) THEN
      SET varErrorCode = 8;
      SET varErrorDescription = varSSN ||&apos; Invalid SSN provided&apos;;   
      INSERT INTO result(ErrorCode,ErrorDescription) VALUES (varErrorCode,varErrorDescription);
   END IF; 
END IF; --IF (varErrorCode &lt;&gt; 1)

--IF (varErrorCode &lt;&gt;8) THEN--Execute the below code only if SSN is valid one 
--TESTING PURPOSE
--SET varConvNetworkId= CASE WHEN varBrand=&apos;DCUSA&apos; THEN &apos;PPO&apos; WHEN varBrand=&apos;DI&apos; THEN &apos;PREMIER&apos; WHEN varBrand IS NULL THEN &apos;XX&apos; END ;

-- Proceed only if there is no error
IF (varErrorCode = 0) THEN
   SET varConvNetworkId= CASE WHEN varBrand=&apos;DCUSA&apos; THEN &apos;%D%CARE%&apos; WHEN varBrand=&apos;DI&apos; THEN &apos;%DNTG%&apos; WHEN varBrand IS NULL THEN &apos;XX&apos; END ;
   SET varNetworkFlag= CASE WHEN varBrand=&apos;DD&apos; THEN 2 ELSE 1 END ;
   SET varFirstNameFRMT=case when right(varFirstName,1)=&apos;*&apos;and length(varFirstName)-length(replace(varFirstName,&apos;*&apos;,&apos;&apos;))=1 THEN concat(substr(varFirstName,1,length(varFirstName)-1),&apos;%&apos;) ELSE varFirstName end;
   SET varLastNameFRMT=case when right(varLastName,1)=&apos;*&apos; and length(varLastName)-length(replace(varLastName,&apos;*&apos;,&apos;&apos;))=1 THEN concat(substr(varLastName,1,length(varLastName)-1),&apos;%&apos;) ELSE varLastName end;
   SET varEnrolContractFRMT= case when varEnrolleeid=&apos;NULL&apos; THEN varEnrolleeid ELSE SUBSTR(varEnrolleeid,1,LENGTH(varEnrolleeid)-2) END;
   SET varEnrolMemberFRMT= case when varEnrolleeid=&apos;NULL&apos; THEN varEnrolleeid ELSE SUBSTR(varEnrolleeid,LENGTH(varEnrolleeid)-1,LENGTH(varEnrolleeid)) END;
   SET varAltID = case when varSubscriberId &lt;&gt; &apos;NULL&apos; THEN varSubscriberId
                       when varAlternateSubscriberId &lt;&gt; &apos;NULL&apos; THEN varAlternateSubscriberId
                       when varCaseId &lt;&gt;&apos;NULL&apos; THEN varCaseId
                       when varRfcId &lt;&gt;&apos;NULL&apos; THEN varRfcId  
                       ELSE &apos;NULL&apos;
                  END;
   SET varAltIDFlag = case when varSubscriberId &lt;&gt; &apos;NULL&apos; THEN &apos;SUPP&apos;
                           when varAlternateSubscriberId &lt;&gt; &apos;NULL&apos; THEN &apos;ASN&apos;
                           when varCaseId &lt;&gt;&apos;NULL&apos; THEN &apos;CASE&apos;
                           when varRfcId &lt;&gt;&apos;NULL&apos; THEN &apos;RFC&apos; 
                           ELSE &apos;NULL&apos; 
                      END;
   SET varSSNFRMT = CAST (varSSN AS INT);
   SET varGenericIdFlag = CASE WHEN varGenericId =&apos;NULL&apos; THEN 0 
                               ELSE 1 
                          END;
   SET varGenericIdContractFRMT = case when varGenericId=&apos;NULL&apos; THEN varGenericId 
                                       ELSE SUBSTR(varGenericId,1,LENGTH(varGenericId)-2) 
                                  END;
   SET varGenericIdMemberFRMT = case when varGenericId=&apos;NULL&apos; THEN varGenericId 
                                     ELSE SUBSTR(varGenericId,LENGTH(varGenericId)-1,LENGTH(varGenericId)) 
                                END;

   CALL /shared/Delta_DV/Physical/Formatting/PackagedQueries/Enrollment/pkgPl_MemberValidation
       (varFirstNameFRMT,varLastNameFRMT,varDateOfBirthFRMT,varConvNetworkId,varNetworkFlag,varSSNFRMT,varEnrolContractFRMT,varEnrolMemberFRMT,varContractId,varPersonId,varAltID,varAltIDFlag,varGenericIdFlag,varGenericId,curMemberValidationSearch);

   membersearch: BEGIN
      LOOP
         FETCH curMemberValidationSearch INTO rowMemberValidationSearch;
            IF NOT curMemberValidationSearch.FOUND THEN
               LEAVE membersearch;
            END IF;
            SET varrecordcount=1;
            INSERT INTO result (PersonID,NetworkID,FirstName,LastName,MiddleName,NameSuffix,
                                PersonTitle,BirthDate,Information,EthnicityCode,RaceCode,
                                SSN,SpokenLanguage,WrittenLanguage,GenericIDFieldIND,NetworkFlag,
                                EnrolContractFRMT,EnrolMemberFRMT,ContractId,AltId,AltIdFlag,
                                GenericId,GenericIdContractFRMT,GenericIdMemberFRMT,ErrorCode)
            VALUES (rowMemberValidationSearch.PersonID, varConvNetworkId, rowMemberValidationSearch.FirstName,
                    rowMemberValidationSearch.LastName, rowMemberValidationSearch.MiddleName, rowMemberValidationSearch.NameSuffix,
                    rowMemberValidationSearch.PersonTitle, rowMemberValidationSearch.BirthDate, rowMemberValidationSearch.Information,
                    rowMemberValidationSearch.EthnicityCode, rowMemberValidationSearch.RaceCode, rowMemberValidationSearch.SSN,
                    rowMemberValidationSearch.SpokenLanguage, rowMemberValidationSearch.WrittenLanguage, rowMemberValidationSearch.GenericIDFieldIND,
                    varNetworkFlag, varEnrolContractFRMT, varEnrolMemberFRMT, varContractId, varAltID, varAltIDFlag, varGenericId, varGenericIdContractFRMT,
                    varGenericIdMemberFRMT,0
                   );

            /*
            --MemeberEligibility 
            CALL /shared/Delta_DV/Physical/Formatting/PackagedQueries/Enrollment/pkgPl_EligibilityCoverageDetail
                (rowMemberValidationSearch.PersonID, varConvNetworkId, varNetworkFlag,
                 varEnrolContractFRMT, varEnrolMemberFRMT, varContractId,
                 varAltID, varAltIDFlag, rowMemberValidationSearch.GenericIDFieldIND,
                 varGenericId, varGenericIdContractFRMT, varGenericIdMemberFRMT,
                 currEligibilityCoverage
                );
&#x9;
&#x9;&#x9;&#x9;eligibilityCoverage: BEGIN
               LOOP
                  FETCH currEligibilityCoverage INTO rowEligibilityCoverage;
                     IF NOT currEligibilityCoverage.FOUND THEN
                        LEAVE eligibilityCoverage;
                     END IF;

                     INSERT INTO eligibilityCoverage(PersonId, NetworkId, NetworkFlag, EnroleeContractFRMT,
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;                     EnroleeMemberFRMT, MemContractID, AltID, AltIDFlag,
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;                     GenericIDFieldIND, GenericId, GenericIdContractFRMT,
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;                     GenericIdMemberFRMT, ContractID, MemberID, EnroleeID,
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;                     GroupID, GroupName, DivisionID, DivisionName, CoverageType,
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;                     CoverageTypeCode, CoverageTermReasonCode, DivisionSelfFunded,
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;                     RelationShipCode, RelationShip, EffDate, EndDate, MemberTermReasonCode,
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;                     WaitingPeriod, BenefitPkgID, Bl4, Bl5, Bl6, Bl7, RegulatoryAgency,
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;                     DefaultNetworkID, EmpGrpLvl3Id, EmpGrpLvl4Id)
                     VALUES (rowMemberValidationSearch.PersonID, varConvNetworkId, varNetworkFlag, varEnrolContractFRMT,
                             varEnrolMemberFRMT, varContractId, varAltID, varAltIDFlag, rowMemberValidationSearch.GenericIDFieldIND,
                             varGenericId, varGenericIdContractFRMT, varGenericIdMemberFRMT, rowEligibilityCoverage.ContractId,
                             rowEligibilityCoverage.MemberID, rowEligibilityCoverage.EnroleeID, rowEligibilityCoverage.GroupID,
                             rowEligibilityCoverage.GroupName, rowEligibilityCoverage.DivisionID, rowEligibilityCoverage.DivisionName, 
                             rowEligibilityCoverage.CoverageType, rowEligibilityCoverage.CoverageTypeCode, rowEligibilityCoverage.CoverageTermReasonCode,
                             rowEligibilityCoverage.DivisionSelfFunded, rowEligibilityCoverage.RelationShipCode, rowEligibilityCoverage.RelationShip,
                             rowEligibilityCoverage.EffDate, rowEligibilityCoverage.EndDate, rowEligibilityCoverage.MemberTermReasonCode,
                             rowEligibilityCoverage.WaitingPeriod, rowEligibilityCoverage.BenefitPkgID, rowEligibilityCoverage.Bl4, rowEligibilityCoverage.Bl5,
                             rowEligibilityCoverage.Bl6, rowEligibilityCoverage.Bl7, rowEligibilityCoverage.RegulatoryAgency, rowEligibilityCoverage.DefaultNetworkID,
                             rowEligibilityCoverage.EmpGrpLvl3Id, rowEligibilityCoverage.EmpGrpLvl4Id
                            );
&#x9;&#x9;&#x9;&#x9;END LOOP;
    &#x9;&#x9;&#x9;CLOSE currEligibilityCoverage;
  &#x9;&#x9;&#x9;END; --eligibilityCoverage

            --MemberIdentifier Block
            CALL /shared/Delta_DV/Physical/Formatting/PackagedQueries/Enrollment/pkgPl_MemberIdentifier
                 (rowMemberValidationSearch.PersonID, 
                  varConvNetworkId,varNetworkFlag,
                  varEnrolContractFRMT,
                  varEnrolMemberFRMT,varContractId,
                  varAltID,
                  varAltIDFlag,rowMemberValidationSearch.GenericIDFieldIND,varGenericId,
&#x9;&#x9;&#x9;&#x9;  varGenericIdContractFRMT,
&#x9;&#x9;&#x9;&#x9;  varGenericIdMemberFRMT,currMemberIdentifier);
&#x9;
            memberIdentifier: BEGIN
               LOOP
                  FETCH currMemberIdentifier INTO rowMemberIdentifier;
                  IF NOT currMemberIdentifier.FOUND THEN
                     LEAVE memberIdentifier;
                  END IF;

                  INSERT INTO memberIdentifier
                    (PersonId, NetworkId, NetworkFlag, EnroleeContractFRMT, EnroleeMemberFRMT,
                     MemContractID, AltID, AltIDFlag, GenericIDFieldIND, GenericId, GenericIdContractFRMT,
                     GenericIdMemberFRMT, Name, AlternateID, ContractID, EffDate, EndDate)
                  VALUES 
                    (rowMemberValidationSearch.PersonID, varConvNetworkId, varNetworkFlag, varEnrolContractFRMT,
                     varEnrolMemberFRMT, varContractId, varAltID, varAltIDFlag, rowMemberValidationSearch.GenericIDFieldIND,
                     varGenericId, varGenericIdContractFRMT, varGenericIdMemberFRMT, rowMemberIdentifier.Name,
                     rowMemberIdentifier.AlternateID, rowMemberIdentifier.ContractID, rowMemberIdentifier.EffDate,
                     rowMemberIdentifier.EndDate
&#x9;&#x9;&#x9;&#x9;&#x9;);
               END LOOP;
               CLOSE currMemberIdentifier;
            END; --memberIdentifier
            */
      END LOOP;
      CLOSE curMemberValidationSearch;
   END; --membersearch

   IF varrecordcount = 0 THEN 
      SET varErrorCode = 5;
      SET varErrorDescription = &apos;No data match was found for given search request&apos;;
      INSERT INTO result(ErrorCode,ErrorDescription) VALUES (varErrorCode,varErrorDescription);
   END IF;--End of ErrorCode 5
END IF; -- IF (varErrorCode = 0)

EXCEPTION
   ELSE
      --Log the exception
      SET varErrorCode = 99;
      IF LENGTH(CURRENT_EXCEPTION.MESSAGE) &gt; 1 THEN
         SET varErrorDescription = SUBSTR(CURRENT_EXCEPTION.MESSAGE,1,255);
      ELSE
         SET varErrorDescription = SUBSTR(CURRENT_EXCEPTION.NAME,1,255);
      END IF;
      INSERT INTO result(ErrorCode,ErrorDescription) VALUES (varErrorCode,varErrorDescription);
END</attribute>
  <attribute name="creationDate" type="LONG">1597297921357</attribute>
  <attribute name="creatorUserDomain" type="STRING">dev</attribute>
  <attribute name="creatorUserId" type="INTEGER">3980101</attribute>
  <attribute name="creatorUserName" type="STRING">dos59246</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609896176534</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">3980101</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1597297921357</attribute>
</metadata>