<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="prc_GetPaymentSearch_Copy_1" path="/shared/Delta_DV/Business/BusinessSemantic/Billing/Procedures/prc_GetPaymentSearch_Copy_1" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[This is where the logic to call different procedures per the values coming from JOSN takes place.If parent
 group has a value,if rollup id has a vlaue and if a rollup and billto comes
together,then seperate procedures are called.The 
values coming in JSON request is processed and split in this SQL script.]]></annotation>
  <parameters>
    <parameter name="inJson" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="5000"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="256">
        <element name="invoiceNumber">
          <datatype name="VARCHAR" type="STRING" maxLength="30"/>
        </element>
        <element name="paymentNumber">
          <datatype name="VARCHAR" type="STRING" maxLength="30"/>
        </element>
        <element name="invoiceDate">
          <datatype name="DATE" type="DATE"/>
        </element>
        <element name="billToDiv">
          <datatype name="VARCHAR" type="STRING" maxLength="40"/>
        </element>
        <element name="billToAccount">
          <datatype name="VARCHAR" type="STRING" maxLength="30"/>
        </element>
        <element name="billToID">
          <datatype name="VARCHAR" type="STRING" maxLength="100"/>
        </element>
        <element name="paymentInitiateDate">
          <datatype name="DATE" type="DATE"/>
        </element>
        <element name="paymentDate">
          <datatype name="DATE" type="DATE"/>
        </element>
        <element name="paymentType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="paymentStatus">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="originalInvoiceAmount">
          <datatype name="DOUBLE" type="FLOAT" minValue="2.2250738585072014E-308" maxValue="1.7976931348623157E308"/>
        </element>
        <element name="amountApplied">
          <datatype name="DOUBLE" type="FLOAT" minValue="2.2250738585072014E-308" maxValue="1.7976931348623157E308"/>
        </element>
        <element name="outstandBalance">
          <datatype name="DOUBLE" type="FLOAT" minValue="2.2250738585072014E-308" maxValue="1.7976931348623157E308"/>
        </element>
        <element name="adjustment">
          <datatype name="DOUBLE" type="FLOAT" minValue="2.2250738585072014E-308" maxValue="1.7976931348623157E308"/>
        </element>
        <element name="creditMemo">
          <datatype name="DOUBLE" type="FLOAT" minValue="2.2250738585072014E-308" maxValue="1.7976931348623157E308"/>
        </element>
        <element name="paymentAmount">
          <datatype name="DOUBLE" type="FLOAT" minValue="2.2250738585072014E-308" maxValue="1.7976931348623157E308"/>
        </element>
        <element name="paymentTotal">
          <datatype name="DOUBLE" type="FLOAT" minValue="2.2250738585072014E-308" maxValue="1.7976931348623157E308"/>
        </element>
        <element name="cashReceiptId">
          <datatype name="VARCHAR" type="STRING" maxLength="500"/>
        </element>
        <element name="NumberOfRowsPerPage">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="PageNumber">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="TotalPages">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="TotalRows">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="userInitiatePayment">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="confirmationEmailSent">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/shared/Delta_DV/Business/Logical/Billing/Procedures/prcBI_PaymentRequest" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/Business/Logical/Billing/Procedures/prcBI_PaymentSearchBillToComb" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/Business/Logical/Billing/Procedures/prcBI_PaymentSearchBillToGrp" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/Business/Logical/Billing/Procedures/prcBI_PaymentSearchBillToRollup" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/Business/Logical/Billing/Procedures/prcBI_PaymentSearchParentGrp" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">PROCEDURE prc_GetPaymentSearch_Copy_1(IN inJson VARCHAR(5000), OUT result cursor(invoiceNumber VARCHAR(30), paymentNumber VARCHAR(30), invoiceDate DATE, billToDiv VARCHAR(40), billToAccount VARCHAR(30), billToID VARCHAR(100), paymentInitiateDate DATE, paymentDate DATE, paymentType VARCHAR(255), paymentStatus VARCHAR(255), originalInvoiceAmount DOUBLE, amountApplied DOUBLE, outstandBalance DOUBLE, adjustment DOUBLE, creditMemo DOUBLE, paymentAmount DOUBLE, paymentTotal DOUBLE, cashReceiptId VARCHAR(500), NumberOfRowsPerPage INTEGER, PageNumber INTEGER, TotalPages INTEGER, TotalRows INTEGER, userInitiatePayment VARCHAR(255), confirmationEmailSent VARCHAR(255)))
    BEGIN
        DECLARE curPaymentJSONSearch CURSOR(SortField VARCHAR(500), BillToIds VARCHAR(4000), cashReceiptIds VARCHAR(4000), RBillToIds VARCHAR(4000), ParentGroupNumber VARCHAR(30), PaymentNumber VARCHAR(50), ReceiptAmountMax DECIMAL(27, 2), ReceiptAmountMin DECIMAL(27, 2), PaymentDateStart DATE, PaymentDateEnd DATE, InvoiceNumber VARCHAR(50), InvoiceDateStart DATE, InvoiceDateRangeEnd DATE, PaymentAmount VARCHAR(50), PaymentTypes VARCHAR(1000), PaymentStatuses VARCHAR(1000), AppliedAmountMax DECIMAL(27, 2), AppliedAmountMin DECIMAL(27, 2), AdjustmentAmountMax DECIMAL(27, 2), AdjustmentAmountMin DECIMAL(27, 2), OriginalInvoiceAmountMax DECIMAL(27, 2), OriginalInvoiceAmountMin DECIMAL(27, 2), OutstandingBalanceMax DECIMAL(27, 2), OutstandingBalanceMin DECIMAL(27, 2), CreditMemoMax DECIMAL(27, 2), CreditMemoMin DECIMAL(27, 2), Brand VARCHAR(20), NumberOfRowsPerPage INTEGER, PageNumber INTEGER);
        DECLARE rowPaymentJSONSearch ROW(SortField VARCHAR(500),
            --SortOrder VARCHAR(20),
            BillToIds VARCHAR(4000), cashReceiptIds VARCHAR(4000), RBillToIds VARCHAR(4000), ParentGroupNumber VARCHAR(30), PaymentNumber VARCHAR(50), ReceiptAmountMax DECIMAL(27, 2), ReceiptAmountMin DECIMAL(27, 2), PaymentDateStart DATE, PaymentDateEnd DATE, InvoiceNumber VARCHAR(50), InvoiceDateStart DATE, InvoiceDateRangeEnd DATE, PaymentAmount VARCHAR(50), PaymentTypes VARCHAR(1000), PaymentStatuses VARCHAR(1000), AppliedAmountMax DECIMAL(27, 2), AppliedAmountMin DECIMAL(27, 2), AdjustmentAmountMax DECIMAL(27, 2), AdjustmentAmountMin DECIMAL(27, 2), OriginalInvoiceAmountMax DECIMAL(27, 2), OriginalInvoiceAmountMin DECIMAL(27, 2), OutstandingBalanceMax DECIMAL(27, 2), OutstandingBalanceMin DECIMAL(27, 2), CreditMemoMax DECIMAL(27, 2), CreditMemoMin DECIMAL(27, 2), Brand VARCHAR(20), NumberOfRowsPerPage INTEGER, PageNumber INTEGER);
        DECLARE varSortField VARCHAR(500);
        DECLARE varBillToID VARCHAR(4000);
        DECLARE varRBillToID VARCHAR(4000);
        DECLARE varParentGroupNumber VARCHAR(30);
        DECLARE varPaymentNumber VARCHAR(50);
        DECLARE varReceiptAmountMax DECIMAL(27, 2);
        DECLARE varReceiptAmountMin DECIMAL(27, 2);
        DECLARE varPaymentDateStart DATE;
        DECLARE varPaymentDateEnd DATE;
        DECLARE varInvoiceNumber VARCHAR(50);
        DECLARE varInvoiceDateStart DATE;
        DECLARE varInvoiceDateRangeEnd DATE;
        DECLARE varPaymentAmount VARCHAR(50);
        DECLARE varPaymentTypes VARCHAR(1000);
        DECLARE varPaymentStatuses VARCHAR(1000);
        DECLARE varAppliedAmountMax DECIMAL(27, 2);
        DECLARE varAppliedAmountMin DECIMAL(27, 2);
        DECLARE varAdjustmentAmountMax DECIMAL(27, 2);
        DECLARE varAdjustmentAmountMin DECIMAL(27, 2);
        DECLARE varOriginalInvoiceAmountMax DECIMAL(27, 2);
        DECLARE varOriginalInvoiceAmountMin DECIMAL(27, 2);
        DECLARE varOutstandingBalanceMax DECIMAL(27, 2);
        DECLARE varOutstandingBalanceMin DECIMAL(27, 2);
        DECLARE varCreditMemoMax DECIMAL(27, 2);
        DECLARE varCreditMemoMin DECIMAL(27, 2);
        DECLARE varBrand VARCHAR(20);
        DECLARE varNumberOfRowsPerPage INTEGER;
        DECLARE varPageNumber INTEGER;
        --DECLARE varTotalRows INTEGER;
        DECLARE PGISNULL varchar(4000);
        DECLARE BGISNULL varchar(4000);
        DECLARE BRISNULL varchar(4000);
        DECLARE varCashReceiptId varchar(4000);
        CALL /shared/Delta_DV/Business/Logical/Billing/Procedures/prcBI_PaymentRequest(inJson, curPaymentJSONSearch);
        pPaymentSearch1:BEGIN
            LOOP
                FETCH curPaymentJSONSearch INTO
                    rowPaymentJSONSearch;
                IF NOT curPaymentJSONSearch.FOUND THEN
                    LEAVE pPaymentSearch1;
                END IF;
                SET varBillToID = case 
                    when rowPaymentJSONSearch.BillToIds is null then &apos;(&apos;&apos;x&apos;&apos;)&apos;
                    when rowPaymentJSONSearch.BillToIds = &apos;()&apos; then &apos;(&apos;&apos;x&apos;&apos;)&apos;
                    else rowPaymentJSONSearch.BillToIds
                end;
                --SET BGISNULL = NVL2(varBillToID,&apos;&apos;||varBillToID,&apos;TRUE&apos;);
                SET BGISNULL = case 
                    when varBillToID = &apos;(&apos;&apos;x&apos;&apos;)&apos; then &apos;TRUE&apos;
                    else varBillToID
                end;
                --call print(varBillToID);
                --call print(BGISNULL);&#x9;
                SET varRBillToID = case 
                    when rowPaymentJSONSearch.RBillToIds is null then &apos;(&apos;&apos;x&apos;&apos;)&apos;
                    when rowPaymentJSONSearch.RBillToIds = &apos;()&apos; then &apos;(&apos;&apos;x&apos;&apos;)&apos;
                    else rowPaymentJSONSearch.RBillToIds
                end;
                SET BRISNULL = case 
                    when varRBillToID = &apos;(&apos;&apos;x&apos;&apos;)&apos; then &apos;TRUE&apos;
                    else varRBillToID
                end;
                --call print(varBillToID);&#x9;&#x9;
                --call print(BRISNULL);&#x9;
                SET varNumberOfRowsPerPage = rowPaymentJSONSearch.NumberOfRowsPerPage;
                SET varPageNumber = rowPaymentJSONSearch.PageNumber;
                SET varInvoiceNumber = rowPaymentJSONSearch.InvoiceNumber;
                SET varSortField = rowPaymentJSONSearch.SortField;
                --SET varSortOrder = rowPaymentJSONSearch.SortOrder;
                --SET varBillToID = rowPaymentJSONSearch.BillToIDs;
                SET varParentGroupNumber = rowPaymentJSONSearch.ParentGroupNumber;
                --call print(varParentGroupNumber);
                SET PGISNULL = NVL2(varParentGroupNumber, &apos;&apos; || varParentGroupNumber, &apos;TRUE&apos;);
                --call print(PGISNULL);
                SET varSortField = NVL2(varSortField, &apos;&apos; || varSortField, &apos;billToId&apos;);
                --SET varSortOrder= NVL2(varSortOrder,&apos;&apos;||varSortOrder,&apos;asc&apos;);
                --call print(varSortField);
                --call print(varSortOrder);
                SET varPaymentNumber = rowPaymentJSONSearch.paymentNumber;
                SET varReceiptAmountMax = rowPaymentJSONSearch.ReceiptAmountMax;
                SET varReceiptAmountMin = rowPaymentJSONSearch.ReceiptAmountMin;
                SET varPaymentDateStart = rowPaymentJSONSearch.PaymentDateStart;
                SET varPaymentDateEnd = rowPaymentJSONSearch.PaymentDateEnd;
                SET varInvoiceNumber = rowPaymentJSONSearch.InvoiceNumber;
                SET varInvoiceDateStart = rowPaymentJSONSearch.InvoiceDateStart;
                SET varInvoiceDateRangeEnd = rowPaymentJSONSearch.InvoiceDateRangeEnd;
                SET varPaymentAmount = rowPaymentJSONSearch.PaymentAmount;
                SET varPaymentTypes = case 
                    when rowPaymentJSONSearch.PaymentTypes is null then &apos;(&apos;&apos;x&apos;&apos;)&apos;
                    when rowPaymentJSONSearch.PaymentTypes = &apos;()&apos; then &apos;(&apos;&apos;x&apos;&apos;)&apos;
                    else UPPER(rowPaymentJSONSearch.PaymentTypes)
                end;
                SET varPaymentStatuses = case 
                    when rowPaymentJSONSearch.PaymentStatuses is null then &apos;(&apos;&apos;x&apos;&apos;)&apos;
                    when rowPaymentJSONSearch.PaymentStatuses = &apos;()&apos; then &apos;(&apos;&apos;x&apos;&apos;)&apos;
                    else replace(replace(rowPaymentJSONSearch.PaymentStatuses, &apos;Successful&apos;, (&apos;CLEARED&apos;&apos;,&apos;&apos;REMITTED&apos;)), &apos;Rejected&apos;, &apos;REVERSED&apos;)
                end;
                --call print(varPaymentStatuses);&#x9;&#x9;&#x9;&#x9;&#x9;
                SET varAppliedAmountMax = rowPaymentJSONSearch.AppliedAmountMax;
                SET varAppliedAmountMin = rowPaymentJSONSearch.AppliedAmountMin;
                SET varAdjustmentAmountMax = rowPaymentJSONSearch.AdjustmentAmountMax;
                SET varAdjustmentAmountMin = rowPaymentJSONSearch.AdjustmentAmountMin;
                SET varOriginalInvoiceAmountMax = rowPaymentJSONSearch.OriginalInvoiceAmountMax;
                SET varOriginalInvoiceAmountMin = rowPaymentJSONSearch.OriginalInvoiceAmountMin;
                SET varOutstandingBalanceMax = rowPaymentJSONSearch.OutstandingBalanceMax;
                SET varOutstandingBalanceMin = rowPaymentJSONSearch.OutstandingBalanceMin;
                SET varCreditMemoMax = rowPaymentJSONSearch.CreditMemoMax;
                SET varCreditMemoMin = rowPaymentJSONSearch.CreditMemoMin;
                SET varBrand = rowPaymentJSONSearch.Brand;
                --call print(varBrand);
                SET varNumberOfRowsPerPage = rowPaymentJSONSearch.NumberOfRowsPerPage;
                SET varPageNumber = rowPaymentJSONSearch.PageNumber;
                SET varCashReceiptId = case 
                    when rowPaymentJSONSearch.cashReceiptIds is null then &apos;(&apos;&apos;x&apos;&apos;)&apos;
                    when rowPaymentJSONSearch.cashReceiptIds = &apos;()&apos; then &apos;(&apos;&apos;x&apos;&apos;)&apos;
                    else rowPaymentJSONSearch.cashReceiptIds
                end;
            END LOOP;
            CLOSE curPaymentJSONSearch;
        END;
        IF PGISNULL &lt;&gt; &apos;TRUE&apos; THEN
            OPEN result FOR SELECT 
                    invoiceNumber,
                    paymentNumber,
                    invoiceDate,
                    billToDiv,
                    billToAccount,
                    billToID,
                    paymentInitiateDate,
                    paymentDate,
                    paymentType,
                    paymentStatus,
                    originalInvoiceAmount,
                    amountApplied,
                    outstandBalance,
                    adjustment,
                    creditMemo,
                    paymentAmount,
                    paymentTotal,
                    cashReceiptId,
                    varNumberOfRowsPerPage as NumberOfRowsPerPage,
                    varPageNumber as PageNumber,
                    CEILING(totalNumberOfRows / varNumberOfRowsPerPage) AS TotalPages,
                    totalNumberOfRows as TotalRows,
                    &apos; &apos; userInitiatePayment,
                    &apos; &apos; confirmationEmailSent
                from /shared/Delta_DV/Business/Logical/Billing/Procedures/prcBI_PaymentSearchParentGrp(varSortField, varBillToID, varParentGroupNumber, varPaymentNumber, varReceiptAmountMax, varReceiptAmountMin, varPaymentDateStart, varPaymentDateEnd, varInvoiceNumber, varInvoiceDateStart, varInvoiceDateRangeEnd, varPaymentAmount, varPaymentTypes, varPaymentStatuses, varAppliedAmountMax, varAppliedAmountMin, varOriginalInvoiceAmountMax, varOriginalInvoiceAmountMin, varOutstandingBalanceMax, varOutstandingBalanceMin, varAdjustmentAmountMax, varAdjustmentAmountMin, varCreditMemoMax, varCreditMemoMin, varBrand, varCashReceiptId, varNumberOfRowsPerPage, varPageNumber);
        ELSEIF PGISNULL = &apos;TRUE&apos; and BGISNULL = &apos;TRUE&apos; and BRISNULL &lt;&gt; &apos;TRUE&apos; THEN
            OPEN result FOR SELECT 
                    invoiceNumber,
                    paymentNumber,
                    invoiceDate,
                    billToDiv,
                    billToAccount,
                    billToID,
                    paymentInitiateDate,
                    paymentDate,
                    paymentType,
                    paymentStatus,
                    originalInvoiceAmount,
                    amountApplied,
                    outstandBalance,
                    adjustment,
                    creditMemo,
                    paymentAmount,
                    paymentTotal,
                    cashReceiptId,
                    varNumberOfRowsPerPage as NumberOfRowsPerPage,
                    varPageNumber as PageNumber,
                    CEILING(totalNumberOfRows / varNumberOfRowsPerPage) AS TotalPages,
                    totalNumberOfRows as TotalRows,
                    &apos; &apos; userInitiatePayment,
                    &apos; &apos; confirmationEmailSent
                from /shared/Delta_DV/Business/Logical/Billing/Procedures/prcBI_PaymentSearchBillToRollup(varSortField, varRBillToID, varParentGroupNumber, varPaymentNumber, varReceiptAmountMax, varReceiptAmountMin, varPaymentDateStart, varPaymentDateEnd, varInvoiceNumber, varInvoiceDateStart, varInvoiceDateRangeEnd, varPaymentAmount, varPaymentTypes, varPaymentStatuses, varAppliedAmountMax, varAppliedAmountMin, varOriginalInvoiceAmountMax, varOriginalInvoiceAmountMin, varOutstandingBalanceMax, varOutstandingBalanceMin, varAdjustmentAmountMax, varAdjustmentAmountMin, varCreditMemoMax, varCreditMemoMin, varBrand, varCashReceiptId, varNumberOfRowsPerPage, varPageNumber);
        ELSEIF PGISNULL = &apos;TRUE&apos; and BGISNULL &lt;&gt; &apos;TRUE&apos; and BRISNULL &lt;&gt; &apos;TRUE&apos; THEN
            OPEN result FOR SELECT 
                    invoiceNumber,
                    paymentNumber,
                    invoiceDate,
                    billToDiv,
                    billToAccount,
                    billToID,
                    paymentInitiateDate,
                    paymentDate,
                    paymentType,
                    paymentStatus,
                    originalInvoiceAmount,
                    amountApplied,
                    outstandBalance,
                    adjustment,
                    creditMemo,
                    paymentAmount,
                    paymentTotal,
                    cashReceiptId,
                    varNumberOfRowsPerPage as NumberOfRowsPerPage,
                    varPageNumber as PageNumber,
                    CEILING(totalNumberOfRows / varNumberOfRowsPerPage) AS TotalPages,
                    totalNumberOfRows as TotalRows,
                    &apos; &apos; userInitiatePayment,
                    &apos; &apos; confirmationEmailSent
                from /shared/Delta_DV/Business/Logical/Billing/Procedures/prcBI_PaymentSearchBillToComb(varSortField, varBillToID, varParentGroupNumber, varPaymentNumber, varReceiptAmountMax, varReceiptAmountMin, varPaymentDateStart, varPaymentDateEnd, varInvoiceNumber, varInvoiceDateStart, varInvoiceDateRangeEnd, varPaymentAmount, varPaymentTypes, varPaymentStatuses, varAppliedAmountMax, varAppliedAmountMin, varOriginalInvoiceAmountMax, varOriginalInvoiceAmountMin, varOutstandingBalanceMax, varOutstandingBalanceMin, varAdjustmentAmountMax, varAdjustmentAmountMin, varCreditMemoMax, varCreditMemoMin, varBrand, varCashReceiptId, varNumberOfRowsPerPage, varPageNumber, varRBillToID);
        ELSEIF PGISNULL = &apos;TRUE&apos; THEN
            --call print(varCashReceiptId);&#x9;&#x9;
            OPEN result FOR SELECT 
                    invoiceNumber,
                    paymentNumber,
                    invoiceDate,
                    billToDiv,
                    billToAccount,
                    billToID,
                    paymentInitiateDate,
                    paymentDate,
                    paymentType,
                    paymentStatus,
                    originalInvoiceAmount,
                    amountApplied,
                    outstandBalance,
                    adjustment,
                    creditMemo,
                    paymentAmount,
                    paymentTotal,
                    cashReceiptId,
                    varNumberOfRowsPerPage as NumberOfRowsPerPage,
                    varPageNumber as PageNumber,
                    CEILING(totalNumberOfRows / varNumberOfRowsPerPage) AS TotalPages,
                    totalNumberOfRows as TotalRows,
                    &apos; &apos;userInitiatePayment,
                    &apos; &apos;confirmationEmailSent
                from /shared/Delta_DV/Business/Logical/Billing/Procedures/prcBI_PaymentSearchBillToGrp(varSortField, varBillToID, varParentGroupNumber, varPaymentNumber, varReceiptAmountMax, varReceiptAmountMin, varPaymentDateStart, varPaymentDateEnd, varInvoiceNumber, varInvoiceDateStart, varInvoiceDateRangeEnd, varPaymentAmount, varPaymentTypes, varPaymentStatuses, varAppliedAmountMax, varAppliedAmountMin, varOriginalInvoiceAmountMax, varOriginalInvoiceAmountMin, varOutstandingBalanceMax, varOutstandingBalanceMin, varAdjustmentAmountMax, varAdjustmentAmountMin, varCreditMemoMax, varCreditMemoMin, varBrand, varCashReceiptId, varNumberOfRowsPerPage, varPageNumber);
        END IF;
    END</attribute>
  <attribute name="creationDate" type="LONG">1596614309420</attribute>
  <attribute name="creatorUserDomain" type="STRING">dev</attribute>
  <attribute name="creatorUserId" type="INTEGER">3980101</attribute>
  <attribute name="creatorUserName" type="STRING">dos59246</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">2</attribute>
  <attribute name="impactMessage" type="STRING">Stored procedure expected input datatype CURSOR (SortField VARCHAR(500), SearchDetails VARCHAR(40000), BillToIds VARCHAR(40000), CashReceiptIds VARCHAR(40000), RBillToIds VARCHAR(40000), ParentGroupNumber VARCHAR(30), PaymentNumber VARCHAR(50), ReceiptAmountMax DECIMAL(27,2), ReceiptAmountMin DECIMAL(27,2), PaymentDateStart DATE, PaymentDateEnd DATE, InvoiceNumber VARCHAR(50), InvoiceDateStart DATE, InvoiceDateRangeEnd DATE, PaymentAmount VARCHAR(50), PaymentTypes VARCHAR(1000), PaymentStatuses VARCHAR(1000), AppliedAmountMax DECIMAL(27,2), AppliedAmountMin DECIMAL(27,2), AdjustmentAmountMax DECIMAL(27,2), AdjustmentAmountMin DECIMAL(27,2), OriginalInvoiceAmountMax DECIMAL(27,2), OriginalInvoiceAmountMin DECIMAL(27,2), OutstandingBalanceMax DECIMAL(27,2), OutstandingBalanceMin DECIMAL(27,2), CreditMemoMax DECIMAL(27,2), CreditMemoMin DECIMAL(27,2), Brand VARCHAR(20), NumberOfRowsPerPage INTEGER, PageNumber INTEGER) but actual datatype CURSOR (SortField VARCHAR(500), BillToIds VARCHAR(4000), cashReceiptIds VARCHAR(4000), RBillToIds VARCHAR(4000), ParentGroupNumber VARCHAR(30), PaymentNumber VARCHAR(50), ReceiptAmountMax DECIMAL(27,2), ReceiptAmountMin DECIMAL(27,2), PaymentDateStart DATE, PaymentDateEnd DATE, InvoiceNumber VARCHAR(50), InvoiceDateStart DATE, InvoiceDateRangeEnd DATE, PaymentAmount VARCHAR(50), PaymentTypes VARCHAR(1000), PaymentStatuses VARCHAR(1000), AppliedAmountMax DECIMAL(27,2), AppliedAmountMin DECIMAL(27,2), AdjustmentAmountMax DECIMAL(27,2), AdjustmentAmountMin DECIMAL(27,2), OriginalInvoiceAmountMax DECIMAL(27,2), OriginalInvoiceAmountMin DECIMAL(27,2), OutstandingBalanceMax DECIMAL(27,2), OutstandingBalanceMin DECIMAL(27,2), CreditMemoMax DECIMAL(27,2), CreditMemoMin DECIMAL(27,2), Brand VARCHAR(20), NumberOfRowsPerPage INTEGER, PageNumber INTEGER) is incompatible.  On line 40, column 96.  [parser-2900950]</attribute>
  <attribute name="lastModifiedDate" type="LONG">1612478967656</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">dev</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">3980101</attribute>
  <attribute name="lastModifiedUserName" type="STRING">dca32905</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="public_constants" type="NULL"/>
  <attribute name="public_exceptions" type="NULL"/>
  <attribute name="public_types" type="NULL"/>
  <attribute name="references" type="NULL"/>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1596614309420</attribute>
</metadata>