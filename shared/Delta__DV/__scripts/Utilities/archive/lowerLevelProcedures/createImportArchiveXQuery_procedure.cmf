<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="createImportArchiveXQuery" path="/shared/Delta_DV/_scripts/Utilities/archive/lowerLevelProcedures/createImportArchiveXQuery" type="PROCEDURE" subtype="XQUERY_TRANSFORM_PROCEDURE" changeToken="0">
  <annotation><![CDATA[createImportArchiveXQuery:

    This procedure performs a transformation on the VARBINARY car file archive data into the request XML required for 
&#x9;&#x9;the procedure /services/webservices/system/admin/archive/operations/createImportArchive.

    Input:
        car_file_os_full_path - The full path to the archive car file in the Data Virtualization file system.

    Output:
&#x9;&#x9;importRequest&#x9;/services/webservices/system/admin/archive/operations/ArchiveSchema.&quot;{http://www.compositesw.com/services/system/admin/archive}createImportArchive&quot;

    Modified Date:  Modified By:        CSW Version:    Reason:
    12/22/2017     &#x9;Mike Tinius     &#x9;7.0.1           Created new to be transform the varbinary car file into an XML request


&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]></annotation>
  <parameters>
    <parameter name="createImportArchive" direction="OUT" nullable="true">
      <datatype name="createImportArchive" namespace="http://www.compositesw.com/services/system/admin/archive" referenceDefinitionSet="/services/webservices/system/admin/archive/operations/ArchiveSchema" referenceType="{http://www.compositesw.com/services/system/admin/archive}createImportArchive" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/archive}createImportArchive">
        <schemaDatatype>
          <datatype name="createImportArchive" namespace="http://www.compositesw.com/services/system/admin/archive" superTypeName="createImportArchiveRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/archive" subType="ELEMENT_DECL" type="TREE" refId="257">
            <element name="data" namespace="http://www.compositesw.com/services/system/admin/archive">
              <datatype name="base64Binary" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="BINARY"/>
            </element>
          </datatype>
        </schemaDatatype>
      </datatype>
    </parameter>
    <parameter name="car_file_os_full_path" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
      <attribute name="Customized" type="STRING">metadata.added;datatype.changed;direction.changed;name.changed</attribute>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/services/webservices/system/admin/archive/operations/ArchiveSchema" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/archive/lowerLevelProcedures/getArchiveFile" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <attribute name="creationDate" type="LONG">1513969437273</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">true</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609965948495</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="p:1:Customized" type="STRING">metadata.added;datatype.changed;direction.changed;name.changed</attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1513969437273</attribute>
  <attribute name="transformModel" type="NULL"/>
  <attribute name="xquery" type="STRING">declare copy-namespaces no-preserve,inherit;
declare namespace ns1=&quot;http://www.compositesw.com/services/system/admin/archive&quot;;
declare namespace ns2=&quot;http://www.w3.org/2001/XMLSchema&quot;;
declare variable $car_file_os_full_path external;

&lt;root xmlns:ns2=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;{
  let $nodes := (
    let $inputs := (if (empty($car_file_os_full_path)) then &quot;NULL&quot; else concat(concat(&quot;&apos;&quot;,$car_file_os_full_path), &quot;&apos;&quot;) cast as xs:string)
    let $query := concat( &quot;select data from /shared/Delta_DV/&quot;&quot;_scripts&quot;&quot;/Utilities/archive/lowerLevelProcedures/getArchiveFile(&quot;, concat( string-join($inputs,&quot;,&quot;), &quot;)&quot;))
    for $getArchiveFile in composite:executeQuery($query)//result
    return
    element ns1:createImportArchive {
      element ns1:data {$getArchiveFile/data/text()}
    }
  )
  return
  $nodes[1]
}&lt;/root&gt;/ns1:createImportArchive</attribute>
  <attribute name="xqueryModel" type="STRING">
&lt;xqueryModel customized=&quot;false&quot; version=&quot;new&quot;&gt;
  &lt;rootNode&gt;
    &lt;nodeType&gt;COMPLEX&lt;/nodeType&gt;
    &lt;element name=&quot;createImportArchive&quot; namespace=&quot;http://www.compositesw.com/services/system/admin/archive&quot;&gt;
      &lt;datatype name=&quot;createImportArchive&quot; namespace=&quot;http://www.compositesw.com/services/system/admin/archive&quot; referenceDefinitionSet=&quot;/services/webservices/system/admin/archive/operations/ArchiveSchema&quot; referenceType=&quot;{http://www.compositesw.com/services/system/admin/archive}createImportArchive&quot; subType=&quot;ELEMENT_DECL&quot; type=&quot;XML&quot; contentConstraint=&quot;SEQUENCE&quot; schemaConstraint=&quot;ANY&quot; componentType=&quot;ELEMENT&quot; componentName=&quot;{http://www.compositesw.com/services/system/admin/archive}createImportArchive&quot;&gt;
        &lt;schemaDatatype&gt;
          &lt;datatype name=&quot;createImportArchive&quot; namespace=&quot;http://www.compositesw.com/services/system/admin/archive&quot; superTypeName=&quot;createImportArchiveRequest&quot; superTypeNamespace=&quot;http://www.compositesw.com/services/system/admin/archive&quot; subType=&quot;ELEMENT_DECL&quot; type=&quot;TREE&quot; refId=&quot;1&quot;&gt;
            &lt;element name=&quot;data&quot; namespace=&quot;http://www.compositesw.com/services/system/admin/archive&quot;&gt;
              &lt;datatype name=&quot;base64Binary&quot; namespace=&quot;http://www.w3.org/2001/XMLSchema&quot; superTypeName=&quot;anySimpleType&quot; superTypeNamespace=&quot;http://www.w3.org/2001/XMLSchema&quot; type=&quot;BINARY&quot;/&gt;
            &lt;/element&gt;
          &lt;/datatype&gt;
        &lt;/schemaDatatype&gt;
      &lt;/datatype&gt;
    &lt;/element&gt;
    &lt;sourcePath&gt;/shared/Delta_DV/_scripts/Utilities/archive/lowerLevelProcedures/getArchiveFile&lt;/sourcePath&gt;
    &lt;sourceType&gt;PROCEDURE&lt;/sourceType&gt;
    &lt;sourceSignature&gt;
      &lt;datatype type=&quot;PROCEDURE&quot; refId=&quot;1&quot;&gt;
        &lt;element name=&quot;car_file_os_full_path&quot; direction=&quot;IN&quot;&gt;
          &lt;datatype type=&quot;STRING&quot; maxLength=&quot;2147483647&quot;/&gt;
        &lt;/element&gt;
        &lt;element name=&quot;result&quot; direction=&quot;OUT&quot;&gt;
          &lt;datatype type=&quot;TABLE&quot; refId=&quot;2&quot;&gt;
            &lt;element name=&quot;data&quot;&gt;
              &lt;datatype type=&quot;BINARY&quot; maxLength=&quot;2147483647&quot;/&gt;
            &lt;/element&gt;
          &lt;/datatype&gt;
        &lt;/element&gt;
      &lt;/datatype&gt;
    &lt;/sourceSignature&gt;
    &lt;sourceAlias&gt;getArchiveFile&lt;/sourceAlias&gt;
    &lt;sourceJoin/&gt;
    &lt;sourceFilter&gt;
      &lt;text/&gt;
    &lt;/sourceFilter&gt;
    &lt;sourceSortOrder/&gt;
    &lt;sourceGroupBy/&gt;
    &lt;sourceInputs&gt;
      &lt;type&gt;
        &lt;datatype name=&quot;TREE&quot; type=&quot;TREE&quot; refId=&quot;1&quot;&gt;
          &lt;element name=&quot;car_file_os_full_path&quot; direction=&quot;IN&quot;&gt;
            &lt;datatype name=&quot;String&quot; type=&quot;STRING&quot;/&gt;
          &lt;/element&gt;
        &lt;/datatype&gt;
      &lt;/type&gt;
      &lt;value&gt;
        &lt;car_file_os_full_path&gt;$car_file_os_full_path&lt;/car_file_os_full_path&gt;
      &lt;/value&gt;
    &lt;/sourceInputs&gt;
    &lt;childNodes&gt;
      &lt;childNode&gt;
        &lt;nodeType&gt;SIMPLE&lt;/nodeType&gt;
        &lt;element name=&quot;data&quot; namespace=&quot;http://www.compositesw.com/services/system/admin/archive&quot;&gt;
          &lt;datatype name=&quot;base64Binary&quot; namespace=&quot;http://www.w3.org/2001/XMLSchema&quot; superTypeName=&quot;anySimpleType&quot; superTypeNamespace=&quot;http://www.w3.org/2001/XMLSchema&quot; type=&quot;BINARY&quot;/&gt;
        &lt;/element&gt;
        &lt;value&gt;$getArchiveFile/data/text()&lt;/value&gt;
      &lt;/childNode&gt;
    &lt;/childNodes&gt;
  &lt;/rootNode&gt;
  &lt;inputSignature&gt;
    &lt;datatype type=&quot;PROCEDURE&quot; refId=&quot;1&quot;&gt;
      &lt;element name=&quot;car_file_os_full_path&quot; direction=&quot;IN&quot;&gt;
        &lt;datatype name=&quot;LONGVARCHAR&quot; type=&quot;STRING&quot; maxLength=&quot;2147483647&quot;/&gt;
      &lt;/element&gt;
    &lt;/datatype&gt;
  &lt;/inputSignature&gt;
  &lt;xquery&gt;declare copy-namespaces no-preserve,inherit;
declare namespace ns1=&amp;quot;http://www.compositesw.com/services/system/admin/archive&amp;quot;;
declare namespace ns2=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot;;
declare variable $car_file_os_full_path external;

&amp;lt;root xmlns:ns2=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot;&amp;gt;{
  let $nodes := (
    let $inputs := (if (empty($car_file_os_full_path)) then &amp;quot;NULL&amp;quot; else concat(concat(&amp;quot;&amp;apos;&amp;quot;,$car_file_os_full_path), &amp;quot;&amp;apos;&amp;quot;) cast as xs:string)
    let $query := concat( &amp;quot;select data from /shared/Delta_DV/&amp;quot;&amp;quot;_scripts&amp;quot;&amp;quot;/Utilities/archive/lowerLevelProcedures/getArchiveFile(&amp;quot;, concat( string-join($inputs,&amp;quot;,&amp;quot;), &amp;quot;)&amp;quot;))
    for $getArchiveFile in composite:executeQuery($query)//result
    return
    element ns1:createImportArchive {
      element ns1:data {$getArchiveFile/data/text()}
    }
  )
  return
  $nodes[1]
}&amp;lt;/root&amp;gt;/ns1:createImportArchive&lt;/xquery&gt;
&lt;/xqueryModel&gt;</attribute>
</metadata>