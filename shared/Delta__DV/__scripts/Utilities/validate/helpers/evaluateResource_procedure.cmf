<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="evaluateResource" path="/shared/Delta_DV/_scripts/Utilities/validate/helpers/evaluateResource" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[evaluateResource

&#x9;This procedure is used to evaluate DV source code and provide an output of code that fails the source code check rules.

&#x9;evaluate rules list:
&#x9;&#x9;1=impacted resource
&#x9;&#x9;2=select distinct
&#x9;&#x9;3=select *
&#x9;&#x9;4=order by
        5=published path not allowed
        6=shared path(s) not allowed (specified)
        7=users path not allowed
&#x9;&#x9;8=limit number of web service operations
&#x9;
&#x9;INPUT:
&#x9;&#x9;IN inDebug&#x9;&#x9;&#x9;&#x9;CHAR(1),&#x9;&#x9;-- N=no debug.  Y=debug on.
&#x9;&#x9;IN resourcePath &#x9;&#x9;LONGVARCHAR,&#x9;-- The actual resource path
&#x9;&#x9;IN resourceType&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- The resource type [LINK if published, TABLE or PROCEDURE if in /shared area].
&#x9;&#x9;IN displayViolations&#x9;VARCHAR,&#x9;&#x9;-- Display violation types: A[all],P[pass],W[warning],F[fail] or a combination like W,F.  A comma separated list.  Null returns all.
&#x9;&#x9;IN includeList&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- Comma separated list of evaluation rules to include.
&#x9;&#x9;IN excludeList&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- Comma separated list of evaluation rules to exclude.  ExcludeList overrides includeList.
&#x9;&#x9;IN inGroupNum&#x9;&#x9;&#x9;INTEGER,&#x9;&#x9;-- The group number associated with the list of resource generated by the incoming resourcePath.
 &#x9;&#x9;IN pathNowAllowed&#x9;&#x9;LONGVARCHAR,&#x9;-- Comma separated list of paths that are not allowed to be directly accessed from views above the formatting layer.

&#x9;OUTPUT:
&#x9;&#x9;result&#x9;&#x9;&#x9;&#x9;PIPE (
&#x9;&#x9;&#x9;groupNum&#x9;&#x9;&#x9;INTEGER,&#x9;&#x9;-- A numerical sequential value indicating what group number the set of resources belong to.
&#x9;&#x9;&#x9;violation&#x9;&#x9;&#x9;CHAR(1),&#x9;&#x9;-- F=Fail, W=Warning, P=pass.
&#x9;&#x9;&#x9;ruleViolations&#x9;&#x9;VARCHAR(255),&#x9;-- A list of rule violations that have occurred for a given resource.
&#x9;&#x9;&#x9;ruleWarnings&#x9;&#x9;VARCHAR(255),&#x9;-- A list of rule warnings that have occurred for a given resource.
&#x9;&#x9;&#x9;ruleMessage&#x9;&#x9;&#x9;VARCHAR(500),&#x9;-- A message to be relayed to the user.
&#x9;&#x9;&#x9;parentPath&#x9;&#x9;&#x9;VARCHAR(4000),&#x9;-- The parent path of the resource being evaluated.
&#x9;&#x9;&#x9;resourcePath &#x9;&#x9;VARCHAR(4000),&#x9;-- The actual path of the resource being evaluated.
&#x9;&#x9;&#x9;resourceType&#x9;&#x9;VARCHAR(255),&#x9;-- The resource type of the resource being evaluated.
&#x9;&#x9;&#x9;resourceName&#x9;&#x9;VARCHAR(255),&#x9;-- The resource name of the resource being evaluated.
&#x9;&#x9;&#x9;ownerName&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The owner name of the resource being modified.
&#x9;&#x9;&#x9;ownerDomain&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The owner domain of the resource being modified.
&#x9;&#x9;&#x9;modUser&#x9;&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The modified user of the resource being modified.
&#x9;&#x9;&#x9;modDomain&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The modified user domain of the resource being modified.
&#x9;&#x9;&#x9;modDate&#x9;&#x9;&#x9;&#x9;TIMESTAMP,&#x9;&#x9;-- The modified timestamp of the resource being modified.
&#x9;&#x9;&#x9;impactLevel&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The impact level (type) of the resource being modified.
&#x9;&#x9;&#x9;impactMessage&#x9;&#x9;VARCHAR(32767)&#x9;-- The impact message of the resource beaing modified.
&#x9;&#x9;)
&#x9;
&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2019.200&#x9;04/19/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Created new

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]></annotation>
  <parameters>
    <parameter name="inDebug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="resourcePath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="displayViolations" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="includeList" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="excludeList" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="inGroupNum" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="pathNotAllowed" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="excludePathsList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="maxNumberWebServiceOperations" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="256">
        <element name="groupNum">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="violation">
          <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
        </element>
        <element name="ruleViolations">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="ruleWarnings">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="ruleMessage">
          <datatype name="VARCHAR" type="STRING" maxLength="500"/>
        </element>
        <element name="parentPath">
          <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
        </element>
        <element name="resourcePath">
          <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
        </element>
        <element name="resourceType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="resourceName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="ownerName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="ownerDomain">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="modUser">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="modDomain">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="modDate">
          <datatype name="TIMESTAMP" type="DATETIME"/>
        </element>
        <element name="impactLevel">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="impactMessage">
          <datatype name="VARCHAR" type="STRING" maxLength="32767"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/getBasicResourceCursor" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="fullResourcePath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="path">
            <datatype type="STRING" maxLength="4096"/>
          </element>
          <element name="type">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="changeid">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="version">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="introspectState">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactLevel">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactMessage">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="explicitlyDesigned">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="isFunction">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="tableType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="sqlText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="scriptText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="proprietaryModel">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="childCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="dataSourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creationDate">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creationDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="creatorUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creatorUserId">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creatorUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedDate">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="lastModifiedUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedUserId">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/getBasicResourceCursor_ResourceAttributes" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="fullResourcePath" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceCursor" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="type">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="value">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="valueList">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="valueMap">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/getResourceLineageDirectRecursive" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inSeqNum" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inParentID" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inResourceDepth" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inLineageResourceIdList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="resourcePath" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="excludePathsList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="datasourceAncestor" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inIgnoreResourceDoesNotExist" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="resourceTreeList" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="seqNum">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="resourceID">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="parentID">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="resDepth">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="treeType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resPath">
            <datatype type="STRING" maxLength="4096"/>
          </element>
          <element name="resType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="dsID">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="dsResName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="dsResPath">
            <datatype type="STRING" maxLength="4096"/>
          </element>
          <element name="dsResType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="dsResSubType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="dsEnabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="dsChildCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="dataSourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creationDate">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creationDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="creatorUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creatorUserId">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creatorUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedDate">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="lastModifiedUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedUserId">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/getResourceListRecursive" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="resourcePath" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resPath">
            <datatype type="STRING" maxLength="4096"/>
          </element>
          <element name="resType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="changeid">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="version">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="introspectState">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactLevel">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactMessage">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="explicitlyDesigned">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="isFunction">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="tableType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="sqlText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="scriptText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="proprietaryModel">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="childCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="dataSourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creationDate">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creationDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="creatorUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creatorUserId">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creatorUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedDate">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="lastModifiedUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedUserId">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/returnFolderNameAndFolderPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="fullResourcePath" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="mode" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="folderName" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="folderPath" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/user/getDomains" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="name">
            <datatype type="STRING" maxLength="8192"/>
          </element>
          <element name="domainType">
            <datatype type="STRING" maxLength="8192"/>
          </element>
          <element name="guid">
            <datatype type="STRING" maxLength="8192"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="32768"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/string/extractDelimitedText" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inputString" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="delimiter" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="occurrence" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="reverseInputText" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="reverseOutput" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="trimText" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="includeDelimiter" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="object">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/time/DateUtils/BigintToTimestamp" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inBigint" direction="IN">
        <datatype type="INTEGER"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="DATETIME"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/validate/helpers/evaluateResourceOrderBy" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="inSqlScript" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="containsOrderBy" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
&#x9;evaluateResource

&#x9;This procedure is used to evaluate DV source code and provide an output of code that fails the source code check rules.

&#x9;evaluate rules list:
&#x9;&#x9;1=impacted resource
&#x9;&#x9;2=select distinct
&#x9;&#x9;3=select *
&#x9;&#x9;4=order by
        5=published path not allowed
        6=shared path(s) not allowed (specified)
        7=users path not allowed
&#x9;&#x9;8=limit number of web service operations
&#x9;
&#x9;INPUT:
&#x9;&#x9;IN inDebug&#x9;&#x9;&#x9;&#x9;CHAR(1),&#x9;&#x9;-- N=no debug.  Y=debug on.
&#x9;&#x9;IN resourcePath &#x9;&#x9;LONGVARCHAR,&#x9;-- The actual resource path
&#x9;&#x9;IN resourceType&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- The resource type [LINK if published, TABLE or PROCEDURE if in /shared area].
&#x9;&#x9;IN displayViolations&#x9;VARCHAR,&#x9;&#x9;-- Display violation types: A[all],P[pass],W[warning],F[fail] or a combination like W,F.  A comma separated list.  Null returns all.
&#x9;&#x9;IN includeList&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- Comma separated list of evaluation rules to include.
&#x9;&#x9;IN excludeList&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- Comma separated list of evaluation rules to exclude.  ExcludeList overrides includeList.
&#x9;&#x9;IN inGroupNum&#x9;&#x9;&#x9;INTEGER,&#x9;&#x9;-- The group number associated with the list of resource generated by the incoming resourcePath.
 &#x9;&#x9;IN pathNowAllowed&#x9;&#x9;LONGVARCHAR,&#x9;-- Comma separated list of paths that are not allowed to be directly accessed from views above the formatting layer.

&#x9;OUTPUT:
&#x9;&#x9;result&#x9;&#x9;&#x9;&#x9;PIPE (
&#x9;&#x9;&#x9;groupNum&#x9;&#x9;&#x9;INTEGER,&#x9;&#x9;-- A numerical sequential value indicating what group number the set of resources belong to.
&#x9;&#x9;&#x9;violation&#x9;&#x9;&#x9;CHAR(1),&#x9;&#x9;-- F=Fail, W=Warning, P=pass.
&#x9;&#x9;&#x9;ruleViolations&#x9;&#x9;VARCHAR(255),&#x9;-- A list of rule violations that have occurred for a given resource.
&#x9;&#x9;&#x9;ruleWarnings&#x9;&#x9;VARCHAR(255),&#x9;-- A list of rule warnings that have occurred for a given resource.
&#x9;&#x9;&#x9;ruleMessage&#x9;&#x9;&#x9;VARCHAR(500),&#x9;-- A message to be relayed to the user.
&#x9;&#x9;&#x9;parentPath&#x9;&#x9;&#x9;VARCHAR(4000),&#x9;-- The parent path of the resource being evaluated.
&#x9;&#x9;&#x9;resourcePath &#x9;&#x9;VARCHAR(4000),&#x9;-- The actual path of the resource being evaluated.
&#x9;&#x9;&#x9;resourceType&#x9;&#x9;VARCHAR(255),&#x9;-- The resource type of the resource being evaluated.
&#x9;&#x9;&#x9;resourceName&#x9;&#x9;VARCHAR(255),&#x9;-- The resource name of the resource being evaluated.
&#x9;&#x9;&#x9;ownerName&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The owner name of the resource being modified.
&#x9;&#x9;&#x9;ownerDomain&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The owner domain of the resource being modified.
&#x9;&#x9;&#x9;modUser&#x9;&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The modified user of the resource being modified.
&#x9;&#x9;&#x9;modDomain&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The modified user domain of the resource being modified.
&#x9;&#x9;&#x9;modDate&#x9;&#x9;&#x9;&#x9;TIMESTAMP,&#x9;&#x9;-- The modified timestamp of the resource being modified.
&#x9;&#x9;&#x9;impactLevel&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The impact level (type) of the resource being modified.
&#x9;&#x9;&#x9;impactMessage&#x9;&#x9;VARCHAR(32767)&#x9;-- The impact message of the resource beaing modified.
&#x9;&#x9;)
&#x9;
&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2019.200&#x9;04/19/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Created new

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE evaluateResource(
&#x9;IN inDebug&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1),&#x9;&#x9;-- N=no debug.  Y=debug on.
&#x9;IN resourcePath &#x9;&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- The actual resource path
&#x9;IN resourceType&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- The resource type [LINK if published, TABLE or PROCEDURE if in /shared area].  If NULL, LINK is assumed to be the default.
&#x9;IN displayViolations&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- Display violation types: A[all],P[pass],W[warning],F[fail] or a combination like W,F.  A comma separated list.  Null returns all.
&#x9;IN includeList&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- Comma separated list of evaluation rules to include.
&#x9;IN excludeList&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- Comma separated list of evaluation rules to exclude.  ExcludeList overrides includeList.
&#x9;IN inGroupNum&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER,&#x9;&#x9;-- The group number associated with the list of resource generated by the incoming resourcePath.
 &#x9;IN pathNotAllowed&#x9;&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- Comma separated list of paths that are not allowed to be directly accessed from views above the formatting layer.
&#x9;IN excludePathsList&#x9;&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- Comma separated list of resource paths or partials paths to exclude while processing.
&#x9;IN maxNumberWebServiceOperations INTEGER,&#x9;&#x9;-- Maximum number of web service operations per web service
&#x9;OUT result&#x9;&#x9;&#x9;&#x9;PIPE (
&#x9;&#x9;&#x9;groupNum&#x9;&#x9;&#x9;INTEGER,&#x9;&#x9;-- A numerical sequential value indicating what group number the set of resources belong to.
&#x9;&#x9;&#x9;violation&#x9;&#x9;&#x9;CHAR(1),&#x9;&#x9;-- F=Fail, W=Warning, P=pass.
&#x9;&#x9;&#x9;ruleViolations&#x9;&#x9;VARCHAR(255),&#x9;-- A list of rule violations that have occurred for a given resource.
&#x9;&#x9;&#x9;ruleWarnings&#x9;&#x9;VARCHAR(255),&#x9;-- A list of rule warnings that have occurred for a given resource.
&#x9;&#x9;&#x9;ruleMessage&#x9;&#x9;&#x9;VARCHAR(500),&#x9;-- A message to be relayed to the user.
&#x9;&#x9;&#x9;parentPath&#x9;&#x9;&#x9;VARCHAR(4000),&#x9;-- The parent path of the resource being evaluated.
&#x9;&#x9;&#x9;resourcePath &#x9;&#x9;VARCHAR(4000),&#x9;-- The actual path of the resource being evaluated.
&#x9;&#x9;&#x9;resourceType&#x9;&#x9;VARCHAR(255),&#x9;-- The resource type of the resource being evaluated.
&#x9;&#x9;&#x9;resourceName&#x9;&#x9;VARCHAR(255),&#x9;-- The resource name of the resource being evaluated.
&#x9;&#x9;&#x9;ownerName&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The owner name of the resource being modified.
&#x9;&#x9;&#x9;ownerDomain&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The owner domain of the resource being modified.
&#x9;&#x9;&#x9;modUser&#x9;&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The modified user of the resource being modified.
&#x9;&#x9;&#x9;modDomain&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The modified user domain of the resource being modified.
&#x9;&#x9;&#x9;modDate&#x9;&#x9;&#x9;&#x9;TIMESTAMP,&#x9;&#x9;-- The modified timestamp of the resource being modified.
&#x9;&#x9;&#x9;impactLevel&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The impact level (type) of the resource being modified.
&#x9;&#x9;&#x9;impactMessage&#x9;&#x9;VARCHAR(32767)&#x9;-- The impact message of the resource beaing modified.
&#x9;)
)
BEGIN
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;evaluateResource&apos;;
&#x9;DECLARE debug&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1) DEFAULT UPPER(NVL(inDebug,&apos;N&apos;));
&#x9;DECLARE rulesList&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;1,2,3,4,5,6,7,8&apos;;
&#x9;DECLARE rulesListExec&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;&apos;;
&#x9;DECLARE validDisplayViolationList&#x9;VARCHAR DEFAULT &apos;A,P,W,F&apos;;&#x9;-- A[all],P[pass],W[warning],F[fail]
&#x9;-- comma separated list of resource paths or partials paths to exclude
&#x9;DECLARE domainList&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(1000) DEFAULT &apos;&apos;;
&#x9;DECLARE excludeList_&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT TRIM(NVL(excludeList,&apos;  &apos;));
&#x9;DECLARE groupNum&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER DEFAULT inGroupNum;
&#x9;DECLARE sqlScript&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE resPath&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(4000) DEFAULT resourcePath;
&#x9;DECLARE resType&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT resourceType;
&#x9;DECLARE resCount&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER DEFAULT 0;
&#x9;DECLARE parentPath&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(4000) DEFAULT null;
&#x9;DECLARE outText&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE message&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE i,x,y&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE ruleNum&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE ruleResult&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE leftBracketPos&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE rightBracketPos&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE bracketCount&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE ch&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1);
&#x9;DECLARE ex&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION;
&#x9;DECLARE TYPE recType&#x9;&#x9;&#x9;&#x9;ROW (
&#x9;&#x9;&#x9;groupNum&#x9;&#x9;&#x9;INTEGER,&#x9;&#x9;-- A numerical sequential value indicating what group number the set of resources belong to.
&#x9;&#x9;&#x9;violation&#x9;&#x9;&#x9;CHAR(1),&#x9;&#x9;-- F=Fail, W=Warning, P=pass.
&#x9;&#x9;&#x9;ruleViolations&#x9;&#x9;VARCHAR(255),&#x9;-- A list of rule violations that have occurred for a given resource.
&#x9;&#x9;&#x9;ruleWarnings&#x9;&#x9;VARCHAR(255),&#x9;-- A list of rule warnings that have occurred for a given resource.
&#x9;&#x9;&#x9;ruleMessage&#x9;&#x9;&#x9;VARCHAR(500),&#x9;-- A message to be relayed to the user.
&#x9;&#x9;&#x9;parentPath&#x9;&#x9;&#x9;VARCHAR(4000),&#x9;-- The parent path of the resource being evaluated.
&#x9;&#x9;&#x9;resourcePath &#x9;&#x9;VARCHAR(4000),&#x9;-- The actual path of the resource being evaluated.
&#x9;&#x9;&#x9;resourceType&#x9;&#x9;VARCHAR(255),&#x9;-- The resource type of the resource being evaluated.
&#x9;&#x9;&#x9;resourceName&#x9;&#x9;VARCHAR(255),&#x9;-- The resource name of the resource being evaluated.
&#x9;&#x9;&#x9;ownerName&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The owner name of the resource being modified.
&#x9;&#x9;&#x9;ownerDomain&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The owner domain of the resource being modified.
&#x9;&#x9;&#x9;modUser&#x9;&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The modified user of the resource being modified.
&#x9;&#x9;&#x9;modDomain&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The modified user domain of the resource being modified.
&#x9;&#x9;&#x9;modDate&#x9;&#x9;&#x9;&#x9;TIMESTAMP,&#x9;&#x9;-- The modified timestamp of the resource being modified.
&#x9;&#x9;&#x9;impactLevel&#x9;&#x9;&#x9;VARCHAR(255),&#x9;-- The impact level (type) of the resource being modified.
&#x9;&#x9;&#x9;impactMessage&#x9;&#x9;VARCHAR(32767)&#x9;-- The impact message of the resource beaing modified.
&#x9;);
&#x9;DECLARE rec&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;recType;
&#x9;DECLARE containsOrderBy&#x9;&#x9;&#x9;&#x9;BIT;

&#x9;-- Assign group number
&#x9;IF (groupNum IS NULL) THEN
&#x9;&#x9;SET groupNum = 1;
&#x9;END IF;

&#x9;-- Validate pathNotAllowed
&#x9;IF (pathNotAllowed IS NULL OR LENGTH(TRIM(pathNotAllowed)) = 0) THEN
&#x9;&#x9;RAISE ex VALUE &apos;The input parameter &quot;pathNotAllowed&quot; may not be null or empty.&apos;;
&#x9;END IF;

&#x9;-- Get a list of domains
&#x9;FOR r AS SELECT * FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/&quot;user&quot;/getDomains() DO
&#x9;&#x9;SET domainList = domainList || r.name || &apos;,&apos;;
&#x9;END FOR;

&#x9;-- Validate the display violation list
&#x9;IF (displayViolations IS NOT NULL AND LENGTH(TRIM(displayViolations)) &gt; 0) THEN
&#x9;&#x9;FOR r AS 
&#x9;&#x9;&#x9;SELECT object  
&#x9;&#x9;&#x9;&#x9;FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/string/extractDelimitedText(TRIM(displayViolations),&apos;,&apos;,0,0,0,1,0)
&#x9;&#x9;&#x9;&#x9;WHERE object IS NOT NULL AND LENGTH(object) &gt; 0
&#x9;&#x9;DO
&#x9;&#x9;&#x9;-- Validate the incoming display violation list
&#x9;&#x9;&#x9;IF (INSTR(&apos;,&apos;||validDisplayViolationList||&apos;,&apos;,  &apos;,&apos;||UPPER(r.object)||&apos;,&apos;) = 0) THEN
&#x9;&#x9;&#x9;&#x9;RAISE ex VALUE &apos;The display violation option is not valid: &apos;||r.object;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END FOR;
&#x9;END IF;

&#x9;-- Determine the actual option/rules list to execute with based on inclusions and exclusions of rules.
&#x9;IF (includeList IS NOT NULL AND LENGTH(TRIM(includeList)) &gt; 0) THEN
&#x9;&#x9;SET rulesList = TRIM(includeList);
&#x9;END IF;
&#x9;IF (excludeList IS NOT NULL AND LENGTH(TRIM(excludeList)) &gt; 0) THEN
&#x9;&#x9;FOR r AS 
&#x9;&#x9;&#x9;SELECT object  
&#x9;&#x9;&#x9;&#x9;FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/string/extractDelimitedText(TRIM(rulesList),&apos;,&apos;,0,0,0,1,0)
&#x9;&#x9;&#x9;&#x9;WHERE object IS NOT NULL AND LENGTH(object) &gt; 0
&#x9;&#x9;DO
&#x9;&#x9;&#x9;-- If the option list item is NOT found in the exclusion list then add it into the option execution list
&#x9;&#x9;&#x9;IF (INSTR(&apos;,&apos;||excludeList_||&apos;,&apos;,  &apos;,&apos;||r.object||&apos;,&apos;) = 0) THEN
&#x9;&#x9;&#x9;&#x9;SET rulesListExec = rulesListExec || r.object || &apos;,&apos;;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END FOR;
&#x9;&#x9;-- Remove the last comma at the end of the list
&#x9;&#x9;SET rulesListExec = SUBSTRING(rulesListExec, 1, LENGTH(rulesListExec) - 1);
&#x9;ELSE
&#x9;&#x9;SET rulesListExec = rulesList;
&#x9;END IF;
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos; : rulesListExec=&apos;||NVL(rulesListExec,&apos;null&apos;));
&#x9;END IF;

&#x9;-- If no resourceType was provided then do a lookup.  If LINK was found then exit otherwise get what is available for the type matching the resPath.
&#x9;IF (resourceType IS NULL) THEN
&#x9;&#x9;getType:
&#x9;&#x9;FOR r AS SELECT * FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/getBasicResourceCursor(resPath, resType) DO
&#x9;&#x9;&#x9;IF (r.&quot;type&quot; = &apos;LINK&apos; AND INSTR(resPath, &apos;/services/&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET resType = r.&quot;type&quot;;
&#x9;&#x9;&#x9;&#x9;leave getType;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;IF ((r.&quot;type&quot; = &apos;TABLE&apos; OR r.&quot;type&quot; = &apos;PROCEDURE&apos;) AND INSTR(resPath, &apos;/shared/&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET resType = r.&quot;type&quot;;
&#x9;&#x9;&#x9;&#x9;leave getType;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END FOR;
&#x9;END IF;

&#x9;-- Logic for /services/databases folders
&#x9;IF (INSTR(resourcePath, &apos;/services/databases&apos;) &gt; 0) THEN
&#x9;&#x9;/*
&#x9;&#x9;&#x9;IN inSeqNum&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER,&#x9;&#x9;-- null to start with
&#x9;&#x9;&#x9;IN inParentID&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER, &#x9;&#x9;-- null to start with
&#x9;&#x9;&#x9;IN inResourceDepth&#x9;&#x9;&#x9;&#x9;INTEGER, &#x9;&#x9;-- null to start with
&#x9;&#x9;&#x9;IN inLineageResourceIdList&#x9;&#x9;LONGVARCHAR,&#x9;-- null to start with.  A list of space separated resource ids built up as the resources are traversed. 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Used to prevent circular recursive calls by detecting if a parent resource id is found in this list on subsequent invocations.
&#x9;&#x9;&#x9;IN resourcePath &#x9;&#x9;&#x9;&#x9;/shared/ASAssets/Utilities/TypeDefinitions.pathType, -- actual resource path and not a folder path
&#x9;&#x9;&#x9;IN resourceType&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR, &#x9;&#x9;-- The resource type
&#x9;&#x9;&#x9;IN excludePathsList&#x9;&#x9;&#x9;&#x9;LONGVARCHAR, &#x9;-- comma separate list of resource paths or partials paths to exclude
&#x9;&#x9;&#x9;IN datasourceAncestor&#x9;&#x9;&#x9;INTEGER, &#x9;&#x9;-- flag to get the data source ancestory (1=yes, 0=no)
&#x9;&#x9;&#x9;IN inIgnoreResourceDoesNotExist&#x9;INTEGER, &#x9;&#x9;-- Ignore any resources that do not exist
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- 1 = Bypass the processing of that resource.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- 0 = (default) Do not ignore any resources.  Throw an error that the resource does not exist.
&#x9;&#x9;*/
&#x9;&#x9;FOR r AS SELECT * FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/getResourceLineageDirectRecursive(null, null, null, null, resPath, resType, excludePathsList, 0, 1) DO
&#x9;&#x9;&#x9;-- Initialize variables
&#x9;&#x9;&#x9;SET rec = null;
&#x9;&#x9;&#x9;SET sqlScript = null;

&#x9;&#x9;&#x9;-- Setup the record
&#x9;&#x9;&#x9;SET rec.groupNum = groupNum;
&#x9;&#x9;&#x9;SET rec.violation = &apos;P&apos;;
&#x9;&#x9;&#x9;SET rec.ruleViolations = &apos;&apos;;
&#x9;&#x9;&#x9;SET rec.ruleWarnings = &apos;&apos;;
&#x9;&#x9;&#x9;SET rec.parentPath = parentPath;
&#x9;&#x9;&#x9;SET rec.resourcePath = r.resPath;
&#x9;&#x9;&#x9;SET rec.resourceType = r.resType;
&#x9;&#x9;&#x9;SET rec.resourceName = r.resName;

&#x9;&#x9;&#x9;-- Retrieve the SQL text and impacted flags
&#x9;&#x9;&#x9;FOR res AS SELECT * FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/getBasicResourceCursor(r.resPath, r.resType) DO
&#x9;&#x9;&#x9;&#x9;IF (res.sqlText IS NOT NULL) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET sqlScript = res.sqlText;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;IF (res.scriptText IS NOT NULL) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET sqlScript = res.scriptText;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;SET rec.impactLevel = res.impactLevel;
&#x9;&#x9;&#x9;&#x9;SET rec.impactMessage = res.impactMessage;
&#x9;&#x9;&#x9;&#x9;SET rec.ownerName = res.ownerName;
&#x9;&#x9;&#x9;&#x9;SET rec.ownerDomain = res.ownerDomain;
&#x9;&#x9;&#x9;END FOR;

&#x9;&#x9;&#x9;-- Retrieve the last modified information
&#x9;&#x9;&#x9;FOR attr AS 
&#x9;&#x9;&#x9;&#x9;SELECT * FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/getBasicResourceCursor_ResourceAttributes(r.resPath, r.resType) 
&#x9;&#x9;&#x9;&#x9;WHERE name IN (&apos;lastModifiedUserName&apos;, &apos;lastModifiedUserDomain&apos;, &apos;lastModifiedDate&apos;)
&#x9;&#x9;&#x9;DO
&#x9;&#x9;&#x9;&#x9;IF (attr.name = &apos;lastModifiedUserName&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.modUser = attr.&quot;value&quot;;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;IF (attr.name = &apos;lastModifiedUserDomain&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.modDomain = attr.&quot;value&quot;;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;IF (attr.name = &apos;lastModifiedDate&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/&quot;time&quot;/DateUtils/BigintToTimestamp(attr.&quot;value&quot;, rec.modDate);
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;END FOR;

&#x9;&#x9;&#x9;-- Evaluate the SQL Script
&#x9;&#x9;&#x9;IF (sqlScript IS NOT NULL) THEN
&#x9;&#x9;&#x9;&#x9;-- Remove multi-line and single-line comments from SQL, this can only be done before replacing CR/LFs
&#x9;&#x9;&#x9;&#x9;IF (INSTR(sqlScript,&apos;--&apos;) &gt; 0 OR INSTR(sqlScript,&apos;/*&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET outText = sqlScript ;

&#x9;&#x9;&#x9;&#x9;&#x9;/********************************************************************************************
&#x9;&#x9;&#x9;&#x9;&#x9; * Remove single-line comments
&#x9;&#x9;&#x9;&#x9;&#x9; ********************************************************************************************/
&#x9;&#x9;&#x9;&#x9;&#x9;SET x = INSTR(outText,&apos;--&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;--call print(&apos;REMOVE SINGLE-LINE:  X=&apos;||x);
&#x9;&#x9;&#x9;&#x9;&#x9;WHILE x &gt; 0 DO
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET&#x9;y = INSTR(outText,CHR(10),x+2);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF&#x9;y &gt; 0 THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET outText = SUBSTRING(outText,1,x-1) || SUBSTRING(outText,y);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET outText = SUBSTRING(outText,1,x-1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET x = INSTR(outText,&apos;--&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--call print(&apos;REMOVE SINGLE-LINE:  X=&apos;||x||&apos;  Y=&apos;||y);
&#x9;&#x9;&#x9;&#x9;&#x9;END WHILE;

&#x9;&#x9;&#x9;&#x9;&#x9;/********************************************************************************************
&#x9;&#x9;&#x9;&#x9;&#x9; * Remove multi-line comments
&#x9;&#x9;&#x9;&#x9;&#x9; ********************************************************************************************/
&#x9;&#x9;&#x9;&#x9;&#x9;SET x = INSTR(outText,&apos;/*&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;SET y = INSTR(outText, &apos;*/&apos;, x);
&#x9;&#x9;&#x9;&#x9;&#x9;--call print(&apos;REMOMVE MULTI-LINE:  X=&apos;||x||&apos;  Y=&apos;||y);
&#x9;&#x9;&#x9;&#x9;&#x9;WHILE (x &gt; 0 and y &gt; 0) DO
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Extract the text before and after the /* */ comment and leave a space in the middle
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (INSTR(SUBSTRING(outText,x,y-x+1), CHR(10)) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET outText = SUBSTRING(outText,1,x-1) ||CHR(10)|| SUBSTRING(outText,y+2);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET outText = SUBSTRING(outText,1,x-1) ||&apos; &apos;|| SUBSTRING(outText,y+2);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET x = INSTR(outText,&apos;/*&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET y = INSTR(outText, &apos;*/&apos;, x);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--call print(&apos;REMOMVE MULTI-LINE:  X=&apos;||x||&apos;  Y=&apos;||y);
&#x9;&#x9;&#x9;&#x9;&#x9;END WHILE;
&#x9;&#x9;&#x9;&#x9;&#x9;set sqlScript = outText;
&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;/********************************************************************************************
&#x9;&#x9;&#x9;&#x9; * Remove all SQL options such as {OPTION xyz} 
&#x9;&#x9;&#x9;&#x9; ********************************************************************************************/
&#x9;&#x9;&#x9;&#x9;if (INSTR(sqlScript,&apos;{&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;set leftBracketPos = 0;
&#x9;&#x9;&#x9;&#x9;&#x9;set rightBracketPos = 0;
&#x9;&#x9;&#x9;&#x9;&#x9;-- Search through the sql script to find the corresponding right curly bracket } for the starting left curly bracket {
&#x9;&#x9;&#x9;&#x9;&#x9;set i = 1;
&#x9;&#x9;&#x9;&#x9;&#x9;set bracketCount = -1;
&#x9;&#x9;&#x9;&#x9;&#x9;while (i &gt; 0 and i &lt;= LENGTH(sqlScript)) do
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set ch = substring(sqlScript,i,1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (ch = &apos;{&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (bracketCount &lt; 0) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set bracketCount = 0;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set bracketCount = bracketCount + 1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (leftBracketPos = 0) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set leftBracketPos = i;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (ch = &apos;}&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set bracketCount = bracketCount - 1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (bracketCount = 0) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set rightBracketPos = i;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Remove all text between left curly bracket { and right curly bracket } as it is inconsequential for parsing.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set sqlScript = &apos; &apos;||TRIM(SUBSTRING(sqlScript, 1, leftBracketPos-1)||&apos; &apos;||SUBSTRING(sqlScript, rightBracketPos+1));
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set i = INSTR(sqlScript, &apos;{&apos;) - 1; -- Advance to the next left curly bracket (subtract 1 as it will be incremented by 1 at the bottom of the loop)
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set leftBracketPos = 0;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set i = i + 1;
&#x9;&#x9;&#x9;&#x9;&#x9;end while;
&#x9;&#x9;&#x9;&#x9;end if; 

&#x9;&#x9;&#x9;&#x9;/********************************************************************************************
&#x9;&#x9;&#x9;&#x9; * Replace white space characters with a space
&#x9;&#x9;&#x9;&#x9; ********************************************************************************************/
&#x9;&#x9;&#x9;&#x9;-- Replace linefeed chr(10), carriage return chr(13), tab chr(9) and XML escaped characters with a space 
&#x9;&#x9;&#x9;&#x9;set sqlScript = TRIM(REPLACE(sqlScript,chr(13),&apos; &apos;)); &#x9;-- Carriage return
&#x9;&#x9;&#x9;&#x9;set sqlScript = TRIM(REPLACE(sqlScript,chr(10),&apos; &apos;)); &#x9;-- Line Feed
&#x9;&#x9;&#x9;&#x9;set sqlScript = TRIM(REPLACE(sqlScript,chr(9), &apos; &apos;));&#x9;-- Tab
&#x9;&#x9;&#x9;&#x9;set sqlScript = TRIM(REPLACE(REPLACE(sqlScript,&apos;&amp;#xd;&apos;,&apos; &apos;),&apos;&amp;#xD;&apos;,&apos; &apos;)); -- XML Carriage Return representation
&#x9;&#x9;&#x9;&#x9;set sqlScript = TRIM(REPLACE(REPLACE(sqlScript,&apos;&amp;#xa;&apos;,&apos; &apos;),&apos;&amp;#xA;&apos;,&apos; &apos;)); -- XML Line Feed representation

&#x9;&#x9;&#x9;&#x9;/********************************************************************************************
&#x9;&#x9;&#x9;&#x9; * Reduce the number of double spaces to a single space
&#x9;&#x9;&#x9;&#x9; ********************************************************************************************/
&#x9;&#x9;&#x9;&#x9;WHILE (INSTR(sqlScript, &apos;  &apos;) &gt; 0) DO
&#x9;&#x9;&#x9;&#x9;&#x9;SET sqlScript = REPLACE(sqlScript, &apos;  &apos;, &apos; &apos;);
&#x9;&#x9;&#x9;&#x9;END WHILE;

&#x9;&#x9;&#x9;&#x9;-- Normalize the sql script to all LOWER
&#x9;&#x9;&#x9;&#x9;SET sqlScript = LOWER(sqlScript);
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; : resourceType=&apos;||rec.resourceType);
&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; : resourcePath=&apos;||rec.resourcePath);
&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; : sqlScript=&apos;||NVL(sqlScript,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; : rulesListExec=&apos;||NVL(rulesListExec,&apos;null&apos;));
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- Process the rule list
&#x9;&#x9;&#x9;FOR l AS 
&#x9;&#x9;&#x9;&#x9;SELECT CAST(object AS INTEGER) rule
&#x9;&#x9;&#x9;&#x9;&#x9;FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/string/extractDelimitedText(TRIM(rulesListExec),&apos;,&apos;,0,0,0,1,0)
&#x9;&#x9;&#x9;&#x9;&#x9;WHERE object IS NOT NULL AND LENGTH(object) &gt; 0
&#x9;&#x9;&#x9;DO
&#x9;&#x9;&#x9;&#x9;SET ruleNum = l.rule;
&#x9;&#x9;&#x9;&#x9;CASE
&#x9;&#x9;&#x9;&#x9;&#x9;-- Rule 1: Impacted Resource
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ruleNum = 1 THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET message = &apos; : Evaluate Rule 1 [impacted resource]&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (rec.impactLevel IS NOT NULL AND rec.impactLevel &lt;&gt; &apos;NONE&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.violation = &apos;F&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.ruleViolations = rec.ruleViolations || &apos;1,&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET message = message || &apos;: violation occurred&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF; 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||message);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;&#x9;-- Rule 2: SELECT DISTINCT
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ruleNum = 2 THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET message = &apos; : Evaluate Rule 2 [select distinct]&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Evaluate whether the SQL text uses &quot;select distinct&quot;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (sqlScript IS NOT NULL AND INSTR(sqlScript, &apos;select distinct&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (rec.violation IS NULL OR rec.violation &lt;&gt; &apos;F&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.violation = &apos;W&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.ruleWarnings = rec.ruleWarnings || &apos;2,&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET message = message || &apos;: warning occurred&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF; 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||message);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;&#x9;-- Rule 3: SELECT *
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ruleNum = 3 THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET message = &apos; : Evaluate Rule 3 [select *]&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Evaluate whether the SQL text uses &quot;select *&quot;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (sqlScript IS NOT NULL AND (INSTR(sqlScript, &apos;select *&apos;) &gt; 0 OR INSTR(sqlScript, &apos;select distinct *&apos;) &gt; 0)) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.violation = &apos;F&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.ruleViolations = rec.ruleViolations || &apos;3,&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET message = message || &apos;: violation occurred&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF; 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||message);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;&#x9;-- Rule 4: ORDER BY
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ruleNum = 4 THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET message = &apos; : Evaluate Rule 4 [order by]&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Evaluate whether the SQL text uses &quot;order by&quot;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/validate/helpers/evaluateResourceOrderBy(debug, sqlScript, containsOrderBy);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (containsOrderBy = 1) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.violation = &apos;F&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.ruleViolations = rec.ruleViolations || &apos;4,&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET message = message || &apos;: violation occurred&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF; 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||message);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;&#x9;-- Rule 5: published path
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ruleNum = 5 THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET message = &apos; : Evaluate Rule 5 [published path not allowed]&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Evaluate whether the SQL text invokes a published resource.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (sqlScript IS NOT NULL AND (INSTR(sqlScript, &apos;/services/databases/&apos;) &gt; 0 OR INSTR(sqlScript, &apos;/services/webservices/&apos;) &gt; 0)) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.violation = &apos;F&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.ruleViolations = rec.ruleViolations || &apos;5,&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET message = message || &apos;: violation occurred&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF; 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||message);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;&#x9;-- Rule 6: shared path specified
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ruleNum = 6 THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET message = &apos; : Evaluate Rule 6 [specified shared path not allowed]&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Evaluate whether the SQL text invokes a /shared path that is not allowed.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (sqlScript IS NOT NULL AND pathNotAllowed IS NOT NULL) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FOR p AS 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT object pathNotAllowed
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/string/extractDelimitedText(TRIM(pathNotAllowed),&apos;,&apos;,0,0,0,1,0)
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE object IS NOT NULL AND LENGTH(object) &gt; 0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DO
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (INSTR(sqlScript, REPLACE(LOWER(p.pathNotAllowed)||&apos;/&apos;, &apos;//&apos;,&apos;/&apos;)) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.violation = &apos;F&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.ruleViolations = rec.ruleViolations || &apos;6,&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET message = message || &apos;: violation occurred&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END FOR;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF; 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||message);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;&#x9;-- Rule 7: users path
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ruleNum = 7 THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET message = &apos; : Evaluate Rule 7 [users/domain path not allowed]&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Search for any /users/&quot;domain-name&quot;/ usage
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set ruleResult = 1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FOR d AS 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT object name 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/string/extractDelimitedText(TRIM(domainList),&apos;,&apos;,0,0,0,1,0)
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE object IS NOT NULL AND LENGTH(object) &gt; 0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DO
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (sqlScript IS NOT NULL AND INSTR(sqlScript, &apos;/users/&apos;||LOWER(d.name)||&apos;/&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set ruleResult = 0;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END FOR;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (ruleResult = 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.violation = &apos;F&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.ruleViolations = rec.ruleViolations || &apos;7,&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET message = message || &apos;: violation occurred&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF; 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||message);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;&#x9;-- Rule 8: limit number of web service operations
&#x9;&#x9;&#x9;&#x9;&#x9;--   This rule is implemented in the web service section.

&#x9;&#x9;&#x9;&#x9;&#x9;-- ADD NEW RULES BELOW THIS LINE SEQUENTIALLY FROM THE PREVIOUS RULE.
&#x9;&#x9;&#x9;&#x9;&#x9;-- &#x9;&#x9;Update the documententation section for both &quot;evaluate_resources_in_path&quot; and &quot;evaluate_resource&quot;. 
&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;Update the &quot;ruleKey&quot; variable in &quot;evaluate_resources_in_path&quot;.

&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- DO NOTHING
&#x9;&#x9;&#x9;&#x9;END CASE;
&#x9;&#x9;&#x9;END FOR;
&#x9;&#x9;&#x9;-- Remove the last comma at the end of the list

&#x9;&#x9;&#x9;IF (rec.ruleViolations IS NOT NULL AND LENGTH(TRIM(rec.ruleViolations)) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET rec.ruleViolations = SUBSTRING(rec.ruleViolations, 1, LENGTH(rec.ruleViolations) - 1);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;IF (rec.ruleWarnings IS NOT NULL AND LENGTH(TRIM(rec.ruleWarnings)) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET rec.ruleWarnings = SUBSTRING(rec.ruleWarnings, 1, LENGTH(rec.ruleWarnings) - 1);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; : ruleViolations=&apos;||NVL(rec.ruleViolations,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; : ruleWarnings=&apos;||NVL(rec.ruleWarnings,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;CALL PRINT(&apos;&apos;);
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;IF (displayViolations IS NULL OR INSTR(UPPER(displayViolations), &apos;A&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;INSERT INTO result VALUES (rec);
&#x9;&#x9;&#x9;ELSEIF (rec.violation = &apos;W&apos; AND INSTR(UPPER(displayViolations), &apos;W&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;INSERT INTO result VALUES (rec);
&#x9;&#x9;&#x9;ELSEIF (rec.violation = &apos;F&apos; AND INSTR(UPPER(displayViolations), &apos;F&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;INSERT INTO result VALUES (rec);
&#x9;&#x9;&#x9;ELSEIF (rec.violation = &apos;P&apos; AND INSTR(UPPER(displayViolations), &apos;P&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;INSERT INTO result VALUES (rec);
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- Set the parent path for the next resource
&#x9;&#x9;&#x9;SET parentPath = r.resPath;
&#x9;&#x9;END FOR;

&#x9;-- Logic for /services/webservices folders
&#x9;ELSEIF (INSTR(resourcePath, &apos;/services/webservices&apos;) &gt; 0 AND resourceType = &apos;DATA_SOURCE&apos;) THEN
&#x9;&#x9;&#x9;-- Initialize variables
&#x9;&#x9;&#x9;SET rec = null;
&#x9;&#x9;&#x9;SET sqlScript = null;

&#x9;&#x9;&#x9;-- Setup the record
&#x9;&#x9;&#x9;SET rec.groupNum = groupNum;
&#x9;&#x9;&#x9;SET rec.violation = &apos;P&apos;;
&#x9;&#x9;&#x9;SET rec.ruleViolations = &apos;&apos;;
&#x9;&#x9;&#x9;SET rec.ruleWarnings = &apos;&apos;;
&#x9;&#x9;&#x9;SET rec.resourcePath = resourcePath;
&#x9;&#x9;&#x9;SET rec.resourceType = resourceType;
&#x9;&#x9;&#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/returnFolderNameAndFolderPath(resourcePath, &apos;R&apos;, rec.resourceName, rec.parentPath);

&#x9;&#x9;&#x9;-- Retrieve the SQL text and impacted flags
&#x9;&#x9;&#x9;FOR res AS SELECT * FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/getBasicResourceCursor(resourcePath, resourceType) DO
&#x9;&#x9;&#x9;&#x9;IF (res.sqlText IS NOT NULL) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET sqlScript = res.sqlText;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;IF (res.scriptText IS NOT NULL) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET sqlScript = res.scriptText;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;SET rec.impactLevel = res.impactLevel;
&#x9;&#x9;&#x9;&#x9;SET rec.impactMessage = res.impactMessage;
&#x9;&#x9;&#x9;&#x9;SET rec.ownerName = res.ownerName;
&#x9;&#x9;&#x9;&#x9;SET rec.ownerDomain = res.ownerDomain;
&#x9;&#x9;&#x9;END FOR;

&#x9;&#x9;&#x9;-- Retrieve the last modified information
&#x9;&#x9;&#x9;FOR attr AS 
&#x9;&#x9;&#x9;&#x9;SELECT * FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/getBasicResourceCursor_ResourceAttributes(resourcePath, resourceType) 
&#x9;&#x9;&#x9;&#x9;WHERE name IN (&apos;lastModifiedUserName&apos;, &apos;lastModifiedUserDomain&apos;, &apos;lastModifiedDate&apos;)
&#x9;&#x9;&#x9;DO
&#x9;&#x9;&#x9;&#x9;IF (attr.name = &apos;lastModifiedUserName&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.modUser = attr.&quot;value&quot;;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;IF (attr.name = &apos;lastModifiedUserDomain&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.modDomain = attr.&quot;value&quot;;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;IF (attr.name = &apos;lastModifiedDate&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/&quot;time&quot;/DateUtils/BigintToTimestamp(attr.&quot;value&quot;, rec.modDate);
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;END FOR;

&#x9;&#x9;&#x9;-- Process the rule list
&#x9;&#x9;&#x9;FOR l AS 
&#x9;&#x9;&#x9;&#x9;SELECT CAST(object AS INTEGER) rule
&#x9;&#x9;&#x9;&#x9;&#x9;FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/string/extractDelimitedText(TRIM(rulesListExec),&apos;,&apos;,0,0,0,1,0)
&#x9;&#x9;&#x9;&#x9;&#x9;WHERE object IS NOT NULL AND LENGTH(object) &gt; 0
&#x9;&#x9;&#x9;DO
&#x9;&#x9;&#x9;&#x9;SET ruleNum = l.rule;
&#x9;&#x9;&#x9;&#x9;CASE
&#x9;&#x9;&#x9;&#x9;&#x9;-- Rule 8: limit number of web service operations
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ruleNum = 8 THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Check for a violation
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FOR r AS SELECT * FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/getResourceListRecursive(resourcePath, resourceType) DO
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET resCount = resCount + 1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END FOR; 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET message = &apos; : Evaluate Rule 8 [web service operation limit=&apos;||maxNumberWebServiceOperations||&apos;]&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (resCount &gt; maxNumberWebServiceOperations) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.violation = &apos;F&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.ruleViolations = rec.ruleViolations || &apos;8,&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.ruleMessage = &apos;violation occurred num operations=&apos;||resCount||&apos; &gt; max operations=&apos;||maxNumberWebServiceOperations;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET message = message || &apos;: &apos;||rec.ruleMessage;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF; 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||message);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;END CASE;
&#x9;&#x9;&#x9;END FOR;

&#x9;&#x9;&#x9;-- Remove the last comma at the end of the list
&#x9;&#x9;&#x9;IF (rec.ruleViolations IS NOT NULL AND LENGTH(TRIM(rec.ruleViolations)) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET rec.ruleViolations = SUBSTRING(rec.ruleViolations, 1, LENGTH(rec.ruleViolations) - 1);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;IF (rec.ruleWarnings IS NOT NULL AND LENGTH(TRIM(rec.ruleWarnings)) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET rec.ruleWarnings = SUBSTRING(rec.ruleWarnings, 1, LENGTH(rec.ruleWarnings) - 1);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; : ruleViolations=&apos;||NVL(rec.ruleViolations,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; : ruleWarnings=&apos;||NVL(rec.ruleWarnings,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;CALL PRINT(&apos;&apos;);
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;IF (displayViolations IS NULL OR INSTR(UPPER(displayViolations), &apos;A&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;INSERT INTO result VALUES (rec);
&#x9;&#x9;&#x9;ELSEIF (rec.violation = &apos;W&apos; AND INSTR(UPPER(displayViolations), &apos;W&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;INSERT INTO result VALUES (rec);
&#x9;&#x9;&#x9;ELSEIF (rec.violation = &apos;F&apos; AND INSTR(UPPER(displayViolations), &apos;F&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;INSERT INTO result VALUES (rec);
&#x9;&#x9;&#x9;ELSEIF (rec.violation = &apos;P&apos; AND INSTR(UPPER(displayViolations), &apos;P&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;INSERT INTO result VALUES (rec);
&#x9;&#x9;&#x9;END IF;
&#x9;ELSE

&#x9;END IF;
END</attribute>
  <attribute name="creationDate" type="LONG">1418065394000</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609965948495</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">10/370</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/371</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/372</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">13/420</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">13/447</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">13/601</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">13/434</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">13/468</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">13/407</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/514</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/515</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/614</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/516</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/615</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/616</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/192</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">13/392</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">13/491</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/369</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>