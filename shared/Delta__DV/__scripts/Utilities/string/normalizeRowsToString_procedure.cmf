<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="normalizeRowsToString" path="/shared/Delta_DV/_scripts/Utilities/string/normalizeRowsToString" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[normalizeRowsToString:
&#x9;De-dupe an incoming cursor of strings.  
&#x9;For example, maybe there is a list of keywords and you only want the unique values.
&#x9;Output the values in a single comma-delimited string.  Can be used in conjunction with &apos;entityExtractToPipe&apos;
 
&#x9;Input:
&#x9;&#x9;curs - contains a cursor of varchar keywords.
&#x9;&#x9;&#x9;Values: Any text value
&#x9;Output:
&#x9;&#x9;result - return a de-duped set of values in a comma separated string.
&#x9;&#x9;&#x9;Values: Any text value
&#x9;Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2010.3&#x9;&#x9;8/2/2010&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.1.0&#x9;&#x9;&#x9;Created new

    (c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]></annotation>
  <parameters>
    <parameter name="curs" direction="IN" nullable="true">
      <datatype name="curs" type="TABLE" refId="256">
        <element name="str">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
      </datatype>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/log" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/Delta_DV/&quot;_scripts&quot;/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/_debug" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* normalizeRowsToString:
&#x9;De-dupe an incoming cursor of strings.  
&#x9;For example, maybe there is a list of keywords and you only want the unique values.
&#x9;Output the values in a single comma-delimited string.  Can be used in conjunction with &apos;entityExtractToPipe&apos;
 
&#x9;Input:
&#x9;&#x9;curs - contains a cursor of varchar keywords.
&#x9;&#x9;&#x9;Values: Any text value
&#x9;Output:
&#x9;&#x9;result - return a de-duped set of values in a comma separated string.
&#x9;&#x9;&#x9;Values: Any text value
&#x9;Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2010.3&#x9;&#x9;8/2/2010&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.1.0&#x9;&#x9;&#x9;Created new

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE normalizeRowsToString(
&#x9;IN curs &#x9;cursor (str varchar),
&#x9;OUT result&#x9;LONGVARCHAR
)
BEGIN
    PATH /shared/Delta_DV/&quot;_scripts&quot;/Utilities/log;
    PATH /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository;

    DECLARE PROC_NAME   CONSTANT VARCHAR DEFAULT &apos;string/normalizeRowsToString&apos;;

&#x9;DECLARE temp&#x9;&#x9;VARCHAR;
&#x9;DECLARE i,j&#x9;&#x9;INTEGER;
&#x9;DECLARE strVector&#x9;VECTOR (varchar);

&#x9;set strVector = VECTOR[&apos;&apos;];
&#x9;set result = &apos;&apos;;
&#x9;set i = 1;
&#x9;FOR s as curs DO
&#x9;&#x9;set temp = s;
call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/log/logDebugMessage(PROC_NAME, /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/&quot;_debug&quot;.debug, temp);
&#x9;&#x9;set j = 1;
&#x9;&#x9;innerLoop:
&#x9;&#x9;WHILE (j &lt;= CARDINALITY(strVector)) DO
&#x9;&#x9;&#x9;IF (i &lt;&gt; j) THEN
&#x9;&#x9;&#x9;&#x9;IF (temp = strVector[j]) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;set temp = null;
&#x9;&#x9;&#x9;&#x9;END IF; 
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;set j = j + 1;
&#x9;&#x9;&#x9;if (j &gt; i) then 
&#x9;&#x9;&#x9;&#x9;leave innerLoop;
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;END WHILE;
&#x9;&#x9;if (temp is not null) then
&#x9;&#x9;&#x9;set j = CARDINALITY(strVector);
&#x9;&#x9;&#x9;set strVector[j] = temp;
&#x9;&#x9;&#x9;if (result = &apos;&apos;) then
&#x9;&#x9;&#x9;&#x9;set result = temp;
&#x9;&#x9;&#x9;else 
&#x9;&#x9;&#x9;&#x9;set result = result || &apos;, &apos; || temp;
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;set strVector = extend(strVector,1);
&#x9;&#x9;end if;
&#x9;&#x9;set i = i + 1;
&#x9;END FOR;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609965948495</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>