<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="generateOptionsFile" path="/shared/Delta_DV/_scripts/Utilities/deployment/optionsfile/generateOptionsFile" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[generateOptionsFile:

&#x9;This procedure is used to generate an options file on the TDV server.  The procedure invokes generateOptions.
&#x9;If a file already exists, it adds an _copy# to the end of the file name. 
&#x9;You don&apos;t want to accidently overwrite the real file which contains the valid passwords.
&#x9;Once the copy is generated, it needs to be updated with the correct passwords.
&#x9;If the file path is left null or blank, the file options are simply returned in the output variable.

    Input:
&#x9;&#x9;filePath&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- The path of the options file on the TDV server to generate.
&#x9;&#x9;resourcePathList&#x9;LONGVARCHAR,&#x9;-- null=retrieve options for all paths.  comma-separated path list=retrieve options for paths in the list.
&#x9;&#x9;excludePathList&#x9;&#x9;LONGVARCHAR,&#x9;-- null=no path exclusions.  comma-separated path list=exclude paths in the list.  

    Output:
        options&#x9;&#x9;&#x9;&#x9;LONGVARCHAR&#x9;&#x9;-- The generated list of options.

    Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2014.4&#x9;&#x9;10/16/2014      Jeremy Akers        6.2.6           Created new
&#x9;2019.200&#x9;05/30/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Derived from original to write out a file only.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]></annotation>
  <parameters>
    <parameter name="filePath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="resourcePathList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="excludePathList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="message" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="options" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/deployment/optionsfile/helpers/generateOptions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="resourcePathList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="excludePathList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="resultPipe" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="line">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/file/FileProcessingCJP/createFileAscii" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="filePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="append" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="fileContent" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/file/FileProcessingCJP/existsFile" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="filePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*
&#x9;generateOptionsFile:

&#x9;This procedure is used to generate an options file on the TDV server.  The procedure invokes generateOptions.
&#x9;If a file already exists, it adds an _copy# to the end of the file name. 
&#x9;You don&apos;t want to accidently overwrite the real file which contains the valid passwords.
&#x9;Once the copy is generated, it needs to be updated with the correct passwords.
&#x9;If the file path is left null or blank, the file options are simply returned in the output variable.

    Input:
&#x9;&#x9;filePath&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- The path of the options file on the TDV server to generate.
&#x9;&#x9;resourcePathList&#x9;LONGVARCHAR,&#x9;-- null=retrieve options for all paths.  comma-separated path list=retrieve options for paths in the list.
&#x9;&#x9;excludePathList&#x9;&#x9;LONGVARCHAR,&#x9;-- null=no path exclusions.  comma-separated path list=exclude paths in the list.  

    Output:
&#x9;&#x9;message&#x9;&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- Indicates whether the file was written or not.  
        options&#x9;&#x9;&#x9;&#x9;LONGVARCHAR&#x9;&#x9;-- The generated list of options.

    Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2014.4&#x9;&#x9;10/16/2014      Jeremy Akers        6.2.6           Created new
&#x9;2019.200&#x9;05/30/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Derived from original to write out a file only.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE generateOptionsFile(
&#x9;IN  filePath&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- The path of the options file on the TDV server to generate.
&#x9;IN&#x9;resourcePathList&#x9;LONGVARCHAR,&#x9;-- null=retrieve options for all paths.  comma-separated path list=retrieve options for paths in the list.
&#x9;IN&#x9;excludePathList&#x9;&#x9;LONGVARCHAR,&#x9;-- null=no path exclusions.  comma-separated path list=exclude paths in the list.
&#x9;OUT message&#x9;&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- Indicates whether the file was written or not.  
&#x9;OUT options&#x9;&#x9;&#x9;&#x9;LONGVARCHAR &#x9;-- The generated list of options.
)
BEGIN
&#x9;DECLARE filePathCopy&#x9;LONGVARCHAR DEFAULT filePath;
&#x9;DECLARE fileExists&#x9;&#x9;BOOLEAN;
&#x9;DECLARE i&#x9;&#x9;&#x9;&#x9;INTEGER DEFAULT 1;
&#x9;DECLARE pos&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE fileRoot&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE fileName&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE fileExt&#x9;&#x9;&#x9;LONGVARCHAR;

&#x9;SET options = &apos;&apos;;
&#x9;FOR r AS SELECT * FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/deployment/optionsfile/helpers/generateOptions(resourcePathList, excludePathList) DO
&#x9;&#x9;SET options = options || r.line ||CHR(10);
&#x9;END FOR;

&#x9;IF (filePathCopy IS NOT NULL AND LENGTH(filePathCopy) &gt; 0) THEN
&#x9;&#x9;-- Normalize the path
&#x9;&#x9;SET filePathCopy = REPLACE(filePathCopy, &apos;\&apos;, &apos;/&apos;);

&#x9;&#x9;-- Get the file root, name and extenstion
&#x9;&#x9;SET pos = INSTR(filePathCopy, &apos;/&apos;, -1, 1);
&#x9;&#x9;--CALL print (&apos;pos=&apos;||pos);
&#x9;&#x9;IF (pos &gt; 0) THEN
&#x9;&#x9;&#x9;SET fileRoot = SUBSTRING(filePathCopy, 1, pos);
&#x9;&#x9;&#x9;SET fileName = SUBSTRING(filePathCopy, pos+1);
&#x9;&#x9;&#x9;SET pos = INSTR(fileName, &apos;.&apos;, -1, 1);
&#x9;&#x9;&#x9;IF (pos &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET fileExt = SUBSTRING(fileName, pos);
&#x9;&#x9;&#x9;&#x9;SET fileName = SUBSTRING(fileName, 1, pos-1);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END IF;
&#x9;&#x9;IF (fileName IS NULL) THEN
&#x9;&#x9;&#x9;SET fileName = &apos;&apos;;
&#x9;&#x9;END IF;
&#x9;&#x9;--CALL print(&apos;fileRoot=&apos;||NVL(fileRoot,&apos;null&apos;));
&#x9;&#x9;--CALL print(&apos;fileName=&apos;||NVL(fileName,&apos;null&apos;));
&#x9;&#x9;--CALL print(&apos;fileExt=&apos;||NVL(fileExt,&apos;null&apos;));

&#x9;&#x9;-- Check to see if the file exists
&#x9;&#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/file/FileProcessingCJP/existsFile(filePathCopy, fileExists);
&#x9;&#x9;WHILE (fileExists) DO
&#x9;&#x9;&#x9;SET filePathCopy = fileRoot || fileName || &apos;_copy&apos; || i || fileExt;
&#x9;&#x9;&#x9;--CALL print(&apos;filePathCopy=&apos;||NVL(filePathCopy,&apos;null&apos;));
&#x9;&#x9;&#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/file/FileProcessingCJP/existsFile(filePathCopy, fileExists);
&#x9;&#x9;&#x9;SET i = i + 1;
&#x9;&#x9;END WHILE;

&#x9;&#x9;-- Save the options to the file
&#x9;&#x9;IF (filePath IS NOT NULL AND LENGTH(filePath) &gt; 0) THEN
&#x9;&#x9;&#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/file/FileProcessingCJP/createFileAscii(filePathCopy, 0, options);
&#x9;&#x9;&#x9;SET message = &apos;SUCCESS - File was written to path=&apos;||filePath;
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;SET message = &apos;FAIL - File was not written.&apos;;
&#x9;&#x9;END IF;
&#x9;END IF;
END</attribute>
  <attribute name="creationDate" type="LONG">1558474995822</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609965948495</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1558474995822</attribute>
</metadata>