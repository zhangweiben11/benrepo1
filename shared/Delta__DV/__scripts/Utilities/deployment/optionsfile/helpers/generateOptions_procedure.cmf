<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="generateOptions" path="/shared/Delta_DV/_scripts/Utilities/deployment/optionsfile/helpers/generateOptions" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[generateOptions:

&#x9;This procedure loops through all of the data source connections inside the DV instance and generates the -set lines needed
&#x9;to create an &quot;options file&quot; to deploy those data sources to another DV server.  You can export the lines to a file 
&#x9;and then modify the parameters for each line to be suitable to the target deployment server.  For example you can run this 
&#x9;script on &quot;development&quot; and then modify the host, port, username, password, etc to match &quot;Test&quot; and then use those -set lines
&#x9;in your options file to perform the import into &quot;Test&quot;.

    Input:
&#x9;&#x9;resourcePathList&#x9;LONGVARCHAR,&#x9;-- null=retrieve options for all paths.  comma-separated path list=retrieve options for paths in the list.
&#x9;&#x9;excludePathList&#x9;&#x9;LONGVARCHAR,&#x9;-- null=no path exclusions.  comma-separated path list=exclude paths in the list.  

    Output:
        resultPipe - A cursor containing each -set line for each data source configured.
            CURSOR (
                line LONGVARCHAR
            )

    Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
    2014.4&#x9;&#x9;10/16/2014      Jeremy Akers        6.2.6           Created new
&#x9;2019.200&#x9;02/22/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Modified to allow the generation of all datasource options which was the original and is the default.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Allow the option generation of a single resource path or a comma-separated list of paths. 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;This is useful when doing maintenance on the options file and you only need to generate for 1 or more specific paths.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;The exclusion list allows you prune out datasource options from this list.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Both the resourcePathList and the excludePathList may contain partial paths.  Do not include % for a wild-card. It is done automatically.
&#x9;2019.200&#x9;05/30/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Renamed this procedure from generateOptFile to generateOptions as this only generates options and not the file itself.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]></annotation>
  <parameters>
    <parameter name="resourcePathList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="excludePathList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="resultPipe" direction="OUT" nullable="true">
      <datatype name="resultPipe" type="TABLE" refId="256">
        <element name="line">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/services/databases/system/DUAL" type="TABLE">
    <datatype type="TABLE" refId="256">
      <element name="DUMMY">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/RepoUtils/applyReservedListToPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inPath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/getDataSourceAttributes" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="dataSourcePath" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="attrName">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="attrValue">
            <datatype type="STRING" maxLength="32768"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/string/extractTextList" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="separator" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="preserveDoubleQuotes" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="preserveSingleQuotes" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="preserveParenthesis" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="preserveQualifier" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="trimResults" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="textExpression">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
    generateOptions:

&#x9;This procedure loops through all of the data source connections inside the DV instance and generates the -set lines needed
&#x9;to create an &quot;options file&quot; to deploy those data sources to another DV server.  You can export the lines to a file 
&#x9;and then modify the parameters for each line to be suitable to the target deployment server.  For example you can run this 
&#x9;script on &quot;development&quot; and then modify the host, port, username, password, etc to match &quot;Test&quot; and then use those -set lines
&#x9;in your options file to perform the import into &quot;Test&quot;.

    Input:
&#x9;&#x9;resourcePathList&#x9;LONGVARCHAR,&#x9;-- null=retrieve options for all paths.  comma-separated path list=retrieve options for paths in the list.
&#x9;&#x9;excludePathList&#x9;&#x9;LONGVARCHAR,&#x9;-- null=no path exclusions.  comma-separated path list=exclude paths in the list.  

    Output:
        resultPipe - A cursor containing each -set line for each data source configured.
            CURSOR (
                line LONGVARCHAR
            )

    Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
    2014.4&#x9;&#x9;10/16/2014      Jeremy Akers        6.2.6           Created new
&#x9;2019.200&#x9;02/22/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Modified to allow the generation of all datasource options which was the original and is the default.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Allow the option generation of a single resource path or a comma-separated list of paths. 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;This is useful when doing maintenance on the options file and you only need to generate for 1 or more specific paths.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;The exclusion list allows you prune out datasource options from this list.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Both the resourcePathList and the excludePathList may contain partial paths.  Do not include % for a wild-card. It is done automatically.
&#x9;2019.200&#x9;05/30/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Renamed this procedure from generateOptFile to generateOptions as this only generates options and not the file itself.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE generateOptions(
&#x9;IN resourcePathList&#x9;LONGVARCHAR,&#x9;-- null=Retrieve options for all paths.  comma-separated path list=retrieve options for paths in the list
&#x9;IN excludePathList&#x9;LONGVARCHAR,&#x9;-- null=no path exclusions.  comma-separated path list=list of paths to exclude from retrieving
&#x9;OUT resultPipe &#x9;&#x9;PIPE(line LONGVARCHAR)
)
BEGIN
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;generateOptFile&apos;;
&#x9;DECLARE debug&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1) DEFAULT &apos;N&apos;;
&#x9;DECLARE encodedSingleQuote&#x9;&#x9;VARCHAR DEFAULT &apos;_0027&apos;; -- _0027=&apos;&apos;&apos; single quote
&#x9;DECLARE sqlStatement&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE resourcePath&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE attrValue&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE pos&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE includePathCount&#x9;&#x9;INTEGER DEFAULT 0;
&#x9;DECLARE includePathInputList&#x9;LONGVARCHAR DEFAULT &apos;&apos;;
&#x9;DECLARE excludePathInputList&#x9;LONGVARCHAR DEFAULT &apos;&apos;;
&#x9;DECLARE crs &#x9;&#x9;&#x9;&#x9;&#x9;CURSOR(
&#x9;&#x9;SOURCE_NAME&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;SOURCE_TYPE&#x9;&#x9;VARCHAR(60),
&#x9;&#x9;SOURCE_CATEGORY&#x9;VARCHAR(60),
&#x9;&#x9;OWNER&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;PARENT_PATH&#x9;&#x9;VARCHAR(4000)
&#x9;);
&#x9;-- value to use if a data source attribute value hasn&apos;t been set (exists in the
&#x9;-- repository but is set to NULL.) defaults to &quot;&quot; to maintain NULL setting.
&#x9;DECLARE NULL_VALUE &#x9;&#x9;&#x9;&#x9;CONSTANT VARCHAR DEFAULT &apos;&quot;&quot;&apos;;

&#x9;-- Create the include path list
&#x9;-- &#x9;&#x9;It is necessary to encode single quotes within the path to _0027 so that extractTextList works properly.
&#x9;--&#x9;&#x9;Once the line is extracted, the encoded single quote is replaced with an original single quote.
&#x9;--&#x9;&#x9;In order for dynamic sql to execute properly, any single quotes must be escaped with another single quote.
&#x9;FOR r AS 
&#x9;&#x9;SELECT textExpression line 
&#x9;&#x9;FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/string/extractTextList(REPLACE(resourcePathList, &apos;&apos;&apos;&apos;, encodedSingleQuote), &apos;,&apos;, 1, 1, 1, 0, 1) 
&#x9;&#x9;WHERE textExpression IS NOT NULL AND LENGTH(TRIM(textExpression)) &gt; 0
&#x9;DO
&#x9;&#x9;SET includePathCount = includePathCount + 1;
&#x9;&#x9;IF (includePathCount &gt; 1) THEN
&#x9;&#x9;&#x9;SET includePathInputList = includePathInputList || &apos;             OR &apos;;
&#x9;&#x9;END IF;
&#x9;&#x9;SET includePathInputList = includePathInputList || &apos;PARENT_PATH||&apos;&apos;/&apos;&apos;||SOURCE_NAME LIKE &apos;&apos;&apos;||REPLACE(REPLACE(r.line, encodedSingleQuote, &apos;&apos;&apos;&apos;), &apos;&apos;&apos;&apos;, &apos;&apos;&apos;&apos;&apos;&apos;)||&apos;%&apos;||&apos;&apos;&apos;&apos;||CHR(10);
&#x9;END FOR;
&#x9;IF (includePathCount &gt; 0) THEN
&#x9;&#x9;IF (includePathCount = 1) THEN
&#x9;&#x9;&#x9;SET includePathInputList = CHR(10)||&apos;       AND &apos;||includePathInputList;
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;SET includePathInputList = CHR(10)||&apos;       AND (&apos;|| TRIM(includePathInputList) || &apos;)&apos; || CHR(10);
&#x9;&#x9;END IF;
&#x9;ELSE
&#x9;&#x9;SET includePathInputList = CHR(10);
&#x9;END IF;

&#x9;-- Create the exclude path list
&#x9;-- &#x9;&#x9;It is necessary to encode single quotes within the path to _0027 so that extractTextList works properly.
&#x9;--&#x9;&#x9;Once the line is extracted, the encoded single quote is replaced with an original single quote.
&#x9;--&#x9;&#x9;In order for dynamic sql to execute properly, any single quotes must be escaped with another single quote.
&#x9;FOR r AS 
&#x9;&#x9;SELECT textExpression line 
&#x9;&#x9;FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/string/extractTextList(REPLACE(excludePathList, &apos;&apos;&apos;&apos;, encodedSingleQuote), &apos;,&apos;, 1, 1, 1, 0, 1) 
&#x9;&#x9;WHERE textExpression IS NOT NULL AND LENGTH(TRIM(textExpression)) &gt; 0
&#x9;DO
&#x9;&#x9;SET excludePathInputList = excludePathInputList || &apos;       AND PARENT_PATH||&apos;&apos;/&apos;&apos;||SOURCE_NAME NOT LIKE &apos;&apos;&apos;||REPLACE(REPLACE(r.line, encodedSingleQuote, &apos;&apos;&apos;&apos;), &apos;&apos;&apos;&apos;, &apos;&apos;&apos;&apos;&apos;&apos;)||&apos;%&apos;||&apos;&apos;&apos;&apos;||CHR(10);
&#x9;END FOR;
&#x9;IF (LENGTH(TRIM(excludePathInputList)) = 0) THEN
&#x9;&#x9;SET excludePathInputList = CHR(10);
&#x9;END IF;

&#x9;-- Generate the SQL Statement used to open the cursor.
&#x9;SET sqlStatement = 
&#x9;&apos;SELECT SOURCE_NAME, SOURCE_TYPE, SOURCE_CATEGORY, OWNER, PARENT_PATH
     FROM /services/databases/system/SYS_DATASOURCES
     WHERE PARENT_PATH LIKE &apos;&apos;/shared%&apos;&apos; &apos;||includePathInputList||excludePathInputList||
&apos;       AND PARENT_PATH NOT LIKE &apos;&apos;/shared/examples%&apos;&apos;
       AND PARENT_PATH NOT LIKE &apos;&apos;/shared/ASAssets/Utilities/%&apos;&apos; 
       AND PARENT_PATH NOT LIKE &apos;&apos;/shared/PSAssets/Utilities/%&apos;&apos; 
     ORDER BY PARENT_PATH, SOURCE_NAME&apos;;

&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos; : sqlStatement:&apos;||CHR(10)||NVL(sqlStatement,&apos;null&apos;));
&#x9;&#x9;CALL PRINT(&apos;--------------------------------------------------------------------------------------------------------------&apos;);
&#x9;&#x9;CALL PRINT(&apos;Copy -set lines below this line and modify all CHANGE_PASSWORD entries:&apos;);
&#x9;&#x9;CALL PRINT(&apos;--------------------------------------------------------------------------------------------------------------&apos;);
&#x9;END IF;

&#x9;-- Open and fetch the cursor for the adhoc SQL statement.
&#x9;OPEN crs FOR sqlStatement;
&#x9;FOR r AS crs DO
&#x9;&#x9;FOR rds AS
&#x9;&#x9;&#x9;SELECT 
                    CASE AttrName
                        WHEN &apos;login&apos; THEN &apos;user&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN &apos;username&apos; THEN &apos;user&apos;
                        WHEN &apos;urlDatabaseName&apos; THEN &apos;database&apos;
                        WHEN &apos;urlIP&apos; THEN &apos;host&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN &apos;url&apos; then &apos;raw:url&apos;
                        WHEN &apos;urlPort&apos; THEN &apos;port&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN &apos;root&apos; THEN &apos;path&apos;
                        ELSE AttrName
                    END AttrName,
                    CASE AttrName
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN &apos;password&apos; THEN &apos;CHANGE_PASSWORD&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE COALESCE (attrValue, NULL_VALUE)
&#x9;&#x9;&#x9;&#x9;&#x9;END attrValue
&#x9;&#x9;&#x9;FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/getDataSourceAttributes(r.PARENT_PATH || &apos;/&apos; || r.SOURCE_NAME)
&#x9;&#x9;&#x9;WHERE AttrName IN (&apos;login&apos;, &apos;password&apos;, &apos;urlDatabaseName&apos;, &apos;urlIP&apos;, &apos;urlPort&apos;, &apos;username&apos;, &apos;root&apos;, &apos;url&apos;)
&#x9;&#x9;&#x9;  AND (LOWER(attrValue) NOT LIKE &apos;jdbc%&apos;) -- This will still retrieve http, file and ldap attributes but not jdbc
&#x9;&#x9;&#x9;ORDER BY AttrName
&#x9;&#x9;DO
&#x9;&#x9;&#x9;IF (r.PARENT_PATH IS NOT NULL AND r.SOURCE_NAME IS NOT NULL) THEN
&#x9;&#x9;&#x9;&#x9;SET attrValue = rds.attrValue;
&#x9;&#x9;&#x9;&#x9;-- Detect any spaces within the attribute value and enclose the value with double quotes.
&#x9;&#x9;&#x9;&#x9;SELECT {OPTION IGNORE_TRAILING_SPACES=&quot;FALSE&quot;} INSTR(attrValue, &apos; &apos;) INTO pos FROM /services/databases/system/DUAL;
&#x9;&#x9;&#x9;&#x9;IF (rds.attrName = &apos;path&apos; OR (attrValue IS NOT NULL AND attrValue &lt;&gt; NULL_VALUE AND pos &gt; 0)) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET attrValue = &apos;&quot;&apos;||attrValue||&apos;&quot;&apos;;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;-- Apply double quotes around the datasource path if needed.
&#x9;&#x9;&#x9;&#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/RepoUtils/applyReservedListToPath(r.PARENT_PATH || &apos;/&apos; || r.SOURCE_NAME, null, resourcePath);
&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(&apos;-set &apos; || resourcePath || &apos; DATA_SOURCE &apos; || NVL(rds.AttrName,&apos;AttrName=null&apos;) || &apos; &apos; || NVL(attrValue,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;-- Generate the pkg_import option statements
&#x9;&#x9;&#x9;&#x9;INSERT INTO resultPipe VALUES (&apos;-set &apos; || resourcePath || &apos; DATA_SOURCE &apos; || rds.AttrName || &apos; &apos; || attrValue);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END FOR;
&#x9;END FOR;
END</attribute>
  <attribute name="creationDate" type="LONG">1412626753904</attribute>
  <attribute name="creatorUserDomain" type="STRING">corptest</attribute>
  <attribute name="creatorUserName" type="STRING">jakers</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609965948495</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">8/127</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/166</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/126</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/129</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/128</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>