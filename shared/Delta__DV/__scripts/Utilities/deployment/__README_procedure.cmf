<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="_README" path="/shared/Delta_DV/_scripts/Utilities/deployment/_README" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <parameters></parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <attribute name="Script" type="STRING">/*
----------------------------------------------------------
INSTRUCTIONS:
----------------------------------------------------------
&#x9;1. Copy the &quot;deployment&quot; folder from the Utilities zip file to all target DV servers.
&#x9;&#x9;Use a consistent folder path on each server.  
&#x9;&#x9;For setup see the section &quot;INSTRUCTIONS FOR SCRIPT SETUP&quot; below to modify paths and ports.
&#x9;2. Review section I. regarding the privilege strategy
&#x9;&#x9;a. Strategy 1 - Data Abstraction Best Practices Spreadsheet (requires: /shared/ASAssets/BestPractices_v81)
&#x9;&#x9;b. Strategy 2 - Exporting resource ownership and privileges files.
&#x9;3. Review section II. regarding generate an options file for each target deployment server.
&#x9;4. Review section III. regarding customize &quot;runAfterImport&quot;.
&#x9;5. Review section IV. regarding configure &quot;validateDeployment&quot;.
&#x9;6. Review section V. regarding deployment scripts and how to use them.

----------------------------------------------------------
Deployment Considerations
----------------------------------------------------------
&#x9;The deployment folder is broken down into different subject areas that are all related to different deployment considerations.
&#x9;The list below describes the topics that are covered in this _README.
&#x9;&#x9;  I. Manage Privileges and Resource Ownership using the runPrivilegeExport templates.
&#x9;&#x9; II. Generate Options file for data source connections
&#x9;&#x9;III. Customize the &quot;runAfterImport&quot; procedure template for deployment.
&#x9;&#x9; IV. Configure the &quot;validateDeployment&quot; tables
&#x9;&#x9;  V. Deployment scripts.

&#x9;=============================
&#x9;Deployment Folder Structure
&#x9;=============================
&#x9;This can be either windows or UNIX.  This structure must be copied to the DV target 
&#x9;&#x9;server from the Utilities zip file.

&#x9;The recommended structure is shown below:
&#x9;&#x9;/deployment&#x9;&#x9;&#x9;- Base folder which is to be copied from the Utilities zip file
&#x9;&#x9;&#x9;/carfiles&#x9;&#x9;- A folder in which to place car files for deployment.
&#x9;&#x9;&#x9;/fullbackup&#x9;&#x9;- A location for the deployProject.[bat|sh] to place the full server backup .car file
&#x9;&#x9;&#x9;/metadata&#x9;&#x9;- A location to copy the &quot;metadata.xml&quot; file that gets extracted from the .car file 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;which is used for validating the deployment.
&#x9;&#x9;&#x9;/option_files&#x9;- A location to place option files.
&#x9;&#x9;&#x9;/privileges&#x9;&#x9;- A location to write the Resource_Privileges_LOAD_DB.xlsx for Strategy 1 or 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;the privileges.xml file and resource_ownership.txt files for Strategy 2.
&#x9;&#x9;&#x9;/scripts&#x9;&#x9;- The location for the various scripts:
&#x9;&#x9;&#x9;&#x9;/logs&#x9;&#x9;&#x9;&#x9;&#x9;- A directory to write out warning and exception files.
&#x9;&#x9;&#x9;&#x9;/deployAutomation.[bat|sh] - Automation scripts to integrate with a scheduler or a 3rd party deployment tool.
&#x9;&#x9;&#x9;&#x9;/deployProject.[bat|sh] - Deploy a project .car file.
&#x9;&#x9;&#x9;&#x9;/convertPkgFileV11_to_V10.[bat|sh] - Convert a package format from V11 (8.x) to V10 (7.x).
&#x9;&#x9;&#x9;&#x9;/JdbcSample.[bat|sh]&#x9;- Provides the ability to execute custom procedures on the DV server.
&#x9;&#x9;&#x9;&#x9;/JdbcSample.class&#x9;&#x9;- The required class file for JdbcSample.[bat|sh]
&#x9;&#x9;&#x9;&#x9;/JdbcSample.java&#x9;&#x9;- The original source code for JdbcSample.class

&#x9;=============================
&#x9;INSTRUCTIONS FOR SCRIPT SETUP
&#x9;=============================
&#x9;1. Modify variables for deployProject.[bat|sh] depending on your environment.

&#x9;&#x9;------------------------------
&#x9;&#x9;deployProject.bat
&#x9;&#x9;------------------------------
&#x9;&#x9;REM ####################################################################################################
&#x9;&#x9;REM #   DEBUG=Y will send the DEBUG value to TDV procedures and the procedures will write to DV cs_server.log file.
&#x9;&#x9;REM #         N will do nothing.
&#x9;&#x9;set DEBUG=N
&#x9;&#x9;REM ####################################################################################################


&#x9;&#x9;REM ####################################################################################################
&#x9;&#x9;REM # DV_HOME - This is the path on the deployment server of TDV home
&#x9;&#x9;REM #    Required parameter.
&#x9;&#x9;set DV_HOME=C:\MySW\TDV7.0.8
&#x9;&#x9;REM ####################################################################################################


&#x9;&#x9;REM ####################################################################################################
&#x9;&#x9;REM # FULL_BACKUP_PATH - This is the path on the deployment server where TDV server backup files are stored.
&#x9;&#x9;REM #    Required parameter.
&#x9;&#x9;set FULL_BACKUP_PATH=C:\MySW\TDV_Scripts\7 0\deployment\fullbackup
&#x9;&#x9;REM ####################################################################################################


&#x9;&#x9;REM ####################################################################################################
&#x9;&#x9;REM # SERVER_ATTRIBUTE_DATABASE - This is the published database &quot;ASAssets&quot; and URL 
&#x9;&#x9;REM #   &quot;Utilities.repository.getServerAttribute&quot; to get a server attribute.
&#x9;&#x9;REM #   This is required if converting a .car file from 8.x to 7.x
&#x9;&#x9;REM #   This is the standard, generic database and URL.
&#x9;&#x9;REM #   Optional-leave blank if not using this feature.  Only database needs to be unset if not using.
&#x9;&#x9;REM #     set SERVER_ATTRIBUTE_DATABASE=ASAssets
&#x9;&#x9;set SERVER_ATTRIBUTE_DATABASE=
&#x9;&#x9;set SERVER_ATTRIBUTE_URL=Utilities.repository.getServerAttribute
&#x9;&#x9;REM ####################################################################################################


&#x9;&#x9;REM ####################################################################################################
&#x9;&#x9;REM # Privileges and Ownership Strategy 1:
&#x9;&#x9;REM # -------------------------------------
&#x9;&#x9;REM # STRATEGY1_RESOURCE_PRIVILEGE_DATABASE - This is the published database &quot;ASAssets&quot; and URL 
&#x9;&#x9;REM #   &quot;Utilities.deployment.updatePrivilegesDriverInterface&quot; to set resource privileges
&#x9;&#x9;REM #   and resource ownership at a fine-grained level.
&#x9;&#x9;REM #   This strategy requires the open source ASAssets Data Abstraction Best Practices:
&#x9;&#x9;REM #      /shared/ASAssets/BestPractices_v81
&#x9;&#x9;REM #      At a minimum this datasource needs to be configured: 
&#x9;&#x9;REM #         /shared/ASAssets/BestPractices_v81/PrivilegeScripts/Metadata/Privileges_DS_EXCEL
&#x9;&#x9;REM #      The spreadsheet &quot;Resource_Privileges_LOAD_DB.xlsx&quot; is required to be on the DV server.
&#x9;&#x9;REM #   This is the standard, generic database and URL using the fine-grained methodology.
&#x9;&#x9;REM #   Optional-leave blank if not using this feature.  
&#x9;&#x9;REM #     set STRATEGY1_RESOURCE_PRIVILEGE_DATABASE=ASAssets
&#x9;&#x9;set STRATEGY1_RESOURCE_PRIVILEGE_DATABASE=
&#x9;&#x9;set STRATEGY1_RESOURCE_PRIVILEGE_URL=Utilities.deployment.updatePrivilegesDriverInterface
&#x9;&#x9;REM ####################################################################################################


&#x9;&#x9;REM ####################################################################################################
&#x9;&#x9;REM # Privileges and Ownership Strategy 2:
&#x9;&#x9;REM # -------------------------------------
&#x9;&#x9;REM # This strategy uses the &quot;ALL or NOTHING&quot; approach where the privileges are stored in an XML file
&#x9;&#x9;REM #   on the server.  The resource ownerhship settings are stored in a text file on the server.
&#x9;&#x9;REM #   In this strategy all privileges in restored across all paths found in the XML file and the 
&#x9;&#x9;REM #   the same for resource ownership text file.  Granularity of settings is low.
&#x9;&#x9;REM # These two settings are packaged together as a similar strategy.  If not using then unset the 
&#x9;&#x9;REM #   database for each one below.
&#x9;&#x9;REM # The privileges and ownership are generated to files on the DV server using the following procedure:
&#x9;&#x9;REM #   /shared/ASAssets/Utilities/deployment/privileges/templates/runPrivilegeExport_1_DEV_template
&#x9;&#x9;REM #   /shared/ASAssets/Utilities/deployment/privileges/templates/runPrivilegeExport_2_TEST_template
&#x9;&#x9;REM #   /shared/ASAssets/Utilities/deployment/privileges/templates/runPrivilegeExport_3_PROD_template
&#x9;&#x9;REM #   Each one is different because the settings may be different in each environment.  It allows the 
&#x9;&#x9;REM #     developer to maintain them on DEV and deploy to the necessary environments and execute them in 
&#x9;&#x9;REM #     their appropriate environment.
&#x9;&#x9;REM #
&#x9;&#x9;REM # STRATEGY2_RESOURCE_PRIVILEGE_DATABASE - This is the published database &quot;ASAssets&quot; and URL 
&#x9;&#x9;REM #   &quot;Utilities.deployment.importResourcePrivileges&quot; to import and set resource privileges.
&#x9;&#x9;REM #   This is the standard, generic database and URL using the XML/text file methodology.
&#x9;&#x9;REM #   Optional-leave blank if not using this feature.  
&#x9;&#x9;REM #     set STRATEGY2_RESOURCE_PRIVILEGE_DATABASE=ASAssets
&#x9;&#x9;set STRATEGY2_RESOURCE_PRIVILEGE_DATABASE=
&#x9;&#x9;set STRATEGY2_RESOURCE_PRIVILEGE_URL=Utilities.deployment.importResourcePrivileges
&#x9;&#x9;REM # This is the path on the TDV server for &quot;D:\TIBCO\deployment\privileges\privileges.xml&quot;.  
&#x9;&#x9;set STRATEGY2_RESOURCE_PRIVILEGE_FILE=C:\MySW\TDV_Scripts\7 0\deployment\privileges\privileges.xml
&#x9;&#x9;REM #
&#x9;&#x9;REM #
&#x9;&#x9;REM # STRATEGY2_RESOURCE_OWNERSHIP_DATABASE - This is the published database &quot;ASAssets&quot; and URL 
&#x9;&#x9;REM #   &quot;Utilities.deployment.importResourceOwnership&quot; to import and change resource ownership.
&#x9;&#x9;REM #   This is the standard, generic database and URL using the XML/text file methodology.  
&#x9;&#x9;REM #   Optional-leave blank if not using this feature.  Only database needs to be unset if not using.
&#x9;&#x9;REM #     set STRATEGY2_RESOURCE_OWNERSHIP_DATABASE=ASAssets
&#x9;&#x9;set STRATEGY2_RESOURCE_OWNERSHIP_DATABASE=
&#x9;&#x9;set STRATEGY2_RESOURCE_OWNERSHIP_URL=Utilities.deployment.importResourceOwnership
&#x9;&#x9;REM # This is the path on the TDV server for &quot;D:\TIBCO\deployment\privileges\resource_ownership.txt&quot;.  
&#x9;&#x9;set STRATEGY2_RESOURCE_OWNERSHIP_FILE=C:\MySW\TDV_Scripts\7 0\deployment\privileges\resource_ownership.txt
&#x9;&#x9;REM ####################################################################################################


&#x9;&#x9;REM ####################################################################################################
&#x9;&#x9;REM # RUN_AFTER_IMPORT_DATABASE - This is the published database and URL for the &quot;runAfterImport&quot; custom call.  
&#x9;&#x9;REM #   Optional-leave blank if not using this feature.  Only database needs to be unset if not using.
&#x9;&#x9;REM #     set RUN_AFTER_IMPORT_DATABASE=ADMIN
&#x9;&#x9;set RUN_AFTER_IMPORT_DATABASE=
&#x9;&#x9;set RUN_AFTER_IMPORT_URL=runAfterImport
&#x9;&#x9;REM ####################################################################################################


&#x9;&#x9;REM ####################################################################################################
&#x9;&#x9;REM # This is the published database and URL for the &quot;validateDeployment&quot; custom call.
&#x9;&#x9;REM #   Optional-leave blank if not using this feature.  Only database needs to be unset if not using.
&#x9;&#x9;REM #     set VALIDATE_DEPLOYMENT_DATABASE=ADMIN
&#x9;&#x9;set VALIDATE_DEPLOYMENT_DATABASE=
&#x9;&#x9;set VALIDATE_DEPLOYMENT_URL=validateDeployment
&#x9;&#x9;REM # This is the remote server location where metadata.xml files will be copied to for the TDV server to read from.
&#x9;&#x9;set VALIDATE_DEPLOYMENT_DIR=C:\MySW\TDV_Scripts\7 0\deployment\metadata
&#x9;&#x9;REM # This is the full path to the DV Deployment Validation table.  This points to the customer implementation of the &quot;DV_DEPLOYMENT_VALIDATION&quot; table.
&#x9;&#x9;REM #     e.g. /shared/Common/DeploymentValidation/Physical/Formatting/oracle/DV_DEPLOYMENT_VALIDATION
&#x9;&#x9;set VALIDATE_DV_TABLE_PATH=/shared/Common/DeploymentValidation/Physical/Formatting/oracle/DV_DEPLOYMENT_VALIDATION
&#x9;&#x9;REM # The full path to the DV sequence num generator procedure path that has no input and returns a single scalar INTEGER output.
&#x9;&#x9;REM #     e.g. /shared/Common/DeploymentValidation/Physical/Formatting/getSequenceNum
&#x9;&#x9;set VALIDATE_DV_PROCEDURE_PATH=/shared/Common/DeploymentValidation/Physical/Formatting/oracle/getSequenceNum
&#x9;&#x9;REM ####################################################################################################

&#x9;&#x9;------------------------------
&#x9;&#x9;deployProject.sh
&#x9;&#x9;------------------------------
&#x9;&#x9;####################################################################################################
&#x9;&#x9;#   DEBUG=Y will send the DEBUG value to TDV procedures and the procedures will write to DV cs_server.log file.
&#x9;&#x9;#         N will do nothing.
&#x9;&#x9;get_DEBUG()         { echo &quot;N&quot;; }
&#x9;&#x9;####################################################################################################


&#x9;&#x9;####################################################################################################
&#x9;&#x9;# DV_HOME - This is the path on the deployment server of TDV home
&#x9;&#x9;#    Required parameter.
&#x9;&#x9;get_DV_HOME()       { echo &quot;/Users/mtinius@tibco.com/Downloads/TDV7.0.8&quot;; }
&#x9;&#x9;####################################################################################################


&#x9;&#x9;####################################################################################################
&#x9;&#x9;# FULL_BACKUP_PATH - This is the path on the deployment server where TDV server backup files are stored.
&#x9;&#x9;#    Required parameter.
&#x9;&#x9;get_FULL_BACKUP_PATH() { echo &quot;/Users/mtinius@tibco.com/Downloads/TDV_Scripts/7.0/deployment/fullbackup&quot;; }
&#x9;&#x9;####################################################################################################


&#x9;&#x9;####################################################################################################
&#x9;&#x9;# SERVER_ATTRIBUTE_DATABASE - This is the published database &quot;ASAssets&quot; and URL 
&#x9;&#x9;#   &quot;Utilities.repository.getServerAttribute&quot; to get a server attribute.
&#x9;&#x9;#   This is required if converting a .car file from 8.x to 7.x
&#x9;&#x9;#   This is the standard, generic database and URL.
&#x9;&#x9;#   Optional-leave blank if not using this feature.  Only database needs to be unset if not using.
&#x9;&#x9;#     get_SERVER_ATTRIBUTE_DATABASE()     { echo &quot;ASAssets&quot;; }
&#x9;&#x9;get_SERVER_ATTRIBUTE_DATABASE()     { echo &quot;&quot;; }
&#x9;&#x9;get_SERVER_ATTRIBUTE_URL()          { echo &quot;Utilities.repository.getServerAttribute&quot;; }
&#x9;&#x9;####################################################################################################


&#x9;&#x9;####################################################################################################
&#x9;&#x9;# Privileges and Ownership Strategy 1:
&#x9;&#x9;# -------------------------------------
&#x9;&#x9;# STRATEGY1_RESOURCE_PRIVILEGE_DATABASE - This is the published database &quot;ASAssets&quot; and URL 
&#x9;&#x9;#   &quot;Utilities.deployment.updatePrivilegesDriverInterface&quot; to set resource privileges
&#x9;&#x9;#   and resource ownership at a fine-grained level.
&#x9;&#x9;#   This strategy requires the open source ASAssets Data Abstraction Best Practices:
&#x9;&#x9;#      /shared/ASAssets/BestPractices_v81
&#x9;&#x9;#      At a minimum this datasource needs to be configured: 
&#x9;&#x9;#         /shared/ASAssets/BestPractices_v81/PrivilegeScripts/Metadata/Privileges_DS_EXCEL
&#x9;&#x9;#      The spreadsheet &quot;Resource_Privileges_LOAD_DB.xlsx&quot; is required to be on the DV server.
&#x9;&#x9;#   This is the standard, generic database and URL using the fine-grained methodology.
&#x9;&#x9;#   Optional-leave blank if not using this feature.  
&#x9;&#x9;#     get_STRATEGY1_RESOURCE_PRIVILEGE_DATABASE()  { echo &quot;ASAssets&quot;; }
&#x9;&#x9;get_STRATEGY1_RESOURCE_PRIVILEGE_DATABASE()  { echo &quot;&quot;; }
&#x9;&#x9;get_STRATEGY1_RESOURCE_PRIVILEGE_URL()       { echo &quot;Utilities.deployment.updatePrivilegesDriverInterface&quot;; }
&#x9;&#x9;####################################################################################################


&#x9;&#x9;####################################################################################################
&#x9;&#x9;# Privileges and Ownership Strategy 2:
&#x9;&#x9;# -------------------------------------
&#x9;&#x9;# This strategy uses the &quot;ALL or NOTHING&quot; approach where the privileges are stored in an XML file
&#x9;&#x9;#   on the server.  The resource ownerhship settings are stored in a text file on the server.
&#x9;&#x9;#   In this strategy all privileges in restored across all paths found in the XML file and the 
&#x9;&#x9;#   the same for resource ownership text file.  Granularity of settings is low.
&#x9;&#x9;# These two settings are packaged together as a similar strategy.  If not using then unset the 
&#x9;&#x9;#   database for each one below.
&#x9;&#x9;# The privileges and ownership are generated to files on the DV server using the following procedure:
&#x9;&#x9;#   /shared/ASAssets/Utilities/deployment/privileges/templates/runPrivilegeExport_1_DEV_template
&#x9;&#x9;#   /shared/ASAssets/Utilities/deployment/privileges/templates/runPrivilegeExport_2_TEST_template
&#x9;&#x9;#   /shared/ASAssets/Utilities/deployment/privileges/templates/runPrivilegeExport_3_PROD_template
&#x9;&#x9;#   Each one is different because the settings may be different in each environment.  It allows the 
&#x9;&#x9;#     developer to maintain them on DEV and deploy to the necessary environments and execute them in 
&#x9;&#x9;#     their appropriate environment.
&#x9;&#x9;#
&#x9;&#x9;# STRATEGY2_RESOURCE_PRIVILEGE_DATABASE - This is the published database &quot;ASAssets&quot; and URL 
&#x9;&#x9;#   &quot;Utilities.deployment.importResourcePrivileges&quot; to import and set resource privileges.
&#x9;&#x9;#   This is the standard, generic database and URL using the XML/text file methodology.
&#x9;&#x9;#   Optional-leave blank if not using this feature.  
&#x9;&#x9;#     get_STRATEGY2_RESOURCE_PRIVILEGE_DATABASE()  { echo &quot;ASAssets&quot;; }
&#x9;&#x9;get_STRATEGY2_RESOURCE_PRIVILEGE_DATABASE()  { echo &quot;&quot;; }
&#x9;&#x9;get_STRATEGY2_RESOURCE_PRIVILEGE_URL()       { echo &quot;Utilities.deployment.importResourcePrivileges&quot;; }
&#x9;&#x9;# This is the path on the TDV server for &quot;/TIBCO/deployment/privileges/privileges.xml&quot;.  
&#x9;&#x9;get_STRATEGY2_RESOURCE_PRIVILEGE_FILE()      { echo &quot;\\\vmware-host\Shared Folders\Downloads\TDV_Scripts\7.0\deployment\privileges\privileges.xml&quot;; }
&#x9;&#x9;#
&#x9;&#x9;#
&#x9;&#x9;# STRATEGY2_RESOURCE_OWNERSHIP_DATABASE - This is the published database &quot;ASAssets&quot; and URL 
&#x9;&#x9;#   &quot;Utilities.deployment.importResourceOwnership&quot; to import and change resource ownership.
&#x9;&#x9;#   This is the standard, generic database and URL using the XML/text file methodology.  
&#x9;&#x9;#   Optional-leave blank if not using this feature.  Only database needs to be unset if not using.
&#x9;&#x9;#     e.g. get_STRATEGY2_RESOURCE_OWNERSHIP_DATABASE()  { echo &quot;ASAssets&quot;; }
&#x9;&#x9;get_STRATEGY2_RESOURCE_OWNERSHIP_DATABASE()  { echo &quot;&quot;; }
&#x9;&#x9;get_STRATEGY2_RESOURCE_OWNERSHIP_URL()       { echo &quot;Utilities.deployment.importResourceOwnership&quot;; }
&#x9;&#x9;# This is the path on the TDV server for &quot;/TIBCO/deployment/privileges/resource_ownership.txt&quot;.  
&#x9;&#x9;get_STRATEGY2_RESOURCE_OWNERSHIP_FILE()      { echo &quot;\\\vmware-host\Shared Folders\Downloads\TDV_Scripts\7.0\deployment\privileges\resource_ownership.txt&quot;; }
&#x9;&#x9;####################################################################################################


&#x9;&#x9;####################################################################################################
&#x9;&#x9;# RUN_AFTER_IMPORT_DATABASE - This is the published database and URL for the &quot;runAfterImport&quot; custom call.  
&#x9;&#x9;#   Optional-leave blank if not using this feature.  Only database needs to be unset if not using.
&#x9;&#x9;#     e.g. get_RUN_AFTER_IMPORT_DATABASE()     { echo &quot;ADMIN&quot;; }
&#x9;&#x9;get_RUN_AFTER_IMPORT_DATABASE()     { echo &quot;&quot;; }
&#x9;&#x9;get_RUN_AFTER_IMPORT_URL()          { echo &quot;runAfterImport&quot;; }
&#x9;&#x9;####################################################################################################


&#x9;&#x9;####################################################################################################
&#x9;&#x9;# This is the published database and URL for the &quot;validateDeployment&quot; custom call.
&#x9;&#x9;#   Optional-leave blank if not using this feature.  Only database needs to be unset if not using.
&#x9;&#x9;#     e.g. get_VALIDATE_DEPLOYMENT_DATABASE()  { echo &quot;ADMIN&quot;; }
&#x9;&#x9;get_VALIDATE_DEPLOYMENT_DATABASE()  { echo &quot;&quot;; }
&#x9;&#x9;get_VALIDATE_DEPLOYMENT_URL()       { echo &quot;validateDeployment&quot;; }
&#x9;&#x9;# This is the remote server location where metadata.xml files will be copied to for the TDV server to read from.
&#x9;&#x9;get_VALIDATE_DEPLOYMENT_DIR()       { echo &quot;/Users/mtinius@tibco.com/Downloads/TDV_Scripts/7.0/deployment/metadata&quot;; }
&#x9;&#x9;# This is the full path to the DV Deployment Validation table.  This points to the customer implementation of the &quot;DV_DEPLOYMENT_VALIDATION&quot; table.
&#x9;&#x9;#     e.g. /shared/Common/DeploymentValidation/Physical/Formatting/oracle/DV_DEPLOYMENT_VALIDATION
&#x9;&#x9;get_VALIDATE_DV_TABLE_PATH()        { echo &quot;/shared/Common/DeploymentValidation/Physical/Formatting/oracle/DV_DEPLOYMENT_VALIDATION&quot;; }
&#x9;&#x9;# The full path to the DV sequence num generator procedure path that has no input and returns a single scalar INTEGER output.
&#x9;&#x9;#     e.g. /shared/Common/DeploymentValidation/Physical/Formatting/getSequenceNum
&#x9;&#x9;get_VALIDATE_DV_PROCEDURE_PATH()    { echo &quot;/shared/Common/DeploymentValidation/Physical/Formatting/oracle/getSequenceNum&quot;; }
&#x9;&#x9;####################################################################################################


&#x9;2. Modify variables for JdbcSample.[bat|sh] depending on your environment.

&#x9;&#x9;------------------------------
&#x9;&#x9;JdbcSample.bat
&#x9;&#x9;------------------------------
&#x9;&#x9;REM # Modify the DV_HOME
&#x9;&#x9;SET DV_HOME=C:\MySW\TDV8.2
&#x9;&#x9;REM # Modify \jre to \jdk for TDV 8.2 and higher
&#x9;&#x9;set JAVA_HOME=%DV_HOME%\jdk

&#x9;&#x9;------------------------------
&#x9;&#x9;JdbcSample.sh
&#x9;&#x9;------------------------------
&#x9;&#x9;# Modify the DV_HOME
&#x9;&#x9;DV_HOME=&quot;/MySW/TDV8.2&quot;
&#x9;&#x9;# Modify /jre to /jdk for TDV 8.2 and higher
&#x9;&#x9;JAVA_HOME=$DV_HOME/jdk


----------------------------------------------------------
I.   Manage Privileges and Resource Ownership
----------------------------------------------------------
&#x9;=============================
&#x9;Strategy 1: Configuring Privilege Spreadsheet [Preferred Strategy]
&#x9;&#x9;Fine-grained approach (selective)
&#x9;=============================
&#x9;Download the Data Abstraction Best Practices from the Github open source site:
&#x9;&#x9;https://github.com/TIBCOSoftware/ASAssets_DataAbstractionBestPractices/tree/master/Release

&#x9;Review the documentation for the configruation of privileges:
&#x9;&#x9;How To Use Data Abstraction Best Practices Privilege Scripts.pdf

&#x9;&#x9;Summary:
&#x9;&#x9;&#x9;1. Copy the Resource_Privileges_LOAD_DB.xlsx spreadshet to &lt;base_folder&gt;/deployment/privileges
&#x9;&#x9;&#x9;2. Enable and configure /shared/ASAssets/BestPractices_v81/PrivilegeScripts/Metadata/Privileges_DS_EXCEL
&#x9;&#x9;&#x9;&#x9;a. Configure the root path to point to the location the spreadsheet was copied to.
&#x9;&#x9;&#x9;3. Reintrospect /shared/ASAssets/BestPractices_v81/PrivilegeScripts/Metadata/Privileges_DS_EXCEL
&#x9;&#x9;&#x9;4. Test that the data can be successfully read

&#x9;=============================
&#x9;Strategy 2: Exporting Privileges and resource ownership
&#x9;&#x9;Coarse-grained approach (all-or-nothing)
&#x9;=============================
&#x9;The following procedures serve as templates to export privileges to the privileges.xml file and resource ownership to the resource_ownership.txt file:
&#x9;&#x9;DEV:&#x9;/shared/ASAssets/Utilities/deployment/privileges/templates/runPrivilegeExport_1_DEV_template
&#x9;&#x9;TEST:&#x9;/shared/ASAssets/Utilities/deployment/privileges/templates/runPrivilegeExport_2_TEST_template
&#x9;&#x9;PROD:&#x9;/shared/ASAssets/Utilities/deployment/privileges/templates/runPrivilegeExport_3_PROD_template

&#x9;Instructions:
&#x9;&#x9;1.&#x9;Modify /shared/ASAssets/Utilities/environment/getEnvName() and provide an environment name 
&#x9;&#x9;&#x9;&#x9;such as DEV, TEST, PROD etc based on the TDV server environment.
&#x9;&#x9;2.&#x9;Copy this template to a different location outside of the /shared/ASAssets/Utilities folder 
&#x9;&#x9;&#x9;&#x9;so that it does not get overwritten if the Utilities are updated.
&#x9;&#x9;3.&#x9;Modify the variable &quot;scriptEnv&quot; below to match environment name that comes from getEnvName().
&#x9;&#x9;4.&#x9;Modify the paths and ownership.  For DEV environments the ownership:domain should always 
&#x9;&#x9;&#x9;&#x9;be null:null because you don&apos;t want to change ownership of your DEV resources.
&#x9;&#x9;5.&#x9;Set privileges on those folder paths exactly as they should be set for this point in time.
&#x9;&#x9;6.&#x9;Execute the procedure to export the privilege.xml file and the resource_ownership.txt file 
&#x9;&#x9;&#x9;&#x9;to the TDV server path that you provide.
&#x9;&#x9;&#x9;Input:
&#x9;&#x9;&#x9;&#x9;debug&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1),&#x9;- Y=debug on, N=debug off
&#x9;&#x9;&#x9;&#x9;privilegeFileName&#x9;&#x9;&#x9;&#x9;LONGVARCHAR - The full TDV server path location to privileges.xml file.&#x9;&#x9;
&#x9;&#x9;&#x9;&#x9;&#x9;e.g. /home/files/deployment/privileges/privileges.xml
&#x9;&#x9;&#x9;&#x9;resourceOwnershipFileName&#x9;&#x9;LONGVARCHAR - The full TDV server path location to the resource_ownership.txt file.
&#x9;&#x9;&#x9;&#x9;&#x9;e.g. /home/files/deployment/privileges/resource_ownership.txt
&#x9;&#x9;&#x9;Output:
&#x9;&#x9;&#x9;&#x9;invalidPathList&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR - A comma-separated list of paths from this procedure that are not valid [do not exist].

&#x9;The concept behind this is simple.  
&#x9;&#x9;1. The templates are used to take the &quot;AS-IS&quot; snapshot of privileges for the given folder paths listed in the template 
&#x9;&#x9;&#x9;&#x9;at the time of execution and write them out to a file [privileges.xml].
&#x9;&#x9;2. It is very important that the folder privileges for each folder listed be set exactly as they should be set 
&#x9;&#x9;&#x9;&#x9;before exporting the privilege snapshot to the privileges.xml file.
&#x9;&#x9;3. Subsequently, the privilege can be re-applied from the snapshot [privileges.xml] using importResourcePrivileges.
&#x9;&#x9;&#x9;&#x9;They can be applied from Studio by executing &quot;/shared/ASAssets/Utilities/deployment/privileges/importResourceOwnership&quot; or
&#x9;&#x9;&#x9;&#x9;they can be applied from the UNIX command line using deployPrivs.sh.  A copy of this script can be found in its entirety
&#x9;&#x9;&#x9;&#x9;at the bottom of this procedure.
&#x9;&#x9;4. For deployment, it is recommended to invoke the published importResourcePrivileges after importing the car file.
&#x9;&#x9;&#x9;&#x9;This is typically done from the deployment shell script [deployProject.[bat|sh] which is provided in its 
&#x9;&#x9;&#x9;&#x9;entirety at the bottom of this procedure.
&#x9;&#x9;&#x9;&#x9;DataSource=ASAssets&#x9;&#x9;Procedure: Utilities.deployment.importResourcePrivileges
&#x9;&#x9;&#x9;&#x9;SQL: &quot;SELECT * FROM Utilities.deployment.importResourcePrivileges(1, 0, 0, &apos;$PRIVSFILE&apos;, &apos;SET_EXACTLY&apos;)&quot;

&#x9;The objective of the template procedure is to allow the DV development team to maintain the privileges.xml and resource_ownership.txt files.
&#x9;&#x9;1. For maintaining privileges (privileges.xml):
&#x9;&#x9;&#x9;The rows (resource locations and types) need to be maintained in this procedure.  
&#x9;&#x9;&#x9;If a resource is added, then the path and type need to be added to this procedure.
&#x9;&#x9;&#x9;If a resource is removed, then the path and type need to be removed from this procedure.
&#x9;&#x9;&#x9;If a change is made, to a resource in a one of the environments during deployment, then this procedure needs to be modified and 
&#x9;&#x9;&#x9;&#x9;executed prior to deployment so that the privileges.xml file are updated and ready during deployment.
&#x9;&#x9;2. For maintaining resource ownership (resource_ownership.txt)
&#x9;&#x9;&#x9;The row definition in the runPrivilegeExport_[DEV|TEST|PROD] procedure explicitly defines what the ownership
&#x9;&#x9;&#x9;&#x9;should be for each resource path.  For DEV, the ownership:domain is always null:null because it is not
&#x9;&#x9;&#x9;&#x9;reccommended to change ownership of resources in the development environment. 

&#x9;&#x9;runPrivilegeExport Row Definition:
&#x9;&#x9;&#x9;owner: &#x9;&#x9;&#x9;What the resource ownership should be set to.  If null then no resource owner is set and the path is bypassed.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Ownership is explicitly declared here.  It is not determined by how the resourcePath is currently set.
&#x9;&#x9;&#x9;domain: &#x9;&#x9;The domain of the owner.  Ignored if owner is null.  Required if owner is not null.
&#x9;&#x9;&#x9;resourcePath:&#x9;The path from which to read (derive) the privileges for the given DV environment.
&#x9;&#x9;&#x9;resourceType:&#x9;The resource type for the given resourcePath.  i.e. CONTAINER, DATA_SOURCE.
&#x9;&#x9;Row Format:&#x9;&#x9;&#x9;&apos;owner:domain:resourcePath:resourceType,&apos;

&#x9;=============================
&#x9;Importing (Apply) Privileges
&#x9;=============================
&#x9;Privileges are applied after deploying the CAR file.
&#x9;All privileges for all resources in the privileges.xml file are applied using the following procedure:
&#x9;&#x9;/services/databases/ASAssets/Utilities/importResourcePrivileges &gt;-----------------|
&#x9;&#x9;/shared/ASAssets/Utilities/deployment/privileges/importResourcePrivileges &lt;-------|

----------------------------------------------------------
II.  Generate Options file for data source connections
----------------------------------------------------------
&#x9;=============================
&#x9;Generate Options File
&#x9;=============================
&#x9;The procedure &quot;/shared/ASAssets/Utilities/deployment/optionsfile/generateOptionsFile&quot; is used to generate an options file on the TDV server.  
&#x9;The procedure invokes generateOptions.  If a file already exists, it adds an _copy# to the end of the file name. 
&#x9;You don&apos;t want to accidently overwrite the real file which contains the valid passwords.  Once the copy is generated, 
&#x9;it needs to be updated with the correct passwords.  Look for CHANGE_PASSWORD text within the file.
&#x9;If the file path is left null or blank, the file options are simply returned in the output variable.

&#x9;The option file may have blank lines and comments starting with a # in the first character of the line.

&#x9;=============================
&#x9;Sample Options File
&#x9;=============================
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/Advisory DATA_SOURCE path &quot;C:\MyFiles\datafiles&quot;
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_XML DATA_SOURCE raw:url file:///C:\MySW\TDV7.0.8\docs\examples/productCatalog.xml
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_XMLCopy DATA_SOURCE raw:url file:///C:\MySW\TDV7.0.8\docs\examples/productCatalog.xml
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_inventory DATA_SOURCE database inventory
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_inventory DATA_SOURCE host localhost
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_inventory DATA_SOURCE password tutorial
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_inventory DATA_SOURCE port 9408
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_inventory DATA_SOURCE user tutorial
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_orders DATA_SOURCE database orders
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_orders DATA_SOURCE host localhost
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_orders DATA_SOURCE password tutorial
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_orders DATA_SOURCE port 9408
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_orders DATA_SOURCE user tutorial
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_ordersCopy DATA_SOURCE database orders
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_ordersCopy DATA_SOURCE host localhost
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_ordersCopy DATA_SOURCE password tutorial
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_ordersCopy DATA_SOURCE port 9408
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_ordersCopy DATA_SOURCE user tutorial

----------------------------------------------------------
III. Customize the &quot;runAfterImport&quot; procedure template for deployment.
----------------------------------------------------------
&#x9;The procedure &quot;/shared/ASAssets/Utilities/deployment/run/runAfterImport_template&quot; is a template for running internal DV procedures 
&#x9;&#x9;after import of a CAR file during a DV migration.
&#x9;This procedure should be copied to a different location so that it does not get overwritten when the Utilities are upgraded.

&#x9;Instructions:
&#x9;&#x9;1. Modify /shared/ASAssets/Utilities/environment/getEnvName() and provide an environment name such as DEV, TEST, PROD etc based on the TDV server environment.
&#x9;&#x9;2. Copy the &quot;runAfterImport_template&quot; template to a different location outside of the /shared/ASAssets/Utilities folder so that it does not get overwritten if the Utilities are updated.
&#x9;&#x9;3. Modify the copied procedure
&#x9;&#x9;&#x9;a. Modify the variable &quot;scriptEnv&quot; to match environment name that comes from getEnvName().
&#x9;&#x9;&#x9;b. Add procedure calls to add additional logic that you want to &quot;run after import&quot;.
&#x9;&#x9;4. Publish the copied procedure &quot;runAfterImport&quot; to /services/databases/ADMIN/runAfterImport
&#x9;&#x9;5. The script deployProject.[bat|sh] would invoke runAfterImport.  

----------------------------------------------------------
IV. Configure the &quot;validateDeployment&quot; tables
----------------------------------------------------------
&#x9;Validation Value
&#x9;&#x9;1. Resource path collision from different developers doing deployments at different times
&#x9;&#x9;2. Verify deployment by querying table
&#x9;&#x9;3. History of deployments and resources

&#x9;This procedure is used to create the necessary resources required for validating the deployment.
&#x9;&#x9;/shared/ASAssets/Utilities/deployment/validate/helpers/validateDeploymentInit

&#x9;validateDeploymentInit:
&#x9;&#x9;This procedure is used to create and execute the DDL for the table &apos;DV_DEPLOYMENT_VALIDATION&apos; and the sequence &apos;DV_DEPLOY_SEQ&apos;.
&#x9;&#x9;The user must provide a datasource that is either [oracle, sqlserver or postgres] for this operation to work successfully.
&#x9;&#x9;The user must provide the full path to the datasource schema which is used to derive all necessary attributes for the generation.

&#x9;&#x9;This procedure generates the necessary procedures and views to interface with the database table and sequence.  
&#x9;&#x9;The following resources are generated into the DV folder container designated by &quot;resourceContainer&quot;.  
&#x9;&#x9;&#x9;00_ExecuteDDL&#x9;&#x9;&#x9;&#x9;- A packaged query used to execute DDL statements.
&#x9;&#x9;&#x9;00_ExecuteDMLIntResult&#x9;&#x9;- A packaged query used to execute DML statements to get the next sequence and return an integer result.
&#x9;&#x9;&#x9;getSequenceNum&#x9;&#x9;&#x9;&#x9;- A procedure that invokes 00_ExecuteDMLIntResult to get the next sequence using the proper database syntax.
&#x9;&#x9;&#x9;DV_DEPLOYMENT_VALIDATION&#x9;- A formatting layer view that invokes the physical datasource table.  This is the path
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;that the user should provide to deployProjects.[bat|sh] for validating the deployment.

&#x9;Instructions:
&#x9;&#x9;1. Execute /shared/ASAssets/Utilities/deployment/validate/helpers/validateDeploymentInit
&#x9;&#x9;&#x9;which will create the necessary table, sequence and DV resources for deployProject.[bat|sh} to interface with
&#x9;&#x9;&#x9;when validating the deployment .car file resources.

----------------------------------------------------------
V. Deployment scripts.
----------------------------------------------------------
&#x9;=============================
&#x9;Deployment Script
&#x9;=============================
&#x9;At deployment time, the following procedures are invoked from &quot;deployProject.[bat|sh]&quot;:
&#x9;&#x9;The password is optional and will be prompted if not provided.

&#x9;&#x9;If using -c option to convert from 8.x to 7.x:
&#x9;&#x9;&#x9;DISCLAIMER: 
&#x9;&#x9;&#x9;&#x9;Migrating resources from 8.x to 7.x is not generally supported.
&#x9;&#x9;&#x9;&#x9;However, it does provide a way to move basic functionality coded in 8.x to 7.x.  
&#x9;&#x9;&#x9;&#x9;It does not support the ability to move new features that exist in 8.x but do not exist in 7.x.  
&#x9;&#x9;&#x9;&#x9;Exceptions may be thrown in this circumstance.

&#x9;&#x9;Usage: 
&#x9;&#x9;----------------------
&#x9;&#x9;deployProject.[bat|sh] -i &lt;import_CAR_file&gt; -o &lt;options_file&gt; -h &lt;hostname&gt; -p &lt;wsport&gt; -u &lt;username&gt; -d &lt;domain&gt; -up &lt;user_password&gt; -ep &lt;encryptionPassword&gt;
&#x9;&#x9;&#x9;&#x9;  [-v] [-c] [-e] [-print] [-printOnly] [-printWarning] [-inp1 value] [-inp2 value] [-inp3 value] 
&#x9;&#x9;&#x9;&#x9;  [-privsOnly] [-pe privilege_environment] [-pd privilege_datasource] [-po privilege_organization] [-pp privilege_project] [-ps privilege_sub_project]
&#x9;&#x9;&#x9;&#x9;  [-sn privilege_sheet_name] [-rp privilege_resource_path] [-rt privilege_resource_type] [-gn privilege_group_name] [-gt privilege_group_type] [-gd privilege_group_domain] [-be privilege_bypass_errors]

&#x9;&#x9;Parameter Definitions:
&#x9;&#x9;----------------------
&#x9;&#x9;  -i  [mandatory] import archive (CAR) file path (full or relative).
&#x9;&#x9;  -h  [mandatory] host name or ip address of the DV server deploying to.
&#x9;&#x9;  -p  [mandatory] web service port of the target DV server deploying to.  e.g. 9400
&#x9;&#x9;  -u  [mandatory] username with admin privileges.
&#x9;&#x9;  -d  [mandatory] domain of the username.
&#x9;&#x9;  -up [mandatory] user password.
&#x9;&#x9;  -o  [optional] options file path (full or relative).
&#x9;&#x9;  -ep [optional] encryption password for the archive .CAR file for TDV 8.x.
&#x9;&#x9;  -v  [optional] verbose mode.  Verbose is turned on for secondary script calls.  Otherwise the default is verbose is off.
&#x9;&#x9;  -c  [optional] execute package .car file version check and conversion.  
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Use -c in environments where you are migrating from DV 8.x into DV 7.x.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;If not provided, version checking and .car file conversion will not be done which would be optimal to use
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when all environments are of the same major DV version such as all DV 7.x or all DV 8.x
&#x9;&#x9;  -e  [optional] Encrypt the communication between client and TDV server.
&#x9;&#x9;  -print        [optional] print info and contents of the package .car file and import the car file.  If -print is not used, the car will still be imported.
&#x9;&#x9;  -printOnly    [optional] only print info and contents of the package .car file and do not import or execute any other option.  This option overrides -print.
&#x9;&#x9;  -printWarning [optional] print the warnings for updatePrivilegesDriverInterface, importResourcePrivileges, importResourceOwnership and runAfterImport otherwise do not print them.
&#x9;&#x9;  -privsOnly    [optional] execute the configured privilege strategy only.  Do no execute the full deployment.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   Execute either privilege strategy 1 or 2 based on configuration.  If strategy 2 is configured, then resource ownership may also be executed if configured.

&#x9;&#x9; The following parameters may be passed into Strategy 1 for Privileges: updatePrivilegesDriverInterface
&#x9;&#x9;   These parameters act as filters against the spreadsheet or database table.  The most common parameters are -pd, -pe, -po, -pp and -ps
&#x9;&#x9;  -pe  [mandatory] privilege environment name.  [DEV, UAT, PROD]
&#x9;&#x9;  -pd  [optional] privilege datasource type.  [EXCEL, DB_LLE_ORA, DB_LLE_SS, DB_PROD_ORA, DB_PROD_SS]
&#x9;&#x9;  -po  [optional] privilege organization name.
&#x9;&#x9;  -pp  [optional] privilege project name.
&#x9;&#x9;  -ps  [optional] privilege sub-project name.
&#x9;&#x9;  -sn  [optional] privilege excel sheet name.  [Privileges_shared, Privileges_databases, Privileges_webservices]
&#x9;&#x9;  -rp  [optional] privilege resource path - The resource path in which to get/update privileges.  It may contain a wildcard &quot;%&quot;.
&#x9;&#x9;  -rt  [optional] privilege resource type - The resource type in which to get/update privileges.  It is always upper case. 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   This will only be used when no &quot;Resource_Path&quot; or a single &quot;Resource_Path&quot; is provided.  
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   It is not used when a list of &quot;Resource_Path&quot; entries are provided.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   E.g. DATA_SOURCE - a published datasource or physical metadata datasource.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CONTAINER - a folder path, a catalog or schema path.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;COLUMN - a column from a table
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LINK - a published table or procedure.  If it resides in the path /services and points to a TABLE or PROCEDURE then it is a LINK.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;TABLE - a view in the /shared path.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;PROCEDURE a procedure in the /shared path.
&#x9;&#x9;  -gn  [optional] privilege group name - The user/group name in which to get/update privileges.
&#x9;&#x9;  -gt  [optional] privilege group type - Valid values are USER or GROUP
&#x9;&#x9;  -gd  [optional] privilege group domain - The domain name in which to get/update privileges.
&#x9;&#x9;  -be  [optional] privilege bypass errors - Bypass errors.  Throw exception when paths not found. N/Null (default) Do not bypass errors.  Y=bypass resource not found errors but report them.

&#x9;&#x9; The following parameters may be passed into Strategy 2 for Privileges: importResourcePrivileges
&#x9;&#x9;  -recurseChildResources [1 or 0] - A bit [default=1] flag indicating whether the privileges of the resources in the XML file should be recursively applied to any child resources (assumes the resource is a container).
&#x9;&#x9;  -recurseDependencies   [1 or 0] - A bit [default=0] flag indicating whether the privileges of the resources in the XML file should be applied to any resources that they use.
&#x9;&#x9;  -recurseDependents     [1 or 0] - A bit [default=0] flag indicating whether the privileges of the resources in the XML file should be applied to any resources that are used by them.

&#x9;&#x9; The following parameter may be passed into validateDeployment and/or runAfterImport:
&#x9;&#x9;  -inp1 [optional] Use this to represent a unique id for validating the deployment contents with an external log.
&#x9;&#x9;&#x9; Format: -inp1 value
&#x9;&#x9;&#x9;&#x9;&#x9; -inp1 signals the variable input.
&#x9;&#x9;&#x9;&#x9;&#x9; value is the actual value with double quotes when spaces are present.
&#x9;&#x9;  -inp2 [optional] Use this to represent any value
&#x9;&#x9;&#x9; Format: -inp2 value
&#x9;&#x9;&#x9;&#x9;&#x9; -inp2 signals the variable input.
&#x9;&#x9;&#x9;&#x9;&#x9; value is the actual value with double quotes when spaces are present.
&#x9;&#x9;  -inp3 [optional] Use this to represent any value
&#x9;&#x9;&#x9; Format: -inp3 value
&#x9;&#x9;&#x9;&#x9;&#x9; -inp3 signals the variable input.
&#x9;&#x9;&#x9;&#x9;&#x9; value is the actual value with double quotes when spaces are present.

&#x9;&#x9;Execution Steps:
&#x9;&#x9;----------------------
&#x9;&#x9;1. Perform DV server version check (if configured)
&#x9;&#x9;&#x9;&quot;SELECT * FROM Utilities.repository.getServerAttribute(&apos;/server/config/info/versionFull&apos;)&quot;

&#x9;&#x9;2. Perform package .car file conversion if requested
&#x9;&#x9;&#x9;convertPkgFileV11_to_V10.[bat|sh] &lt;package_file_path&gt; 

&#x9;&#x9;3. Full Server Backup if requested
&#x9;&#x9;&#x9;&quot;$DV_HOME/bin/backup_export.sh&quot; -pkgfile &quot;$BACKUPFILENAME&quot; $ENCRYPT -server &quot;$HOST&quot; -port &quot;$WSPORT&quot; -user &quot;$USER&quot; -password &quot;$USER_PASSWORD&quot; -domain &quot;$DOMAIN&quot; -includeStatistics

&#x9;&#x9;4. Print contents if requested
 &#x9;&#x9;&#x9;&quot;$DV_HOME/bin/pkg_import.sh&quot; -pkgfile &quot;$PKGFILE&quot; $ENCRYPT -verbose -printinfo -printcontents -server &quot;$HOST&quot; -port $WSPORT -user &quot;$USER&quot; -password &quot;$USER_PASSWORD&quot; -domain &quot;$DOMAIN&quot; &gt; &quot;$ARCHIVE_RESULT_FILE&quot;

&#x9;&#x9;5. Validate the car file (if confifured)
 &#x9;&#x9;&#x9;a. Extract the car file to get metadata.xml
&#x9;&#x9;&#x9;b. Invoke DV procedure &quot;validateDeployment&quot;
&#x9;&#x9;&#x9;&#x9;&quot;$JDBC_SAMPLE_EXEC&quot; &quot;$VALIDATE_DEPLOYMENT_DATABASE&quot; &quot;$HOST&quot; &quot;$DBPORT&quot; &quot;$USER&quot; &quot;$USER_PASSWORD&quot; &quot;$DOMAIN&quot; &quot;SELECT * FROM $VALIDATE_DEPLOYMENT_URL(&apos;$DEBUG&apos;, &apos;$INPUT1&apos;, &apos;$archiveCreationDate&apos;, &apos;$DEPLOYMENT_DATE_BEG&apos;, &apos;$HOST&apos;, &apos;$WSPORT&apos;, &apos;$VALIDATE_DEPLOYMENT_DIR_FILE_PATH&apos;, &apos;$VALIDATE_DV_TABLE_PATH&apos;, &apos;$VALIDATE_DV_PROCEDURE_PATH&apos;)&quot; &gt; &quot;$JDBC_RESULT_FILE&quot;

&#x9;&#x9;6. Import specified CAR file if requested
&#x9;&#x9;&#x9;&quot;$DV_HOME/bin/pkg_import.sh&quot; -pkgfile &quot;$PKGFILE&quot; -optfile &quot;$OPTFILE&quot; $ENCRYPT -server &quot;$HOST&quot; -port $WSPORT -user &quot;$USER&quot; -password &quot;$USER_PASSWORD&quot; -domain &quot;$DOMAIN&quot; &gt; &quot;$ARCHIVE_RESULT_FILE&quot;

&#x9;&#x9;7. Invoke Strategy 1 (if configured) for Privileges and Ownership setting using Data Abstraction Best Practices Spreadsheet
&#x9;&#x9;&#x9;&quot;$JDBC_SAMPLE_EXEC&quot; &quot;$STRATEGY1_RESOURCE_PRIVILEGE_DATABASE&quot; &quot;$HOST&quot; &quot;$DBPORT&quot; &quot;$USER&quot; &quot;$USER_PASSWORD&quot; &quot;$DOMAIN&quot; &quot;SELECT * FROM $STRATEGY1_RESOURCE_PRIVILEGE_URL(&apos;$PRIVILEGE_DATASOURCE&apos;, 1, &apos;$PRIVILEGE_ENVIRONMENT&apos;, &apos;$PRIVILEGE_ORGANIZATION&apos;, &apos;$PRIVILEGE_PROJECT&apos;, &apos;$PRIVILEGE_SUBPROJECT&apos;, &apos;$PRIVILEGE_SHEET_NAME&apos;, &apos;$PRIVILEGE_RESOURCE_PATH&apos;, &apos;$PRIVILEGE_RESOURCE_TYPE&apos;, &apos;$PRIVILEGE_GROUP_NAME&apos;, &apos;$PRIVILEGE_GROUP_TYPE&apos;, &apos;$PRIVILEGE_GROUP_DOMAIN&apos;, &apos;Y&apos;, &apos;N&apos;, &apos;N&apos;, &apos;N&apos;, &apos;N&apos;, &apos;N&apos;, &apos;N&apos;, &apos;N&apos;, &apos;$PRIVILEGE_BYPASS_ERRORS&apos;)&quot; &gt; &quot;$JDBC_RESULT_FILE&quot;
&#x9;&#x9;&#x9;Actual Path: /services/databases/ASAssets/Utilities/deployment/updatePrivilegesDriverInterface

&#x9;&#x9;8. Invoke Strategy 2 (if configured) to read the file resource_ownership.txt and changes resource ownership for each path.
&#x9;&#x9;&#x9;&quot;$JDBC_SAMPLE_EXEC&quot; &quot;$STRATEGY2_RESOURCE_OWNERSHIP_DATABASE&quot; &quot;$HOST&quot; &quot;$DBPORT&quot; &quot;$USER&quot; &quot;$USER_PASSWORD&quot; &quot;$DOMAIN&quot; &quot;SELECT * FROM $STRATEGY2_RESOURCE_OWNERSHIP_URL(&apos;$DEBUG&apos;, &apos;$STRATEGY2_RESOURCE_OWNERSHIP_FILE&apos;)&quot; &gt; &quot;$JDBC_RESULT_FILE&quot;
&#x9;&#x9;&#x9;Actual Path: /services/databases/ASAssets/Utilities/deployment/importResourceOwnership

&#x9;&#x9;9. Invoke Strategy 2 (if configured) to read the privileges.xml file and updates the privileges.
&#x9;&#x9;&#x9;&quot;$JDBC_SAMPLE_EXEC&quot; &quot;$STRATEGY2_RESOURCE_PRIVILEGE_DATABASE&quot; &quot;$HOST&quot; &quot;$DBPORT&quot; &quot;$USER&quot; &quot;$USER_PASSWORD&quot; &quot;$DOMAIN&quot; &quot;SELECT * FROM $STRATEGY2_RESOURCE_PRIVILEGE_URL(&apos;$DEBUG&apos;, $RECURSE_CHILD_RESOURCES, $RECURSE_DEPENDENCIES, $RECURSE_DEPENDENTS, &apos;$STRATEGY2_RESOURCE_PRIVILEGE_FILE&apos;, &apos;SET_EXACTLY&apos;)&quot; &gt; &quot;$JDBC_RESULT_FILE&quot;
&#x9;&#x9;&#x9;Actual Path: /services/databases/ASAssets/Utilities/deployment/importResourcePrivileges

&#x9;&#x9;10. Invokes the post-deployment customization script (if configured): 
&#x9;&#x9;&#x9;&quot;$JDBC_SAMPLE_EXEC&quot; &quot;$RUN_AFTER_IMPORT_DATABASE&quot; &quot;$HOST&quot; &quot;$DBPORT&quot; &quot;$USER&quot; &quot;$USER_PASSWORD&quot; &quot;$DOMAIN&quot; &quot;SELECT * FROM $RUN_AFTER_IMPORT_URL(&apos;$DEBUG&apos;, &apos;$INPUT1&apos;, &apos;$INPUT2&apos;, &apos;$INPUT3&apos;)&quot; &gt; &quot;$JDBC_RESULT_FILE&quot;
&#x9;&#x9;&#x9;Actual Path: /services/databases/ADMIN/runAfterImport

&#x9;&#x9;EXAMPLE:
&#x9;&#x9;----------------------
&#x9;&#x9;&#x9;deployProject.bat -i &quot;C:\MySW\TDV_Scripts\7 0\deployment\carfiles\A_TEST.car&quot; -o &quot;C:\MySW\TDV_Scripts\7 0\deployment\option_files\options.txt&quot; -h &quot;localhost&quot; -u admin -d composite -up admin -p 9400 -pe DEV -print -pd EXCEL -po &quot;Tibco,Tibco1&quot; -pp &quot;ATEST,ATEST1&quot;   -ps &quot;,ATEST1&quot; -be Y -gt GROUP -gd composite -inp1 i1 -input2 i2 -input3 &quot;input 3&quot;

&#x9;=============================
&#x9;Privilege Script Execution
&#x9;=============================
&#x9;It is possible to apply privileges only from the Windows/UNIX command line using the following script:
&#x9;&#x9;The password is optional and will be prompted if not provided.

&#x9;&#x9;deployProject.[bat|sh] -privsOnly -h &quot;localhost&quot; -u admin -d composite -up admin -p 9400 -pd EXCEL -pe DEV -po &quot;Tibco,Tibco1&quot; -pp &quot;ATEST,ATEST1&quot; -ps &quot;,ATEST1&quot; -be Y -gt GROUP -gd composite 

&#x9;&#x9;This example has Strategy 1 privilege spreadsheet configured.

&#x9;&#x9;--------------------------------------------------------------------
&#x9;&#x9;*** STRATEGY 1 ***
&#x9;&#x9;*** Resetting privileges and ownership on specified resources. ***
&#x9;&#x9;--------------------------------------------------------------------
&#x9;&#x9;*** CALL &quot;C:\MySW\TDV_Scripts\7 0\deployment\scripts\JdbcSample.bat&quot; &quot;ASAssets&quot; &quot;localhost&quot; &quot;9401&quot; &quot;admin&quot; &quot;********&quot; &quot;composite&quot; &quot;SELECT * FROM Utilities.deployment.updatePrivilegesDriverInterface(&apos;EXCEL&apos;, 1, &apos;DEV&apos;, &apos;Tibco,Tibco1&apos;, &apos;ATEST,ATEST1&apos;, &apos;,ATEST1&apos;, &apos;&apos;, &apos;&apos;, &apos;&apos;, &apos;&apos;, &apos;GROUP&apos;, &apos;composite&apos;, &apos;Y&apos;, &apos;N&apos;, &apos;N&apos;, &apos;N&apos;, &apos;N&apos;, &apos;N&apos;, &apos;N&apos;, &apos;N&apos;, &apos;Y&apos;)&quot; &gt; &quot;C:\MySW\TDV_Scripts\7 0\deployment\scripts\tmp_ps\jdbcSampleResults.txt&quot; ***
&#x9;&#x9;&#x9;&#x9;1 file(s) copied.
&#x9;&#x9;*** WARNING: REVIEW FILE &quot;C:\MySW\TDV_Scripts\7 0\deployment\scripts\logs\strategy1_privilege_output_localhost_9400_2019_12_28_08_54_53.log&quot;
&#x9;&#x9;*** &quot;Utilities.deployment.updatePrivilegesDriverInterface&quot; completed with status=WARNING ***


&#x9;&#x9;OUTPUT FILE:
&#x9;&#x9;&#x9;This field &quot;col[1]=&quot; indicates WARNING or ERROR: col[1]=`WARNING`
&#x9;&#x9;&#x9;This field &quot;col[2]=&quot; provides the text and is pipe &quot;|&quot; delimited in the event it needs to be parsed.
&#x9;&#x9;&#x9;Contents of the log file (&quot;C:\MySW\TDV_Scripts\7 0\deployment\scripts\logs\strategy1_privilege_output_localhost_9400_2019_12_28_08_54_53.log&quot;) are shown below:
&#x9;&#x9;&#x9;&#x9;column count = 2
&#x9;&#x9;&#x9;&#x9;row = `1`   col[1]=`WARNING`  col[2]=`executeNum=1|rowStatus=SUCCESS|rowsProcessed=2|sqlStatement=SELECT * FROM /shared/ASAssets/BestPractices_v81/PrivilegeScripts/updatePrivilegesDriver(&apos;EXCEL&apos;,1,&apos;DEV&apos;,&apos;Tibco&apos;,&apos;ATEST&apos;,null,null,null,null,null,&apos;GROUP&apos;,&apos;composite&apos;,&apos;Y&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;Y&apos;)|logOutput=SUCCESS|
&#x9;&#x9;&#x9;&#x9;executeNum=2|rowStatus=WARNING|rowsProcessed=2|sqlStatement=SELECT * FROM /shared/ASAssets/BestPractices_v81/PrivilegeScripts/updatePrivilegesDriver(&apos;EXCEL&apos;,1,&apos;DEV&apos;,&apos;Tibco1&apos;,&apos;ATEST1&apos;,&apos;ATEST1&apos;,null,null,null,null,null,null,&apos;Y&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;N&apos;,&apos;Y&apos;)|logOutput=updatePrivilegesDriver : Status=SKIPPED: [BYPASS **ERROR**]  REVOKE ALL :: RESOURCE PATH NOT FOUND [DATA_SOURCE::/services/databases/A_TEST1]|logOutput=updatePrivilegesDriver : [2 of 2]  Status=SKIPPED: [BYPASS **ERROR**]  Row=98  PrivRows=3 SheetRow=10 Sheet=2Privileges_databases ResPath=/services/databases/A_TEST1 ResType=DATA_SOURCE Dependencies=N Dependents=N Child=YM mode=OVERWRITE_APPEND RevokeAll=Y Name=group1 Type=GROUP Domain=composite EnvType=DEV Privileges=R W E S U I D Owner= OwnerDomain=|
&#x9;&#x9;&#x9;&#x9;` 


&#x9;=============================
&#x9;JdbcSample Script
&#x9;=============================
&#x9;The JdbcSample script is used to interface with a DV server and execute custom procedures.
&#x9;This procedure *** REQUIRES *** JdbcSample.class to be present in the target scripts folder.  
&#x9;&#x9;It can be found in the Utilities zip file &quot;deployment/scripts&quot;.
&#x9;The following scripts get executed via JdbcSample.

&#x9;&#x9;1. Reads the Data Abstraction Best Practices Privilege Spreadsheet
&#x9;&#x9;&#x9;&quot;SELECT * FROM %STRATEGY1_RESOURCE_PRIVILEGE_URL%(&apos;%PRIVILEGE_DATASOURCE%&apos;, 1, &apos;%PRIVILEGE_ENVIRONMENT%&apos;, &apos;%PRIVILEGE_ORGANIZATION%&apos;, &apos;%PRIVILEGE_PROJECT%&apos;, &apos;%PRIVILEGE_SUBPROJECT%&apos;, &apos;%PRIVILEGE_SHEET_NAME%&apos;, &apos;%PRIVILEGE_RESOURCE_PATH%&apos;, &apos;%PRIVILEGE_RESOURCE_TYPE%&apos;, &apos;%PRIVILEGE_GROUP_NAME%&apos;, &apos;%PRIVILEGE_GROUP_TYPE%&apos;, &apos;%PRIVILEGE_GROUP_DOMAIN%&apos;, &apos;Y&apos;, &apos;N&apos;, &apos;N&apos;, &apos;N&apos;, &apos;N&apos;, &apos;N&apos;, &apos;N&apos;, &apos;N&apos;, &apos;%PRIVILEGE_BYPASS_ERRORS%&apos;)&quot;
&#x9;&#x9;&#x9;Actual Path: /services/databases/ASAssets/Utilities/deployment/updatePrivilegesDriverInterface

&#x9;&#x9;2. Reads the file resource_ownership.txt and changes resource ownership for each path.
&#x9;&#x9;&#x9;&quot;SELECT * FROM %STRATEGY2_RESOURCE_OWNERSHIP_URL%(&apos;%DEBUG%&apos;, &apos;%STRATEGY2_RESOURCE_OWNERSHIP_FILE%&apos;))&quot;
&#x9;&#x9;&#x9;Actual Path: /services/databases/ASAssets/Utilities/deployment/importResourceOwnership

&#x9;&#x9;3. Reads the privileges.xml file and updates the privileges.
&#x9;&#x9;&#x9;&quot;SELECT * FROM %STRATEGY2_RESOURCE_PRIVILEGE_URL%(&apos;%DEBUG%&apos;, %RECURSE_CHILD_RESOURCES%, %RECURSE_DEPENDENCIES%, %RECURSE_DEPENDENTS%, &apos;%STRATEGY2_RESOURCE_PRIVILEGE_FILE%&apos;, &apos;SET_EXACTLY&apos;)&quot;
&#x9;&#x9;&#x9;Actual Path: /services/databases/ASAssets/Utilities/deployment/importResourcePrivileges

&#x9;&#x9;4. Invokes the post-deployment customization script: 
&#x9;&#x9;&#x9;&quot;SELECT * FROM  %RUN_AFTER_IMPORT_URL%(&apos;%DEBUG%&apos;, &apos;%INPUT1%&apos;, &apos;%INPUT2%&apos;, &apos;%INPUT3%&apos;)&quot;
&#x9;&#x9;&#x9;Actual Path: /services/databases/ADMIN/runAfterImport


&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE &quot;_README&quot;()
BEGIN
END</attribute>
  <attribute name="creationDate" type="LONG">1523455413720</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609896176534</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1523455413720</attribute>
</metadata>