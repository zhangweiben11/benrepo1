<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="getDocPreambleImpl1" path="/shared/Delta_DV/_scripts/Utilities/documentation/implementations/getDocPreambleImpl1" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[getDocPreambleImpl1:

&#x9;This procedure provides an implementation 1 for retrieving the preamble to the documentation.

&#x9;This procedure is invoked by the getAllDocumentationAPI in a loop.  
&#x9;The output of this procedure provides the formatting for the preample of the documentation.  
&#x9;A user may wish to customize the preamble text for their specific project.
&#x9;The idea behind this procedure is that it provides a template for an implementation.  
&#x9;A user of the documentation utilities may choose to copy and create a new implementation and then customize it for their project.  
&#x9;Any new implementation “must” follow the input and output interface definitions as shown below.

&#x9;Input:
&#x9;&#x9;fullResourcePath - (optional) Full resource path which includes the path and the resource name  
&#x9;&#x9;&#x9;Values: e.g. /shared/examples
&#x9;&#x9;resourceType - (optional) Type of CIS resource to be created
&#x9;&#x9;&#x9;Values: see &quot;TYPES / SUBTYPES&quot; listing below.  e.g. CONTAINER
&#x9;Output: 
&#x9;&#x9;formattedText - formatted text is out output complete with a separator at the beginning of the resource.

&#x9;Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2012.3&#x9;&#x9;07/25/2012&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new
&#x9;2019.4&#x9;&#x9;04/04/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Changed custom functions to explicit paths.

    (c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.



&#x9;TYPES / SUBTYPES:
&#x9;=================
&#x9;The following resource types/subtypes are supported by this operation.  Resources
&#x9;cannot be created under &quot;/services&quot; unless otherwise noted, and cannot be created
&#x9;within a physical data source. 

&#x9;(Basic CIS folder)
&#x9;* CONTAINER / FOLDER_CONTAINER - A Composite folder.   Cannot be created anywhere under /services except in another FOLDER under /services/webservices.
&#x9;* CONTAINER / DIRECTORY_CONTAINER - A Composite directory.
&#x9;(Database)
&#x9;* CONTAINER / CATALOG_CONTAINER - A Composite catalog folder under a data source.  Can only be created within a data source under /services/databases.
&#x9;* CONTAINER / SCHEMA_CONTAINER - A Composite schema container.  Can only be created within a CATALOG that is under /services/databases.
&#x9;(Web Services)
&#x9;* CONTAINER / SERVICE_CONTAINER - A web service container for the service.  Can only be created within a Composite Web Services data source that is under /services/webservices.
&#x9;* CONTAINER / OPERATIONS_CONTAINER - A web service container for the operations
&#x9;* CONTAINER / PORT_CONTAINER - A Composite web service container for port.   Can only be created within a SERVICE under /services/webservices.
&#x9;(Connectors)
&#x9;* CONTAINER / CONNECTOR_CONTAINER - A Composite container for connectors.

&#x9;* CONNECTOR / JMS - A Composite JMS Connector.  Created with no connection information
&#x9;* CONNECTOR / HTTP - A Composite HTTP Connector.  Created with no connection information

&#x9;* DATA_SOURCE / RELATIONAL_DATA_SOURCE - A relational database source.
&#x9;* DATA_SOURCE / FILE_DATA_SOURCE - A comma separate file data source.
&#x9;* DATA_SOURCE / XML_FILE_DATA_SOURCE - An XML file data source.
&#x9;* DATA_SOURCE / WSDL_DATA_SOURCE - A Composite web service data source.
&#x9;* DATA_SOURCE / XML_HTTP_DATA_SOURCE - An HTTP XML data source.
&#x9;* DATA_SOURCE / NONE - A custom java procedure data source.

&#x9;* DEFINITION_SET / SQL_DEFINITION_SET - A Composite SQL Definition set.
&#x9;* DEFINITION_SET / XML_SCHEMA_DEFINITION_SET - A Composite XML Schema Defintion set.
&#x9;* DEFINITION_SET / WSDL_DEFINITION_SET - A Composite WSDL Definition set.
&#x9;* DEFINITION_SET / ABSTRACT_WSDL_DEFINITION_SET - A Composite Abstract WSDL Definition set such as the ones imported from Designer.
&#x9;* DEFINITION_SET / SCDL_DEFINITION_SET - A Composite SCA composite Definition set imported from Designer.

&#x9;* LINK / unknown at this time

&#x9;(CIS procedures)
&#x9;* PROCEDURE / SQL_SCRIPT_PROCEDURE - A Composite SQL Procedure.  Created with a simple default script body that is runnable.
&#x9;(Custom procedures)
&#x9;* PROCEDURE / JAVA_PROCEDURE - A Composite java data source procedure.  Created from a java data source (jar file).
&#x9;(Database procedures)
&#x9;* PROCEDURE / EXTERNAL_SQL_PROCEDURE - A Composite Packaged Query.  Created with no SQL text, so it is not runnable.  
&#x9;* PROCEDURE / DATABASE_PROCEDURE - A database stored procedure.
&#x9;(XML procedures)
&#x9;* PROCEDURE / BASIC_TRANSFORM_PROCEDURE - A Composite Basic XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / XSLT_TRANSFORM_PROCEDURE - A Composite XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / STREAM_TRANSFORM_PROCEDURE - A Composite XSLT Streaming Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / XQUERY_TRANSFORM_PROCEDURE - A Composite XQUERY Transformation Procedure.  Created with no target schema and no model, so it is not runnable.
&#x9;(Misc procedures)
&#x9;* PROCEDURE / OPERATION_PROCEDURE - A Composite web service or HTTP procedure operation.

&#x9;* TABLE / SQL_TABLE - A Composite View.  Created with no SQL text or model, so it is not runnable.  
&#x9;* TABLE / DATABASE_TABLE - A Composite database table.
&#x9;* TABLE / DELIMITED_FILE_TABLE - A Composite delimited file table
&#x9;* TABLE / SYSTEM_TABLE - A Composite system table view.

&#x9;* TREE / XML_FILE_TREE - The XML tree structure associated with a file-XML data source.

&#x9;* TRIGGER / NONE - A Composite trigger.   Created disabled.]]></annotation>
  <parameters>
    <parameter name="resourcePath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="constantPath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="256">
        <element name="formattedText">
          <datatype name="Text" referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/string/getConstantV2" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="constantsPath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="constantsName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="optionReturn" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="outValue" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* getDocPreambleImpl1:

&#x9;This procedure provides an implementation 1 for retrieving the preamble to the documentation.

&#x9;This procedure is invoked by the getAllDocumentationAPI in a loop.  
&#x9;The output of this procedure provides the formatting for the preample of the documentation.  
&#x9;A user may wish to customize the preamble text for their specific project.
&#x9;The idea behind this procedure is that it provides a template for an implementation.  
&#x9;A user of the documentation utilities may choose to copy and create a new implementation and then customize it for their project.  
&#x9;Any new implementation “must” follow the input and output interface definitions as shown below.

&#x9;Input:
&#x9;&#x9;resourcePath - (optional) The starting folder path from which to start formatting the documentation.  It is always of type CONTAINER.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Values: e.g. /shared/examples
&#x9;&#x9;resourceType - &#x9;The resource type of the resource path.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Values: e.g. CONTAINER
&#x9;&#x9;constantPath - &#x9;This is the path to the constants file
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Values: e.g. /shared/Utilities/documentation/constants()
&#x9;Output: 
&#x9;&#x9;formattedText - formatted text is out output complete with a separator at the beginning of the resource.

&#x9;Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2012.3&#x9;&#x9;07/25/2012&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new
&#x9;2019.4&#x9;&#x9;04/04/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Changed custom functions to explicit paths.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE getDocPreambleImpl1(
&#x9;IN resourcePath&#x9;&#x9;&#x9;LONGVARCHAR, 
&#x9;IN resourceType&#x9;&#x9;&#x9;VARCHAR,
&#x9;IN constantPath&#x9;&#x9;&#x9;LONGVARCHAR,
&#x9;OUT result&#x9;&#x9;&#x9;&#x9;PIPE (formattedText&#x9;/lib/util/System.Text)
)
BEGIN
&#x9;DECLARE moduleName &#x9;&#x9;VARCHAR DEFAULT &apos;geDocPreambleImpl1&apos;;
&#x9;DECLARE formattedText&#x9;/lib/util/System.Text DEFAULT &apos;&apos;;
&#x9;DECLARE eol&#x9;&#x9;&#x9;&#x9;VARCHAR;
--&#x9;Uncomment any of the following if required for your implementation:
--&#x9;DECLARE debug &#x9;&#x9;&#x9;VARCHAR(1);
--&#x9;DECLARE beginSeparator&#x9;VARCHAR;
--&#x9;DECLARE endSeparator&#x9;VARCHAR;
--&#x9;DECLARE minorSeparator &#x9;VARCHAR;

--&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(constantPath, &apos;debug&apos;, 1, debug);
--&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(constantPath, &apos;beginSeparator&apos;, 1, beginSeparator);
--&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(constantPath, &apos;endSeparator&apos;, 1, endSeparator);
--&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(constantPath, &apos;minorSeparator&apos;, 1, minorSeparator);

&#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/string/getConstantV2(constantPath, &apos;eol&apos;, 1, eol);

&#x9;-- Create a preamble for the documentation
&#x9;set formattedText = formattedText || eol || &apos;Documentation Generated on &apos;||CURRENT_TIMESTAMP || eol;
&#x9;set formattedText = formattedText ||        &apos;Documentation Generated for: &apos;|| eol;
&#x9;set formattedText = formattedText ||        &apos;       resourcePath=&apos;||NVL(resourcePath,&apos;null&apos;) || eol;
&#x9;set formattedText = formattedText ||        &apos;       resourceType=&apos;||NVL(resourceType,&apos;null&apos;) || eol;

&#x9;insert into result values(formattedText);
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609965948495</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>