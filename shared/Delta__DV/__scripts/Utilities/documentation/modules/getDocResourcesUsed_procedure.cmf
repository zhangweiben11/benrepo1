<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="getDocResourcesUsed" path="/shared/Delta_DV/_scripts/Utilities/documentation/modules/getDocResourcesUsed" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[getDocResourcesUsed:

&#x9;This procedure returns the list of resources (level 1) used by this resources.   
&#x9;The immediate resource list is the list of resources that are directly invoked by the 
&#x9;current resource being formatted.  In the example below the resource being formatted is
&#x9;/shared/examples/CompositeView.  The CompositeView has three resources that is uses for 
&#x9;immediate invocations which include ViewOrder, ViewSales and ViewSupplier.
 
&#x9;Input:
&#x9;&#x9;resourcePath&#x9;&#x9;&#x9;The full resource path to the CIS resource to introspect and return the resources used by this resource
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Values: e.g. /shared/examples/CompositeView
&#x9;&#x9;resourceType&#x9;&#x9;&#x9;The type of resource.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Values: e.g. TABLE
&#x9;&#x9;constantPath&#x9;&#x9;&#x9;This is the path to the constants file
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Values: e.g. /shared/ASAssets/Utilities/documentation/constants()
&#x9;Output:
&#x9;&#x9;formattedText&#x9;&#x9;&#x9;The formatted text output.
&#x9;Exceptions:  none

&#x9;An example output is shown below:

Resources Used:
---------------
    Resource Name  Resource Type  Sub Type   Resource Path                 
    -------------- -------------- ---------- -----------------------------
    ViewOrder      TABLE          SQL_TABLE  /shared/examples/ViewOrder    
    ViewSales      TABLE          SQL_TABLE  /shared/examples/ViewSales    
    ViewSupplier   TABLE          SQL_TABLE  /shared/examples/ViewSupplier 

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2012.3&#x9;&#x9;07/25/2012&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.1.0&#x9;&#x9;&#x9;Created new
&#x9;2019.200&#x9;04/04/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Changed custom functions to explicit paths.

    (c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]></annotation>
  <parameters>
    <parameter name="resourcePath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="constantPath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="formattedText" direction="OUT" nullable="true">
      <datatype name="Text" referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/getUsedResourcesCursor" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="resourcePath" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="usedResCursor" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="resourceName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resourcePath">
            <datatype type="STRING" maxLength="4096"/>
          </element>
          <element name="resourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="tableType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="explicitlyDesigned">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="sqlText">
            <datatype type="STRING" maxLength="32768"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/string/getConstantV2" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="constantsPath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="constantsName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="optionReturn" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="outValue" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* &#x9;getDocResourcesUsed:

&#x9;This procedure returns the list of resources (level 1) used by this resources.   
&#x9;The immediate resource list is the list of resources that are directly invoked by the 
&#x9;current resource being formatted.  In the example below the resource being formatted is
&#x9;/shared/examples/CompositeView.  The CompositeView has three resources that is uses for 
&#x9;immediate invocations which include ViewOrder, ViewSales and ViewSupplier.
 
&#x9;Input:
&#x9;&#x9;resourcePath&#x9;&#x9;&#x9;The full resource path to the CIS resource to introspect and return the resources used by this resource
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Values: e.g. /shared/examples/CompositeView
&#x9;&#x9;resourceType&#x9;&#x9;&#x9;The type of resource.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Values: e.g. TABLE
&#x9;&#x9;constantPath&#x9;&#x9;&#x9;This is the path to the constants file
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Values: e.g. /shared/ASAssets/Utilities/documentation/constants()
&#x9;Output:
&#x9;&#x9;formattedText&#x9;&#x9;&#x9;The formatted text output.
&#x9;Exceptions:  none

&#x9;An example output is shown below:

Resources Used:
---------------
    Resource Name  Resource Type  Sub Type   Resource Path                 
    -------------- -------------- ---------- -----------------------------
    ViewOrder      TABLE          SQL_TABLE  /shared/examples/ViewOrder    
    ViewSales      TABLE          SQL_TABLE  /shared/examples/ViewSales    
    ViewSupplier   TABLE          SQL_TABLE  /shared/examples/ViewSupplier 

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2012.3&#x9;&#x9;07/25/2012&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.1.0&#x9;&#x9;&#x9;Created new
&#x9;2019.200&#x9;04/04/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Changed custom functions to explicit paths.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE getDocResourcesUsed(
    IN resourcePath &#x9;&#x9;LONGVARCHAR,  
    IN resourceType &#x9;&#x9;VARCHAR(255),
&#x9;IN constantPath&#x9;&#x9;&#x9;LONGVARCHAR,
&#x9;OUT formattedText&#x9;&#x9;/lib/util/System.Text
)
BEGIN
&#x9;DECLARE header&#x9;&#x9;&#x9;VARCHAR(1024) DEFAULT &apos;&apos;;
&#x9;DECLARE RNsize&#x9;&#x9;&#x9;INTEGER DEFAULT 14;
&#x9;DECLARE RTsize&#x9;&#x9;&#x9;INTEGER DEFAULT 14;
&#x9;DECLARE STsize&#x9;&#x9;&#x9;INTEGER DEFAULT 10;
&#x9;DECLARE RPsize&#x9;&#x9;&#x9;INTEGER DEFAULT 14;
&#x9;DECLARE padChar&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE eol&#x9;&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE indent4&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE line&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE field1&#x9;&#x9;&#x9;VARCHAR(1024);
&#x9;DECLARE field2&#x9;&#x9;&#x9;VARCHAR(1024);
&#x9;DECLARE field3&#x9;&#x9;&#x9;VARCHAR(1024);
&#x9;DECLARE field4&#x9;&#x9;&#x9;VARCHAR(1024);

&#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/string/getConstantV2(constantPath, &apos;padChar&apos;, 1, padChar);
&#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/string/getConstantV2(constantPath, &apos;eol&apos;, 1, eol);
&#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/string/getConstantV2(constantPath, &apos;indent4&apos;, 1, indent4);

&#x9;set formattedText = &apos;&apos;;
&#x9;set header = &#x9;&#x9; &apos;Resources Used:&apos;||eol;
&#x9;set header = header||&apos;---------------&apos;||eol;

&#x9;&#x9;-- First determine the max lengths for formatting purposes
&#x9;&#x9;for r as select * from /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/getUsedResourcesCursor(resourcePath, resourceType) do
&#x9;&#x9;&#x9;if (r.resourceName is not null) then
&#x9;&#x9;&#x9;&#x9;if (length(r.resourceName) &gt; RNsize) then
&#x9;&#x9;&#x9;&#x9;&#x9;set RNsize = length(r.resourceName);
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;if (r.resourceType is not null and length(r.resourceType) &gt; RTsize) then
&#x9;&#x9;&#x9;&#x9;&#x9;set RTsize = length(r.resourceType);
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;if (r.subtype is not null and length(r.subtype) &gt; STsize) then
&#x9;&#x9;&#x9;&#x9;&#x9;set STsize = length(r.subtype);
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;if (r.resourcePath is not null and length(r.resourcePath) &gt; RPsize) then
&#x9;&#x9;&#x9;&#x9;&#x9;set RPsize = length(r.resourcePath);
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;end for;
&#x9;&#x9;set RNsize = RNsize + 1;
&#x9;&#x9;set RTsize = RTsize + 1;
&#x9;&#x9;set STsize = STsize + 1;
&#x9;&#x9;set RPsize = RPsize + 1;

&#x9;&#x9;-- Establish the header
&#x9;&#x9;set header = header || indent4 || RPAD(&apos;Resource Name&apos;,RNsize,padChar) || RPAD(&apos;Resource Type&apos;,RTsize,padChar) || RPAD(&apos;Sub Type&apos;,STsize,padChar) || RPAD(&apos;Resource Path&apos;,RPsize,padChar)||eol;
&#x9;&#x9;set header = header || indent4 || RPAD(&apos;-&apos;,RNsize-1,&apos;-&apos;) ||&apos; &apos;|| RPAD(&apos;-&apos;,RTsize-1,&apos;-&apos;) ||&apos; &apos;|| RPAD(&apos;-&apos;,STsize-1,&apos;-&apos;) ||&apos; &apos;|| RPAD(&apos;-&apos;,RPsize-1,&apos;-&apos;)||eol;

&#x9;&#x9;-- Second, perform the formatting
&#x9;&#x9;for r as select * from /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/getUsedResourcesCursor(resourcePath, resourceType) do
&#x9;&#x9;&#x9;if (r.resourceName is not null) then
&#x9;&#x9;&#x9;&#x9;if (r.resourceName IS NOT NULL AND LENGTH(&apos;|&apos;||r.resourceName||&apos;|&apos;) &gt; 2) then
&#x9;&#x9;&#x9;&#x9;&#x9;set field1 = RPAD(NVL(r.resourceName,&apos;null&apos;),RNsize,padChar);
&#x9;&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;&#x9;set field1 = RPAD(&apos;N/A&apos;,RNsize,padChar);
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;if (r.resourceType IS NOT NULL AND LENGTH(&apos;|&apos;||r.resourceType||&apos;|&apos;) &gt; 2) then
&#x9;&#x9;&#x9;&#x9;&#x9;set field2 = RPAD(NVL(r.resourceType,&apos;null&apos;),RTsize,padChar);
&#x9;&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;&#x9;set field2 = RPAD(&apos;N/A&apos;,RTsize,padChar);
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;if (r.subtype IS NOT NULL AND LENGTH(&apos;|&apos;||r.subtype||&apos;|&apos;) &gt; 2) then
&#x9;&#x9;&#x9;&#x9;&#x9;set field3 = RPAD(NVL(r.subtype,&apos;null&apos;),STsize,padChar);
&#x9;&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;&#x9;set field3 = RPAD(&apos;N/A&apos;,STsize,padChar);
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;if (r.resourcePath IS NOT NULL AND LENGTH(&apos;|&apos;||r.resourcePath||&apos;|&apos;) &gt; 2) then
&#x9;&#x9;&#x9;&#x9;&#x9;set field4 = RPAD(NVL(r.resourcePath,&apos;null&apos;),RPsize,padChar);
&#x9;&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;&#x9;set field4 = RPAD(&apos;N/A&apos;,RPsize,padChar);
&#x9;&#x9;&#x9;&#x9;end if;
/*
&#x9;&#x9;&#x9;&#x9;call print(&apos;field1=[&apos;||field1||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;call print(&apos;field2=[&apos;||field2||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;call print(&apos;field3=[&apos;||field3||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;call print(&apos;field4=[&apos;||field4||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;call print(&apos;field1:&apos;||field1||&apos; field2:&apos;||field2||&apos; field3:&apos;||field3||&apos; field4:&apos;||field4);
*/
&#x9;&#x9;&#x9;&#x9;set line = indent4||field1 || field2 || field3 || field4 || eol;
--&#x9;&#x9;&#x9;&#x9;call print(&apos;line:&apos;||line);
&#x9;&#x9;&#x9;&#x9;set formattedText = formattedText || line;
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;end for;

&#x9;if (formattedText IS NOT NULL AND LENGTH(&apos;|&apos;||formattedText||&apos;|&apos;) &gt; 2) then
&#x9;&#x9;set formattedText = header || formattedText || eol;
&#x9;end if;

END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609965948495</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>