<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="getDocResourceProjection" path="/shared/Delta_DV/_scripts/Utilities/documentation/modules/getDocResourceProjection" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[getDocResourceProjection:

&#x9;This procedure returns the column projections for TABLES and PROCEDURES.
 
&#x9;Input:
&#x9;&#x9;resourcePath&#x9;&#x9;&#x9;The full resource path to the CIS resource to introspect and return the column projections if applicable.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Values: e.g. /shared/examples/CompositeView
&#x9;&#x9;resourceType&#x9;&#x9;&#x9;The type of resource.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Values: e.g. TABLE
&#x9;&#x9;constantPath&#x9;&#x9;&#x9;This is the path to the constants file
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Values: e.g. /shared/ASAssets/Utilities/documentation/constants()
&#x9;Output:
&#x9;&#x9;formattedText&#x9;&#x9;&#x9;The formatted text output.

&#x9;Exceptions:  none

&#x9;An example output is shown below:

Resource Column Projection:
---------------------------
    Column Name              Column Type          Native Base Type     Native Type          
    ------------------------ -------------------- -------------------- --------------------
    OrderID                  INTEGER              N/A                  N/A                  
    ProductID                INTEGER              N/A                  N/A                  
    Discount                 DECIMAL(12,2)        N/A                  N/A                  

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2012.3&#x9;&#x9;07/25/2012&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new
&#x9;2019.200&#x9;04/04/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Changed custom functions to explicit paths.

    (c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]></annotation>
  <parameters>
    <parameter name="resourcePath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="constantPath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="formattedText" direction="OUT" nullable="true">
      <datatype name="Text" referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/getBasicResourceCursor_PROCEDURE_CURSOR" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="fullResourcePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="cursorNum" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="resourceId">
            <datatype type="INTEGER"/>
          </element>
          <element name="resourceName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resourcePath">
            <datatype type="STRING" maxLength="4096"/>
          </element>
          <element name="resourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="changeId">
            <datatype type="INTEGER"/>
          </element>
          <element name="ownerName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactLevel">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="explicitlyDesigned">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="tableType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="sqlText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="proprietaryModel">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="columnNum">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="columnName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="columnType">
            <datatype type="STRING" maxLength="4096"/>
          </element>
          <element name="columnBaseType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="dataType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="paramDirection">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="nativeBaseType">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="nativeType">
            <datatype type="STRING" maxLength="32768"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/getBasicResourceCursor_SQL_TABLE" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="fullResourcePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="resourceId">
            <datatype type="INTEGER"/>
          </element>
          <element name="resourceName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resourcePath">
            <datatype type="STRING" maxLength="1024"/>
          </element>
          <element name="resourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="changeId">
            <datatype type="INTEGER"/>
          </element>
          <element name="ownerName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactLevel">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="explicitlyDesigned">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="tableType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="sqlText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="proprietaryModel">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="columnNum">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="columnName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="columnType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="nativeBaseType">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="nativeType">
            <datatype type="STRING" maxLength="32768"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/string/getConstantV2" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="constantsPath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="constantsName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="optionReturn" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="outValue" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* &#x9;getDocResourceProjection:

&#x9;This procedure returns the column projections for TABLES and PROCEDURES.
 
&#x9;Input:
&#x9;&#x9;resourcePath&#x9;&#x9;&#x9;The full resource path to the CIS resource to introspect and return the column projections if applicable.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Values: e.g. /shared/examples/CompositeView
&#x9;&#x9;resourceType&#x9;&#x9;&#x9;The type of resource.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Values: e.g. TABLE
&#x9;&#x9;constantPath&#x9;&#x9;&#x9;This is the path to the constants file
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Values: e.g. /shared/ASAssets/Utilities/documentation/constants()
&#x9;Output:
&#x9;&#x9;formattedText&#x9;&#x9;&#x9;The formatted text output.

&#x9;Exceptions:  none

&#x9;An example output is shown below:

Resource Column Projection:
---------------------------
    Column Name              Column Type          Native Base Type     Native Type          
    ------------------------ -------------------- -------------------- --------------------
    OrderID                  INTEGER              N/A                  N/A                  
    ProductID                INTEGER              N/A                  N/A                  
    Discount                 DECIMAL(12,2)        N/A                  N/A                  

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2012.3&#x9;&#x9;07/25/2012&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new
&#x9;2019.200&#x9;04/04/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Changed custom functions to explicit paths.
&#x9;2020.200&#x9;03/12/2020&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Added where clause to getBasicResourceCursor_SQL_TABLE and getBasicResourceCursor_PROCEDURE_CURSOR.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.


*/
PROCEDURE getDocResourceProjection(
    IN resourcePath &#x9;&#x9;LONGVARCHAR,  
    IN resourceType &#x9;&#x9;VARCHAR(255),
&#x9;IN constantPath&#x9;&#x9;&#x9;LONGVARCHAR,
&#x9;OUT formattedText&#x9;&#x9;/lib/util/System.Text
)
BEGIN
&#x9;DECLARE header&#x9;&#x9;&#x9;VARCHAR(1024) DEFAULT &apos;&apos;;
&#x9;DECLARE CNsize&#x9;&#x9;&#x9;INTEGER DEFAULT 20;
&#x9;DECLARE CTsize&#x9;&#x9;&#x9;INTEGER DEFAULT 20;
&#x9;DECLARE NBTsize&#x9;&#x9;&#x9;INTEGER DEFAULT 20;
&#x9;DECLARE NTsize&#x9;&#x9;&#x9;INTEGER DEFAULT 20;
&#x9;DECLARE padChar&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE eol&#x9;&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE indent4&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE line&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE field1&#x9;&#x9;&#x9;VARCHAR(1024);
&#x9;DECLARE field2&#x9;&#x9;&#x9;VARCHAR(1024);
&#x9;DECLARE field3&#x9;&#x9;&#x9;VARCHAR(1024);
&#x9;DECLARE field4&#x9;&#x9;&#x9;VARCHAR(1024);

&#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/string/getConstantV2(constantPath, &apos;padChar&apos;, 1, padChar);
&#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/string/getConstantV2(constantPath, &apos;eol&apos;, 1, eol);
&#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/string/getConstantV2(constantPath, &apos;indent4&apos;, 1, indent4);

&#x9;set formattedText = &apos;&apos;;
&#x9;set header = &#x9;&#x9; &apos;Resource Column Projection:&apos;||eol;
&#x9;set header = header||&apos;---------------------------&apos;||eol;

&#x9;-- Formatting for tables
&#x9;if (resourceType = &apos;TABLE&apos;) then
&#x9;&#x9;-- First determine the max lengths for formatting purposes
&#x9;&#x9;for r as 
&#x9;&#x9;&#x9;select * from /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/getBasicResourceCursor_SQL_TABLE(resourcePath, resourceType) 
&#x9;&#x9;&#x9;&#x9;where columnName is not null
&#x9;&#x9;do
--&#x9;&#x9;&#x9;call print(&apos;columnName=&apos;||NVL(r.columnName,&apos;null&apos;));
&#x9;&#x9;&#x9;if (length(r.columnName) &gt; CNsize) then
&#x9;&#x9;&#x9;&#x9;set CNsize = length(r.columnName);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;if (r.columnType is not null and length(r.columnType) &gt; CTsize) then
&#x9;&#x9;&#x9;&#x9;set CTsize = length(r.columnType);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;if (r.nativeBaseType is not null and length(r.nativeBaseType) &gt; NBTsize) then
&#x9;&#x9;&#x9;&#x9;set NBTsize = length(r.nativeBaseType);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;if (r.nativeType is not null and length(r.nativeType) &gt; NTsize) then
&#x9;&#x9;&#x9;&#x9;set NTsize = length(r.nativeType);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;end for;

&#x9;&#x9;set CNsize = CNsize + 1;
&#x9;&#x9;set CTsize = CTsize + 1;
&#x9;&#x9;set NBTsize = NBTsize + 1;
&#x9;&#x9;set NTsize = NTsize + 1;
--&#x9;&#x9;call print(&apos;CNsize=&apos;||CNsize||&apos; CTsize=&apos;||CTsize||&apos; NBTsize=&apos;||NBTsize||&apos; NTsize=&apos;||NTsize);

&#x9;&#x9;-- Establish the header
&#x9;&#x9;set header = header||indent4||RPAD(&apos;Column Name&apos;,CNsize,padChar) || RPAD(&apos;Column Type&apos;,CTsize,padChar) || RPAD(&apos;Native Base Type&apos;,NBTsize,padChar) || RPAD(&apos;Native Type&apos;,NTsize,padChar)||eol;
&#x9;&#x9;set header = header||indent4||RPAD(&apos;-&apos;,CNsize-1,&apos;-&apos;) ||&apos; &apos;|| RPAD(&apos;-&apos;,CTsize-1,&apos;-&apos;) ||&apos; &apos;|| RPAD(&apos;-&apos;,NBTsize-1,&apos;-&apos;) ||&apos; &apos;|| RPAD(&apos;-&apos;,NTsize-1,&apos;-&apos;)||eol;

&#x9;&#x9;-- Second, perform the actual formatting
&#x9;&#x9;for r as 
&#x9;&#x9;&#x9;select * from /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/getBasicResourceCursor_SQL_TABLE(resourcePath, resourceType) 
&#x9;&#x9;&#x9;&#x9;where columnName is not null
&#x9;&#x9;do
&#x9;&#x9;&#x9;if (r.columnType IS NOT NULL AND LENGTH(&apos;|&apos;||r.columnType||&apos;|&apos;) &gt; 2) then
&#x9;&#x9;&#x9;&#x9;set field1 = RPAD(NVL(r.columnName,&apos;null&apos;),CNsize,padChar);
&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;set field1 = RPAD(&apos;N/A&apos;,CNsize,padChar);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;if (r.columnType IS NOT NULL AND LENGTH(&apos;|&apos;||r.columnType||&apos;|&apos;) &gt; 2) then
&#x9;&#x9;&#x9;&#x9;set field2 = RPAD(NVL(r.columnType,&apos;null&apos;),CTsize,padChar);
&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;set field2 = RPAD(&apos;N/A&apos;,CTsize,padChar);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;if (r.nativeBaseType IS NOT NULL AND LENGTH(&apos;|&apos;||r.nativeBaseType||&apos;|&apos;) &gt; 2) then
&#x9;&#x9;&#x9;&#x9;set field3 = RPAD(NVL(r.nativeBaseType,&apos;null&apos;),NBTsize,padChar);
&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;set field3 = RPAD(&apos;N/A&apos;,NBTsize,padChar);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;if (r.nativeType IS NOT NULL AND LENGTH(&apos;|&apos;||r.nativeType||&apos;|&apos;) &gt; 2) then
&#x9;&#x9;&#x9;&#x9;set field4 = RPAD(NVL(r.nativeType,&apos;null&apos;),NTsize,padChar);
&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;set field4 = RPAD(&apos;N/A&apos;,NTsize,padChar);
&#x9;&#x9;&#x9;end if;
/*
&#x9;&#x9;&#x9;&#x9;call print(&apos;field1=[&apos;||field1||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;call print(&apos;field2=[&apos;||field2||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;call print(&apos;field3=[&apos;||field3||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;call print(&apos;field4=[&apos;||field4||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;call print(&apos;field1:&apos;||field1||&apos; field2:&apos;||field2||&apos; field3:&apos;||field3||&apos; field4:&apos;||field4);
*/
&#x9;&#x9;&#x9;set line = indent4 || field1 || field2 || field3 || field4 || eol;
--&#x9;&#x9;&#x9;call print(&apos;line:&apos;||line);
&#x9;&#x9;&#x9;set formattedText = formattedText || line;
&#x9;&#x9;end for;
&#x9;end if;

&#x9;-- Formatting for procedures.
&#x9;if (resourceType = &apos;PROCEDURE&apos;) then
&#x9;&#x9;for r as 
&#x9;&#x9;&#x9;select * from /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/getBasicResourceCursor_PROCEDURE_CURSOR(resourcePath, resourceType, null) 
&#x9;&#x9;&#x9;&#x9;where columnName is not null and columnNum &gt; 0
&#x9;&#x9;do
&#x9;&#x9;&#x9;if (length(r.columnName) &gt; CNsize) then
&#x9;&#x9;&#x9;&#x9;set CNsize = length(r.columnName);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;if (r.columnType is not null and length(r.columnType) &gt; CTsize) then
&#x9;&#x9;&#x9;&#x9;set CTsize = length(r.columnType);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;if (r.nativeBaseType is not null and length(r.nativeBaseType) &gt; NBTsize) then
&#x9;&#x9;&#x9;&#x9;set NBTsize = length(r.nativeBaseType);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;if (r.nativeType is not null and length(r.nativeType) &gt; NTsize) then
&#x9;&#x9;&#x9;&#x9;set NTsize = length(r.nativeType);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;end for;

&#x9;&#x9;set CNsize = CNsize + 1;
&#x9;&#x9;set CTsize = CTsize + 1;
&#x9;&#x9;set NBTsize = NBTsize + 1;
&#x9;&#x9;set NTsize = NTsize + 1;
--&#x9;&#x9;call print(&apos;CNsize=&apos;||CNsize||&apos; CTsize=&apos;||CTsize||&apos; NBTsize=&apos;||NBTsize||&apos; NTsize=&apos;||NTsize);

&#x9;&#x9;-- Establish the header
&#x9;&#x9;set header = header||indent4||RPAD(&apos;Column Name&apos;,CNsize,padChar) || RPAD(&apos;Column Type&apos;,CTsize,padChar) || RPAD(&apos;Native Base Type&apos;,NBTsize,padChar) || RPAD(&apos;Native Type&apos;,NTsize,padChar)||eol;
&#x9;&#x9;set header = header||indent4||RPAD(&apos;-&apos;,CNsize-1,&apos;-&apos;) ||&apos; &apos;|| RPAD(&apos;-&apos;,CTsize-1,&apos;-&apos;) ||&apos; &apos;|| RPAD(&apos;-&apos;,NBTsize-1,&apos;-&apos;) ||&apos; &apos;|| RPAD(&apos;-&apos;,NTsize-1,&apos;-&apos;)||eol;

&#x9;&#x9;-- Second, perform the actual formatting
&#x9;&#x9;for r as 
&#x9;&#x9;&#x9;select * from /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/getBasicResourceCursor_PROCEDURE_CURSOR(resourcePath, resourceType, null) 
&#x9;&#x9;&#x9;&#x9;where columnName is not null and columnNum &gt; 0
&#x9;&#x9;do
&#x9;&#x9;&#x9;if (r.columnType IS NOT NULL AND LENGTH(&apos;|&apos;||r.columnType||&apos;|&apos;) &gt; 2) then
&#x9;&#x9;&#x9;&#x9;set field1 = RPAD(NVL(r.columnName,&apos;null&apos;),CNsize,padChar);
&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;set field1 = RPAD(&apos;N/A&apos;,CNsize,padChar);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;if (r.columnType IS NOT NULL AND LENGTH(&apos;|&apos;||r.columnType||&apos;|&apos;) &gt; 2) then
&#x9;&#x9;&#x9;&#x9;set field2 = RPAD(NVL(r.columnType,&apos;null&apos;),CTsize,padChar);
&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;set field2 = RPAD(&apos;N/A&apos;,CTsize,padChar);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;if (r.nativeBaseType IS NOT NULL AND LENGTH(&apos;|&apos;||r.nativeBaseType||&apos;|&apos;) &gt; 2) then
&#x9;&#x9;&#x9;&#x9;set field3 = RPAD(NVL(r.nativeBaseType,&apos;null&apos;),NBTsize,padChar);
&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;set field3 = RPAD(&apos;N/A&apos;,NBTsize,padChar);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;if (r.nativeType IS NOT NULL AND LENGTH(&apos;|&apos;||r.nativeType||&apos;|&apos;) &gt; 2) then
&#x9;&#x9;&#x9;&#x9;set field4 = RPAD(NVL(r.nativeType,&apos;null&apos;),NTsize,padChar);
&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;set field4 = RPAD(&apos;N/A&apos;,NTsize,padChar);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;set line = indent4 || field1 || field2 || field3 || field4 || eol;
/*
&#x9;&#x9;&#x9;call print(&apos;field1=[&apos;||field1||&apos;]&apos;);
&#x9;&#x9;&#x9;call print(&apos;field2=[&apos;||field2||&apos;]&apos;);
&#x9;&#x9;&#x9;call print(&apos;field3=[&apos;||field3||&apos;]&apos;);
&#x9;&#x9;&#x9;call print(&apos;field4=[&apos;||field4||&apos;]&apos;);
&#x9;&#x9;&#x9;call print(&apos;field1:&apos;||field1||&apos; field2:&apos;||field2||&apos; field3:&apos;||field3||&apos; field4:&apos;||field4);
&#x9;&#x9;&#x9;call print(&apos;line:&apos;||line);
*/
&#x9;&#x9;&#x9;set formattedText = formattedText || line;
&#x9;&#x9;end for;
&#x9;end if;

&#x9;if (formattedText IS NOT NULL AND LENGTH(&apos;|&apos;||formattedText||&apos;|&apos;) &gt; 2) then
&#x9;&#x9;set formattedText = header || formattedText || eol;
&#x9;end if;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609965948495</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>