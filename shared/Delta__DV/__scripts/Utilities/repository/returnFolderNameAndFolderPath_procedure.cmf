<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="returnFolderNameAndFolderPath" path="/shared/Delta_DV/_scripts/Utilities/repository/returnFolderNameAndFolderPath" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[-- CIS Repository Helper Procedure --
&#x9;Return the root folder name and the remaing folder path.  Used for traversing folder structures either
&#x9;top down or bottom up.  This procedure is also used when creating a folder structure from beginning to end.
 
&#x9;Input:
&#x9;&#x9;fullResourcePath - Full resource path which includes the path and the resource name  
&#x9;&#x9;&#x9;Values: e.g. /shared/f1/f2/r1
&#x9;&#x9;mode - defines the mode by which to extract folder path and root name  
&#x9;&#x9;&#x9;Values: B or E, &apos;B&apos;=beginning folder and remaining folder path, 
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;E&apos;=ending folder remaining folder path
&#x9;Output:
&#x9;&#x9;folderName - contains the root folder name extracted from the incoming fullResourcePath
&#x9;&#x9;folderPath - contains the remaining folder path

&#x9;&#x9;Example 1: CIS path example: /shared/f1/f2/r1
&#x9;&#x9;&#x9;&#x9;when &apos;B&apos; then folderName=&apos;shared&apos; and folderPath=&apos;/f1/f2/r1&apos;
&#x9;&#x9;&#x9;&#x9;when &apos;E&apos; then folderName=&apos;r1&apos; and folderPath=&apos;/shared/f1/f2&apos;

&#x9;&#x9;Example 2: Windows path example: C:\d1\d2\file1
&#x9;&#x9;&#x9;&#x9;when &apos;B&apos; then folderName=&apos;C:&apos; and folderPath=&apos;/d1/d2/file1&apos;
&#x9;&#x9;&#x9;&#x9;when &apos;E&apos; then folderName=&apos;file1&apos; and folderPath=&apos;C:/d1/d2&apos;

&#x9;Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2010.3&#x9;&#x9;08/02/2010&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.1.0&#x9;&#x9;&#x9;Created new
&#x9;2014.4&#x9;&#x9;09/08/2014&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.6&#x9;&#x9;&#x9;Modified code to use INSTR and SUBSTR instead of character looping.
&#x9;2014.4&#x9;&#x9;09/25/2014&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.6&#x9;&#x9;&#x9;Fixed bug from previous code change that affects mode=E

    (c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]></annotation>
  <parameters>
    <parameter name="fullResourcePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="mode" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="folderName" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="folderPath" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <attribute name="Script" type="STRING">/* returnFolderNameAndFolderPath:
&#x9;-- CIS Repository Helper Procedure --
&#x9;Return the root folder name and the remaing folder path.  Used for traversing folder structures either
&#x9;top down or bottom up.  This procedure is also used when creating a folder structure from beginning to end.
 
&#x9;Input:
&#x9;&#x9;fullResourcePath - Full resource path which includes the path and the resource name  
&#x9;&#x9;&#x9;Values: e.g. /shared/f1/f2/r1
&#x9;&#x9;mode - defines the mode by which to extract folder path and root name  
&#x9;&#x9;&#x9;Values: B or E, &apos;B&apos;=beginning folder and remaining folder path, 
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;E&apos;=ending folder remaining folder path
&#x9;Output:
&#x9;&#x9;folderName - contains the root folder name extracted from the incoming fullResourcePath
&#x9;&#x9;folderPath - contains the remaining folder path

&#x9;&#x9;Example 1: CIS path example: /shared/f1/f2/r1
&#x9;&#x9;&#x9;&#x9;when &apos;B&apos; then folderName=&apos;shared&apos; and folderPath=&apos;/f1/f2/r1&apos;
&#x9;&#x9;&#x9;&#x9;when &apos;E&apos; then folderName=&apos;r1&apos; and folderPath=&apos;/shared/f1/f2&apos;

&#x9;&#x9;Example 2: Windows path example: C:\d1\d2\file1
&#x9;&#x9;&#x9;&#x9;when &apos;B&apos; then folderName=&apos;C:&apos; and folderPath=&apos;/d1/d2/file1&apos;
&#x9;&#x9;&#x9;&#x9;when &apos;E&apos; then folderName=&apos;file1&apos; and folderPath=&apos;C:/d1/d2&apos;

&#x9;Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2010.3&#x9;&#x9;08/02/2010&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.1.0&#x9;&#x9;&#x9;Created new
&#x9;2014.4&#x9;&#x9;09/08/2014&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.6&#x9;&#x9;&#x9;Modified code to use INSTR and SUBSTR instead of character looping.
&#x9;2014.4&#x9;&#x9;09/25/2014&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.6&#x9;&#x9;&#x9;Fixed bug from previous code change that affects mode=E

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE returnFolderNameAndFolderPath(
&#x9;IN fullResourcePath &#x9;VARCHAR(4096),  -- full path to resource
&#x9;IN mode&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1), -- &apos;B&apos;=beginning folder and remaining folder path, &apos;E&apos;=ending folder remaining folder path
&#x9;OUT folderName&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;OUT folderPath  &#x9;&#x9;VARCHAR(4096)
)
BEGIN
&#x9;DECLARE pos&#x9; &#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE windowsRoot&#x9;&#x9;&#x9;VARCHAR DEFAULT NULL;

&#x9;-- Trim any leading or trailing spaces
&#x9;set folderPath = TRIM(fullResourcePath);
&#x9;-- Normalize separators to make it easier
&#x9;set folderPath = REPLACE(folderPath,&apos;\&apos;,&apos;/&apos;);
&#x9;-- Make sure there is only a single separator
&#x9;set folderPath = REPLACE(folderPath,&apos;//&apos;,&apos;/&apos;); 

&#x9;-- A path should look like this: /shared/folder1/folder2/resource1
&#x9;-- Extract the windows root portion of the path: C:/path/to/file
&#x9;--      Extract &quot;C:&quot; into windowsRoot and the rest of the path into /path/to/file into folderPath
&#x9;set pos = POSITION(&apos;:/&apos; in folderPath);
&#x9;if (pos &gt; 0) then
&#x9;&#x9;set windowsRoot = SUBSTRING(folderPath, 1, pos);
&#x9;&#x9;set folderPath = SUBSTRING(folderPath, pos+1, LENGTH(folderPath));
&#x9;end if;

&#x9;-- Add leading / but only if a windows drive is not present such as c:
&#x9;if (SUBSTRING(folderPath,1,1) &lt;&gt; &apos;/&apos; and POSITION(&apos;:&apos; in folderPath) = 0) then
&#x9;&#x9;set folderPath = &apos;/&apos;||folderPath;
&#x9;end if;

&#x9;-- Remove trailing /
&#x9;if (SUBSTRING(folderPath,length(folderPath),1) = &apos;/&apos;) then
&#x9;&#x9;set folderPath = SUBSTRING(folderPath,1,length(folderPath)-1);
&#x9;end if;

&#x9;-- Extract the beginning &quot;B&quot; folder part
&#x9;if (upper(mode) = &apos;B&apos;) then
&#x9;&#x9;-- When there is a windows root in the path then return it as the folder name the remaining path as the folder path
&#x9;&#x9;if (windowsRoot is not null) then
&#x9;&#x9;&#x9;set folderName = windowsRoot;
&#x9;&#x9;else
&#x9;&#x9;&#x9;-- Extract the position of the first folder occurrence at the beginning of the string
&#x9;&#x9;&#x9;SET pos = INSTR(SUBSTR(folderPath,2,LENGTH(folderPath)), &apos;/&apos;) ;
&#x9;&#x9;&#x9;if (pos &gt; 0) then
&#x9;&#x9;&#x9;&#x9;SET folderName = SUBSTR(folderPath, 2, pos-1);
&#x9;&#x9;&#x9;&#x9;SET folderPath = SUBSTR(folderPath, pos+1, LENGTH(folderPath));
&#x9;&#x9;&#x9;else -- use case when the folder is like /a or c:/a with no other parts to it
&#x9;&#x9;&#x9;&#x9;-- If there is a windows root path then add it back into the folder name
&#x9;&#x9;&#x9;&#x9;SET folderName = SUBSTR(folderPath, 2, LENGTH(folderPath));
&#x9;&#x9;&#x9;&#x9;SET folderPath = &apos;&apos;;&#x9;&#x9;&#x9;
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;end if;
&#x9;--  Extract the Ending &quot;E&quot; folder part
&#x9;else 
&#x9;&#x9;-- Extract position of folder at the end of the string
&#x9;&#x9;SET pos = INSTR(REVERSE(folderPath), &apos;/&apos;) ;
&#x9;&#x9;SET folderName = REVERSE(SUBSTR(REVERSE(folderPath), 1, pos-1));
&#x9;&#x9;SET folderPath = SUBSTR(folderPath, 1, LENGTH(folderPath) - pos);
&#x9;&#x9;-- If there is a windows root path then add it back into the folder path
&#x9;&#x9;if (windowsRoot is not null) then
&#x9;&#x9;&#x9;if (LENGTH(folderPath) &gt; 0) then
&#x9;&#x9;&#x9;&#x9;set folderPath = windowsRoot || folderPath;
&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;set folderPath = windowsRoot;
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;end if;
&#x9;end if;
&#x9;if (folderName is null) then
&#x9;&#x9;set folderPath = null;
&#x9;end if;
END</attribute>
  <attribute name="creationDate" type="LONG">1376679119330</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609896176534</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>