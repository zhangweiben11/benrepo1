<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="getResourceLineageDatasources" path="/shared/Delta_DV/_scripts/Utilities/repository/getResourceLineageDatasources" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[getResourceLineageDatasources:

&#x9;Return the list of Data Sources used by a given resource path.  
&#x9;1. Start with the resource path and recursively walk its lineage until no more resources are found.   
&#x9;2. For each resource found, determine if that resources has as associated resource of type=DATA_SOURCE.
&#x9;3. Find the distinct list of data sources for this resource
 
&#x9;Input:
   &#x9;&#x9;resourcePath - CIS source resource path to being assessing the parent data lineage
&#x9;&#x9;&#x9;Values: e.g. /shared/examples/ViewSales [this is a SQL VIEW.]
&#x9;&#x9;resourceType - Type of CIS resource to be created.  It is null on the first invocation.
&#x9;&#x9;&#x9;Values: see &quot;TYPES / SUBTYPES&quot; listing below.  e.g. TABLE
&#x9;&#x9;excludePathsList&#x9;- comma separated list of resource paths or partials paths to exclude
&#x9;&#x9;&#x9;Values: /shared/Utilities,/lib
&#x9;&#x9;datasourceAncestor&#x9;- flag to get the data source ancestors 
&#x9;&#x9;&#x9;Values: 1=yes, 0=no
&#x9;&#x9;inIgnoreResourceDoesNotExist - Ignore any resources that do not exist
&#x9;&#x9;&#x9;Values: 1 = Bypass the processing of that resource.  0 = (default) Do not ignore any resources.  Throw an error that the resource does not exist.
&#x9;Output:
&#x9;&#x9;datasourceResource - cursor result
 &#x9;  DECLARE PUBLIC TYPE  ResourceLineageDatasourceType ROW (
&#x9;&#x9;&#x9;id&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER,
&#x9;&#x9;&#x9;resourceName&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;resourcePath&#x9;&#x9;TypeDefinitions.pathType,
&#x9;&#x9;&#x9;resourceType &#x9;&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;subtype&#x9;&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;enabled&#x9;&#x9;&#x9;&#x9;BIT,
&#x9;&#x9;&#x9;childCount&#x9;&#x9;&#x9;INTEGER
&#x9;&#x9;);
Values: example:
id&#x9;&#x9;resourceName&#x9;resourcePath&#x9;&#x9;&#x9;&#x9;&#x9;resourceType&#x9;subtype&#x9;&#x9;&#x9;&#x9;&#x9;enabled&#x9;childCount
20670&#x9;ds_orders&#x9;&#x9;/shared/examples/ds_orders&#x9;&#x9;DATA_SOURCE&#x9;&#x9;RELATIONAL_DATA_SOURCE&#x9;1&#x9;&#x9;7
20756&#x9;ds_XML&#x9;&#x9;&#x9;/shared/examples/ds_XML&#x9;&#x9;&#x9;DATA_SOURCE&#x9;&#x9;XML_FILE_DATA_SOURCE&#x9;1&#x9;&#x9;1
20605&#x9;ds_inventory&#x9;/shared/examples/ds_inventory&#x9;DATA_SOURCE&#x9;&#x9;RELATIONAL_DATA_SOURCE&#x9;1&#x9;&#x9;4

&#x9;Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2012.401&#x9;11/12/2012&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new
&#x9;2013.4&#x9;&#x9;10/28/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.0&#x9;&#x9;&#x9;Added parameter inIgnoreResourceDoesNotExist
&#x9;2014.2&#x9;&#x9;03/20/2014&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.0&#x9;&#x9;&#x9;Added parameter to getResourceListRecursive to support recursion detection.
&#x9;2018.400&#x9;11/13/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Added dataSourceType to lineageTreeType.

    (c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]></annotation>
  <parameters>
    <parameter name="resourcePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="excludePathsList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="datasourceAncestor" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="inIgnoreResourceDoesNotExist" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="datasourceResource" direction="OUT" nullable="true">
      <datatype name="ResourceLineageDatasourceType" type="TABLE" refId="256">
        <element name="id">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="resourceName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="resourcePath">
          <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
        </element>
        <element name="resourceType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="subtype">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="enabled">
          <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
        </element>
        <element name="childCount">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="dataSourceType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/definitions/RepositoryDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/getResourceLineageRecursive" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inSeqNum" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inParentID" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inResourceDepth" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inLineageResourceIdList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="resourcePath" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="excludePathsList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="datasourceAncestor" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inIgnoreResourceDoesNotExist" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="resourceTreeList" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="seqNum">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="resourceID">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="parentID">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="resDepth">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="treeType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resPath">
            <datatype type="STRING" maxLength="4096"/>
          </element>
          <element name="resType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="dsID">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="dsResName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="dsResPath">
            <datatype type="STRING" maxLength="4096"/>
          </element>
          <element name="dsResType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="dsResSubType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="dsEnabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="dsChildCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="dataSourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creationDate">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creationDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="creatorUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creatorUserId">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creatorUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedDate">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="lastModifiedUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedUserId">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* getResourceLineageDatasources:

&#x9;Return the list of Data Sources used by a given resource path.  
&#x9;1. Start with the resource path and recursively walk its lineage until no more resources are found.   
&#x9;2. For each resource found, determine if that resources has as associated resource of type=DATA_SOURCE.
&#x9;3. Find the distinct list of data sources for this resource
 
&#x9;Input:
   &#x9;&#x9;resourcePath - CIS source resource path to being assessing the parent data lineage
&#x9;&#x9;&#x9;Values: e.g. /shared/examples/ViewSales [this is a SQL VIEW.]
&#x9;&#x9;resourceType - Type of CIS resource to be created.  It is null on the first invocation.
&#x9;&#x9;&#x9;Values: see &quot;TYPES / SUBTYPES&quot; listing below.  e.g. TABLE
&#x9;&#x9;excludePathsList&#x9;- comma separated list of resource paths or partials paths to exclude
&#x9;&#x9;&#x9;Values: /shared/Utilities,/lib
&#x9;&#x9;datasourceAncestor&#x9;- flag to get the data source ancestors 
&#x9;&#x9;&#x9;Values: 1=yes, 0=no
&#x9;&#x9;inIgnoreResourceDoesNotExist - Ignore any resources that do not exist
&#x9;&#x9;&#x9;Values: 1 = Bypass the processing of that resource.  0 = (default) Do not ignore any resources.  Throw an error that the resource does not exist.
&#x9;Output:
&#x9;&#x9;datasourceResource - cursor result
 &#x9;  DECLARE PUBLIC TYPE  ResourceLineageDatasourceType ROW (
&#x9;&#x9;&#x9;id&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER,
&#x9;&#x9;&#x9;resourceName&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;resourcePath&#x9;&#x9;TypeDefinitions.pathType,
&#x9;&#x9;&#x9;resourceType &#x9;&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;subtype&#x9;&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;enabled&#x9;&#x9;&#x9;&#x9;BIT,
&#x9;&#x9;&#x9;childCount&#x9;&#x9;&#x9;INTEGER,
&#x9;&#x9;&#x9;dataSourceType&#x9;&#x9;VARCHAR(255)
&#x9;&#x9;);
Values: example:
id&#x9;&#x9;resourceName&#x9;resourcePath&#x9;&#x9;&#x9;&#x9;&#x9;resourceType&#x9;subtype&#x9;&#x9;&#x9;&#x9;&#x9;enabled&#x9;childCount
20670&#x9;ds_orders&#x9;&#x9;/shared/examples/ds_orders&#x9;&#x9;DATA_SOURCE&#x9;&#x9;RELATIONAL_DATA_SOURCE&#x9;1&#x9;&#x9;7
20756&#x9;ds_XML&#x9;&#x9;&#x9;/shared/examples/ds_XML&#x9;&#x9;&#x9;DATA_SOURCE&#x9;&#x9;XML_FILE_DATA_SOURCE&#x9;1&#x9;&#x9;1
20605&#x9;ds_inventory&#x9;/shared/examples/ds_inventory&#x9;DATA_SOURCE&#x9;&#x9;RELATIONAL_DATA_SOURCE&#x9;1&#x9;&#x9;4

&#x9;Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2012.401&#x9;11/12/2012&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new
&#x9;2013.4&#x9;&#x9;10/28/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.0&#x9;&#x9;&#x9;Added parameter inIgnoreResourceDoesNotExist
&#x9;2014.2&#x9;&#x9;03/20/2014&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.0&#x9;&#x9;&#x9;Added parameter to getResourceListRecursive to support recursion detection.
&#x9;2018.400&#x9;11/13/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Added dataSourceType to lineageTreeType.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE getResourceLineageDatasources(
&#x9;IN resourcePath &#x9;&#x9;&#x9;&#x9;VARCHAR(4096), -- /shared/examples/CompositeView
&#x9;IN resourceType&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR,&#x9; -- TABLE
&#x9;IN excludePathsList&#x9;&#x9;&#x9;&#x9;LONGVARCHAR, -- comma separate list of resource paths or partials paths to exclude
&#x9;IN datasourceAncestor &#x9;&#x9;&#x9;INTEGER, &#x9; -- flag to get the data source ancestory (1=yes, 0=no)
&#x9;IN inIgnoreResourceDoesNotExist&#x9;INTEGER, &#x9;&#x9;-- Ignore any resources that do not exist
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- 1 = Bypass the processing of that resource.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- 0 = (default) Do not ignore any resources.  Throw an error that the resource does not exist.
&#x9;OUT datasourceResource &#x9;PIPE /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/definitions/RepositoryDefinitions.ResourceLineageDatasourceType
)
BEGIN
&#x9;DECLARE dsUniqueList&#x9;/lib/util/System.Text DEFAULT &apos;&apos;;
&#x9;DECLARE dsRec &#x9;&#x9;&#x9;/shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/definitions/RepositoryDefinitions.ResourceLineageDatasourceType;
&#x9;FOR r AS
&#x9;&#x9;SELECT * 
&#x9;&#x9;FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/getResourceLineageRecursive(NULL, NULL, NULL, NULL, resourcePath, resourceType, excludePathsList, datasourceAncestor,inIgnoreResourceDoesNotExist) 
&#x9;&#x9;WHERE dsResPath is not null
&#x9;DO
&#x9;&#x9;if (r.dsResPath is not null and POSITION(&apos;[&apos;||r.dsResPath||&apos;]&apos; in dsUniqueList) = 0) then
&#x9;&#x9;&#x9;-- Add the data source to the unique list in order to keep track of what has been inserted already
&#x9;&#x9;&#x9;--   getResourceLineageRecursive may return multiple rows that use the same data source
&#x9;&#x9;&#x9;set dsUniqueList = dsUniqueList || &apos;[&apos;|| r.dsResPath || &apos;] &apos;;

&#x9;&#x9;&#x9;-- Setup the output record
&#x9;&#x9;&#x9;set dsRec.id = r.dsID;
&#x9;&#x9;&#x9;set dsRec.resourceName = r.dsResName;
&#x9;&#x9;&#x9;set dsRec.resourcePath = r.dsResPath;
&#x9;&#x9;&#x9;set dsRec.resourceType = r.dsResType;
&#x9;&#x9;&#x9;set dsRec.subtype = r.dsResSubType;
&#x9;&#x9;&#x9;set dsRec.enabled = r.dsEnabled;
&#x9;&#x9;&#x9;set dsRec.childCount = r.dsChildCount;
&#x9;&#x9;&#x9;set dsRec.dataSourceType = r.dataSourceType;

&#x9;&#x9;&#x9;-- Insert the data source information into the output pipe
&#x9;&#x9;&#x9;INSERT INTO datasourceResource VALUES(dsRec);
&#x9;&#x9;end if;
&#x9;END FOR;
END</attribute>
  <attribute name="creationDate" type="LONG">1369417729295</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609965948495</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>