<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="getServerAttributeMapByKey" path="/shared/Delta_DV/_scripts/Utilities/repository/server/getServerAttributeMapByKey" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[getServerAttributeMapByKey:
    Get a specific key/value pair for the passed in Key Map Identifier.
 
&#x9;Input:
   &#x9; &#x9;attributePath - a server attribute path that contains a map like: /studio/data/examplemap
    &#x9;keyName - This is the key value ID in for a map opbject
&#x9;Output:
&#x9;&#x9;keyValue&#x9;- This is the value fro a given key in a map object

&#x9;Exceptions:  Exception is thrown if a path does not exist or the user does not have permission

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2012.2&#x9;&#x9;2/10/2012&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new 

    (c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]></annotation>
  <parameters>
    <parameter name="attributePath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="keyName" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="keyValue" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/server/getServerAttributeMap" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="attributePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="keyName">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="keyValue">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* getServerAttributeMapByKey:

&#x9;[DEPRECATED] - use /shared/ASAssets/Utilities/repository/getServerAttribute

    Get a specific key/value pair for the passed in Key Map Identifier.
 
&#x9;Input:
   &#x9; &#x9;attributePath - a server attribute path that contains a map like: /studio/data/examplemap
    &#x9;keyName - This is the key value ID in for a map opbject
&#x9;Output:
&#x9;&#x9;keyValue&#x9;- This is the value fro a given key in a map object

&#x9;Exceptions:  Exception is thrown if a path does not exist or the user does not have permission

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2012.2&#x9;&#x9;2/10/2012&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new 
&#x9;2019.400&#x9;10/15/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;[DEPRECATED] - use /shared/ASAssets/Utilities/repository/getServerAttribute

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE getServerAttributeMapByKey(
   &#x9;IN  attributePath&#x9;&#x9;LONGVARCHAR, -- a server attribute path that contains a map like: /studio/data/examplemap
&#x9;IN  keyName&#x9;&#x9;&#x9;&#x9;LONGVARCHAR, -- This is the key name in for a map opbject
&#x9;OUT keyValue&#x9;&#x9;&#x9;LONGVARCHAR  -- This is the value for a given key in a map object
)
BEGIN
&#x9;DECLARE getServerAttributesResponse&#x9;XML;
&#x9;DECLARE faultResponse&#x9;&#x9;&#x9;&#x9;XML;
&#x9;DECLARE serverAttrXSLT&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;

&#x9;set keyValue = null;

&#x9;for r as 
&#x9;&#x9;select * from /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/server/getServerAttributeMap(attributePath) 
&#x9;do
&#x9;&#x9;if (keyName = r.keyName and keyValue is null) then
--&#x9;&#x9;&#x9;call print(&apos;FOUND::key=&apos;||r.keyName || &apos;  keyValue=&apos;||r.keyValue);
&#x9;&#x9;&#x9;set keyValue = r.keyValue;
&#x9;&#x9;else
--&#x9;&#x9;&#x9;call print(&apos;NOT FOUND::key=&apos;||r.keyName || &apos;  keyValue=&apos;||r.keyValue);
&#x9;&#x9;end if;
&#x9;end for;

END
</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609965948495</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>