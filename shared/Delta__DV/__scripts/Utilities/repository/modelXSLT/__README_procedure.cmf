<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="_README" path="/shared/Delta_DV/_scripts/Utilities/repository/modelXSLT/_README" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[
    (c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.


]]></annotation>
  <parameters></parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <attribute name="Script" type="STRING">PROCEDURE &quot;_README&quot;()
BEGIN
/*&#x9;Purpose:  The &quot;modelXSLT&quot; folder remains in the repository folder for development purposes only.  
&#x9;It is meant to provide guidelines on how to create and test an XSLT transformation that takes 
&#x9;input from an input variable instead of an XML file.

&#x9;Uses the procedure /shared/Utilities/xml/reverseXML - This procedure is used to reverse the direction 
&#x9;&#x9;of the XML to provide a datasource to an XSLT transformation.

&#x9;IMPORTANT:
&#x9;When creating an XSLT transformation, you first have to bind to an XML file to create the transformation.
&#x9;However, if you simply want to transform an inflight XML document within CIS using one of these XSLT functions,
&#x9;then you have to follow these steps.  It is easier to construct the XSLT using Studio then to create it by hand.
&#x9;You have the option of creating it by hand as well.

&#x9;The trick is to create an XSLT transformation by pointing to a procedure like this one (reverseXML) that takes
&#x9;  in an XML parameter and returns an XML parameter.
&#x9;In effect, this procedure is a pass-through procedure that reverses direction.
&#x9;The XSLT procedures passes in an XML document which in turns passes it down to this procedure which turns around
&#x9;  and passes it back out as output to the XSLT. 
&#x9;Therefore the XSLT can apply it&apos;s transformation against XML that was passed into it.  This is the best way to 
&#x9;  accomplish returning cursor data for a custom XSLT function where the datasource is an XML parameter and not
 &#x9;  an actual XML datasource file.

&#x9;The objective is to return a cursor of data for multipe XML rows found.

&#x9;Step 1.  Model your XSLT against an XML file containing your XML.  
&#x9;&#x9; a. Name the file something descriptive of the XML and add _file to the end of the name.
&#x9;&#x9; b. Expand the XML definition in the Data Map tab. 
&#x9;&#x9; c. Select an XML node and click the &quot;Create Link And Target&quot; icon to add the column to the cursor output.
&#x9;&#x9; d. Save
&#x9;Step 2.  Copy the XSLT procedure
&#x9;&#x9; a. Copy the file you created in step 1 and rename it by removing everything after _file in the name.
&#x9;Step 3.  Rebind the XSLT to use the reversXML
&#x9;&#x9; a. Open the newly copied file.
&#x9;&#x9; b. Click on rebind
&#x9;&#x9; c. Withing the rebind tab, click on the rebind icon again to rebind from the file to reverseXML.
&#x9;&#x9;&#x9;This has the effect of wiping out the XSLT.  However, now the input tab will now show that
&#x9;&#x9;&#x9;the XSLT procedure has an input variable of type XML.
&#x9;Step 4.  Restore the original XSLT script
&#x9;&#x9; a. Open the original XSLT file and copy the XSLT script into the memory buffer.
&#x9;&#x9; b. Back in the new file, select the XSLT tab and past the xslt script from the memory buffer.
&#x9;&#x9; c. It prompts that the Data Map panel will be disabled.  Click yes.
&#x9;Step 5.  Create a test procedure to invoke the XSLT.
&#x9;&#x9; a. Create a Parameterized View.
&#x9;&#x9; b. Drag the new XSLT procedure into the view.  This is done so that the cursor output is automatically 
&#x9;&#x9;&#x9;generated for you.  reduce the work.
&#x9;&#x9; c. After BEGIN, add the following code:
&#x9;&#x9;&#x9;declare inXML XML;
&#x9;&#x9;&#x9;set inXML = &apos;&apos;;
&#x9;&#x9; d. Copy the XML from the original XML file and paste in between the single quotes &apos;&apos; 
&#x9;&#x9;&#x9;for the &quot;set inXML&quot; statement.
&#x9;&#x9; d. Modify the invocation to your XSLT procedure to pass in the variable inXML instead of the
&#x9;&#x9;&#x9;static XML string that is currently there.

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2010.3&#x9;&#x9;8/2/2010&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.1.0&#x9;&#x9;&#x9;Created new 

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
END</attribute>
  <attribute name="creationDate" type="LONG">1383622341939</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609896176534</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>