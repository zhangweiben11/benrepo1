<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="getBasicResourceCursor_SQL_TABLE" path="/shared/Delta_DV/_scripts/Utilities/repository/getBasicResourceCursor_SQL_TABLE" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[getBasicResourceCursor_SQL_TABLE:
&#x9;-- CIS Repository Helper Procedure --
&#x9;This procedure retrieves the resource metadata for a given resource that is a SQL TABLE/VIEW.  
&#x9;A cursor of metadata is returned. This procedure invokes 2 lower level API procedures:
&#x9;&#x9;getBasicResourceXML - this performs the actual invocation to the CIS repository API and returns XML
&#x9;&#x9;getBasicResourceXSLT_SQL_TABLE - this procedure takes the XML response from getBasicResourceXML 
&#x9;&#x9;&#x9;and turns it into a cursor which is more usable by other CIS procedures.

&#x9;Input:
&#x9;&#x9;fullResourcePath - Full resource path which includes the path and the resource name  
&#x9;&#x9;&#x9;Values: e.g. /shared/Utilities/repository/examples/source/PRODUCT_VIEW
&#x9;&#x9;resourceType - Type of CIS resource to be created
&#x9;&#x9;&#x9;Values: see &quot;TYPES / SUBTYPES&quot; listing below.  e.g. TABLE
&#x9;Output:
&#x9;&#x9;resourceCursor - XML response containing the resource metadata
&#x9;&#x9;&#x9;CURSOR (
&#x9;&#x9;&#x9;&#x9;resourceName VARCHAR(255), 
&#x9;&#x9;&#x9;&#x9;resourcePath VARCHAR(1024), 
&#x9;&#x9;&#x9;&#x9;resourceType VARCHAR(255), 
&#x9;&#x9;&#x9;&#x9;subtype VARCHAR(255), 
&#x9;&#x9;&#x9;&#x9;enabled BIT, 
&#x9;&#x9;&#x9;&#x9;annotation LONGVARCHAR,
&#x9;&#x9;&#x9;&#x9;explicitlyDesigned BIT, 
&#x9;&#x9;&#x9;&#x9;tableType VARCHAR(255), 
&#x9;&#x9;&#x9;&#x9;sqlText VARCHAR(2147483647), 
&#x9;&#x9;&#x9;&#x9;proprietaryModel VARCHAR(2147483647), 
&#x9;&#x9;&#x9;&#x9;columnName VARCHAR(255), 
&#x9;&#x9;&#x9;&#x9;columnType VARCHAR(255),
                nativeBaseType VARCHAR(255), 
                nativeType VARCHAR(255)
            )
&#x9;Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2010.3&#x9;&#x9;08/02/2010&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.1.0&#x9;&#x9;&#x9;Created new
&#x9;2012.4&#x9;&#x9;08/28/2012&#x9;&#x9;Calvin Goodrich&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Added explicitly designed and proprietary model to output
&#x9;2013.2&#x9;&#x9;03/15/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;modified to provide &quot;annotation&quot; to output cursor for Best Practices 7.0.

    (c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.



&#x9;TYPES / SUBTYPES:
&#x9;=================
&#x9;The following resource types/subtypes are supported by this operation.  Resources
&#x9;cannot be created under &quot;/services&quot; unless otherwise noted, and cannot be created
&#x9;within a physical data source.  

&#x9;(Basic CIS folder)
&#x9;* CONTAINER / FOLDER_CONTAINER - A Composite folder.   Cannot be created anywhere under /services except in another FOLDER under /services/webservices.
&#x9;* CONTAINER / DIRECTORY_CONTAINER - A Composite directory.
&#x9;(Database)
&#x9;* CONTAINER / CATALOG_CONTAINER - A Composite catalog folder under a data source.  Can only be created within a data source under /services/databases.
&#x9;* CONTAINER / SCHEMA_CONTAINER - A Composite schema container.  Can only be created within a CATALOG that is under /services/databases.
&#x9;(Web Services)
&#x9;* CONTAINER / SERVICE_CONTAINER - A web service container for the service.  Can only be created within a Composite Web Services data source that is under /services/webservices.
&#x9;* CONTAINER / OPERATIONS_CONTAINER - A web service container for the operations
&#x9;* CONTAINER / PORT_CONTAINER - A Composite web service container for port.   Can only be created within a SERVICE under /services/webservices.
&#x9;(Connectors)
&#x9;* CONTAINER / CONNECTOR_CONTAINER - A Composite container for connectors.

&#x9;* CONNECTOR / JMS - A Composite JMS Connector.  Created with no connection information
&#x9;* CONNECTOR / HTTP - A Composite HTTP Connector.  Created with no connection information

&#x9;* DATA_SOURCE / RELATIONAL_DATA_SOURCE - A relational database source.
&#x9;* DATA_SOURCE / FILE_DATA_SOURCE - A comma separate file data source.
&#x9;* DATA_SOURCE / XML_FILE_DATA_SOURCE - An XML file data source.
&#x9;* DATA_SOURCE / WSDL_DATA_SOURCE - A Composite web service data source.
&#x9;* DATA_SOURCE / XML_HTTP_DATA_SOURCE - An HTTP XML data source.
&#x9;* DATA_SOURCE / NONE - A custom java procedure data source.

&#x9;* DEFINITION_SET / SQL_DEFINITION_SET - A Composite SQL Definition set.
&#x9;* DEFINITION_SET / XML_SCHEMA_DEFINITION_SET - A Composite XML Schema Defintion set.
&#x9;* DEFINITION_SET / WSDL_DEFINITION_SET - A Composite WSDL Definition set.
&#x9;* DEFINITION_SET / ABSTRACT_WSDL_DEFINITION_SET - A Composite Abstract WSDL Definition set such as the ones imported from Designer.
&#x9;* DEFINITION_SET / SCDL_DEFINITION_SET - A Composite SCA composite Definition set imported from Designer.

&#x9;* LINK / unknown at this time

&#x9;(CIS procedures)
&#x9;* PROCEDURE / SQL_SCRIPT_PROCEDURE - A Composite SQL Procedure.  Created with a simple default script body that is runnable.
&#x9;(Custom procedures)
&#x9;* PROCEDURE / JAVA_PROCEDURE - A Composite java data source procedure.  Created from a java data source (jar file).
&#x9;(Database procedures)
&#x9;* PROCEDURE / EXTERNAL_SQL_PROCEDURE - A Composite Packaged Query.  Created with no SQL text, so it is not runnable.  
&#x9;* PROCEDURE / DATABASE_PROCEDURE - A database stored procedure.
&#x9;(XML procedures)
&#x9;* PROCEDURE / BASIC_TRANSFORM_PROCEDURE - A Composite Basic XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / XSLT_TRANSFORM_PROCEDURE - A Composite XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / STREAM_TRANSFORM_PROCEDURE - A Composite XSLT Streaming Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / XQUERY_TRANSFORM_PROCEDURE - A Composite XQUERY Transformation Procedure.  Created with no target schema and no model, so it is not runnable.
&#x9;(Misc procedures)
&#x9;* PROCEDURE / OPERATION_PROCEDURE - A Composite web service or HTTP procedure operation.

&#x9;* TABLE / SQL_TABLE - A Composite View.  Created with no SQL text or model, so it is not runnable.  
&#x9;* TABLE / DATABASE_TABLE - A Composite database table.
&#x9;* TABLE / DELIMITED_FILE_TABLE - A Composite delimited file table
&#x9;* TABLE / SYSTEM_TABLE - A Composite system table view.

&#x9;* TREE / XML_FILE_TREE - The XML tree structure associated with a file-XML data source.

&#x9;* TRIGGER / NONE - A Composite trigger.   Created disabled.]]></annotation>
  <parameters>
    <parameter name="fullResourcePath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="256">
        <element name="resourceId">
          <datatype name="BIGINT" type="INTEGER"/>
        </element>
        <element name="resourceName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="resourcePath">
          <datatype name="VARCHAR" type="STRING" maxLength="1024"/>
        </element>
        <element name="resourceType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="subtype">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="changeId">
          <datatype name="BIGINT" type="INTEGER"/>
        </element>
        <element name="ownerName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="ownerDomain">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="impactLevel">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="enabled">
          <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
        </element>
        <element name="annotation">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="explicitlyDesigned">
          <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
        </element>
        <element name="tableType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="sqlText">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="proprietaryModel">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="columnNum">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="columnName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="columnType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="nativeBaseType">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="nativeType">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/resource/operations/getResource" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="getResource" direction="IN">
        <datatype name="getResource" extendedName="{http://www.compositesw.com/services/system/admin/resource}getResource" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}getResource" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}getResource">
          <schemaDatatype>
            <datatype name="getResource" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="getResourceRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="257">
              <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="detail" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="detailLevel" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="getResourceResponse" direction="OUT">
        <datatype name="getResourceResponse" extendedName="{http://www.compositesw.com/services/system/admin/resource}getResourceResponse" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}getResourceResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}getResourceResponse">
          <schemaDatatype>
            <datatype name="getResourceResponse" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="getResourceResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="513">
              <element name="resources" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="resourceList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="769">
                  <element name="resource" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="resource" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1025">
                      <element name="name" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="subtype" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceSubType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="id" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="changeId" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                      </element>
                      <element name="version" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="introspectState" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="introspectState" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="ownerDomain" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="ownerName" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="impactLevel" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="impactLevel" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="impactMessage" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="enabled" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                      </element>
                      <element name="lockState" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="lockState" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1281">
                          <element name="lockOwnerDomain" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="lockOwnerName" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="lockCreateTime" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="dateTime" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DATETIME"/>
                          </element>
                          <element name="lockParentPath" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                        </datatype>
                      </element>
                      <element name="hints" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1537">
                          <element name="hint" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                            <datatype name="attribute" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1793">
                              <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="attributeTypeValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="2049">
                                  <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                    <datatype name="attributeTypeValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="2305">
                                      <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                                        <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                      </element>
                                      <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                      </element>
                                      <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <reference refId="2049"/>
                                      </element>
                                      <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeTypeValueMap" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="2561">
                                          <element name="entry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                            <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="2817">
                                              <element name="key" namespace="http://www.compositesw.com/services/system/util/common">
                                                <reference refId="2305"/>
                                              </element>
                                              <element name="value" namespace="http://www.compositesw.com/services/system/util/common">
                                                <reference refId="2305"/>
                                              </element>
                                            </datatype>
                                          </element>
                                        </datatype>
                                      </element>
                                      <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeSimpleValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="3073">
                                          <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                            <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                          </element>
                                        </datatype>
                                      </element>
                                    </datatype>
                                  </element>
                                </datatype>
                              </element>
                              <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <reference refId="2561"/>
                              </element>
                              <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <reference refId="3073"/>
                              </element>
                              <element name="unset" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                      <element name="annotation" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="attributes" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="attributeList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3329">
                          <element name="attribute" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                            <reference refId="1793"/>
                          </element>
                        </datatype>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="3585">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3841">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* getBasicResourceCursor_SQL_TABLE:
&#x9;-- CIS Repository Helper Procedure --

&#x9;This procedure retrieves the resource metadata for a given resource that is a SQL TABLE/VIEW.  
&#x9;A cursor of metadata is returned. This procedure invokes the TDV getResource APPI directly
&#x9;&#x9;and parses the XML response. 
&#x9;The first row always provides information about the view only and has no columns.  In order to
&#x9;&#x9;retrieve only columns put a where clause on this procedure when invoking it:
&#x9;&#x9;&#x9;[where columnName is not null]

&#x9;Input:
&#x9;&#x9;fullResourcePath - Full resource path which includes the path and the resource name  
&#x9;&#x9;&#x9;Values: e.g. /shared/Utilities/repository/examples/source/PRODUCT_VIEW
&#x9;&#x9;resourceType - Type of CIS resource to be retrieved
&#x9;&#x9;&#x9;Values: Various types.  e.g. TABLE, PROCEDURE, LINK, TRIGGER, DATA_SOURCE, TREE, DEFINITION_SET
&#x9;Output:
&#x9;&#x9;resourceCursor - XML response containing the resource metadata
&#x9;&#x9;&#x9;CURSOR (
&#x9;&#x9;&#x9;&#x9;resourceId BIGINT,
&#x9;&#x9;&#x9;&#x9;resourceName VARCHAR(255), 
&#x9;&#x9;&#x9;&#x9;resourcePath VARCHAR(1024), 
&#x9;&#x9;&#x9;&#x9;resourceType VARCHAR(255), 
&#x9;&#x9;&#x9;&#x9;subtype VARCHAR(255), 
&#x9;&#x9;&#x9;&#x9;changeId BIGINT,
    &#x9;&#x9;    ownerName VARCHAR(255), 
&#x9;&#x9;&#x9;&#x9;ownerDomain VARCHAR(255), 
    &#x9;&#x9;    impactLevel VARCHAR(255), 
&#x9;&#x9;&#x9;&#x9;enabled BIT, 
&#x9;&#x9;&#x9;&#x9;annotation LONGVARCHAR,
&#x9;&#x9;&#x9;&#x9;explicitlyDesigned BIT, 
&#x9;&#x9;&#x9;&#x9;tableType VARCHAR(255), 
&#x9;&#x9;&#x9;&#x9;sqlText VARCHAR(2147483647), 
&#x9;&#x9;&#x9;&#x9;proprietaryModel VARCHAR(2147483647), 
&#x9;&#x9;&#x9;&#x9;columnNum INTEGER,
&#x9;&#x9;&#x9;&#x9;columnName VARCHAR(255), 
&#x9;&#x9;&#x9;&#x9;columnType VARCHAR(255),
                nativeBaseType VARCHAR(32768), 
                nativeType VARCHAR(32768)
            )
&#x9;Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2010.3&#x9;&#x9;08/02/2010&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.1.0&#x9;&#x9;&#x9;Created new
&#x9;2012.4&#x9;&#x9;08/28/2012&#x9;&#x9;Calvin Goodrich&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Added explicitly designed and proprietary model to output
&#x9;2013.2&#x9;&#x9;03/15/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;modified to provide &quot;annotation&quot; to output cursor for Best Practices 7.0.
&#x9;2020.200&#x9;03/02/2020&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Added columnNum, resourceId, changeId, ownerName, ownerDomain, and impactLevel to the output.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Performance tuning - Invoke TDV getResource API directly with no other intermediate calls. (code to the bare metal)
&#x9;2020.400&#x9;10/15/2020&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Added XML unescape characters for all attributes.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE getBasicResourceCursor_SQL_TABLE(
    IN fullResourcePath &#x9;LONGVARCHAR,  
    IN resourceType &#x9;&#x9;VARCHAR, 
    OUT result&#x9;&#x9; &#x9;&#x9;PIPE (
&#x9;&#x9;resourceId&#x9;&#x9;&#x9;BIGINT,
        resourceName &#x9;&#x9;VARCHAR(255), 
        resourcePath &#x9;&#x9;VARCHAR(1024), 
        resourceType &#x9;&#x9;VARCHAR(255), 
        subtype &#x9;&#x9;&#x9;VARCHAR(255), 
&#x9;&#x9;changeId&#x9;&#x9;&#x9;BIGINT,
        ownerName&#x9;&#x9;&#x9;VARCHAR(255), 
        ownerDomain &#x9;&#x9;VARCHAR(255), 
        impactLevel&#x9;&#x9;&#x9;VARCHAR(255), 
        enabled &#x9;&#x9;&#x9;BIT, 
&#x9;&#x9;annotation &#x9;&#x9;&#x9;LONGVARCHAR,
&#x9;&#x9;explicitlyDesigned &#x9;BIT, 
        tableType &#x9;&#x9;&#x9;VARCHAR(255), 
        sqlText &#x9;&#x9;&#x9;LONGVARCHAR, 
        proprietaryModel &#x9;LONGVARCHAR, 
&#x9;&#x9;columnNum &#x9;&#x9;&#x9;INTEGER,
        columnName &#x9;&#x9;&#x9;VARCHAR(255), 
        columnType &#x9;&#x9;&#x9;VARCHAR(255),
        nativeBaseType &#x9;&#x9;VARCHAR(32768), 
        nativeType &#x9;&#x9;&#x9;VARCHAR(32768)
        )
    )
BEGIN
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;getBasicResourceCursor_SQL_TABLE&apos;;
&#x9;DECLARE debug&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1) DEFAULT &apos;N&apos;;
&#x9;DECLARE debugPrintSize&#x9;&#x9;&#x9;INTEGER DEFAULT 63900;
&#x9;DECLARE parseAttributeNameList&#x9;LONGVARCHAR DEFAULT &apos;id,name,path,type,subtype,changeId,ownerName,ownerDomain,impactLevel,enabled,annotation,tableType,explicitlyDesigned,sqlText,proprietaryModel,&apos;;
&#x9;DECLARE parseColumnNameList&#x9;&#x9;LONGVARCHAR DEFAULT &apos;name,annotation,&apos;;
&#x9;DECLARE parseColumnTypeList&#x9;&#x9;LONGVARCHAR DEFAULT &apos;definition,name,nativeType,proprietaryModel,&apos;;
&#x9;DECLARE type recType&#x9;&#x9;&#x9;ROW(
&#x9;&#x9;resourceId&#x9;&#x9;&#x9;BIGINT,
        resourceName &#x9;&#x9;VARCHAR(255), 
        resourcePath &#x9;&#x9;VARCHAR(1024), 
        resourceType &#x9;&#x9;VARCHAR(255), 
        subtype &#x9;&#x9;&#x9;VARCHAR(255), 
&#x9;&#x9;changeId&#x9;&#x9;&#x9;BIGINT,
        ownerName&#x9;&#x9;&#x9;VARCHAR(255), 
        ownerDomain &#x9;&#x9;VARCHAR(255), 
        impactLevel&#x9;&#x9;&#x9;VARCHAR(255), 
        enabled &#x9;&#x9;&#x9;BIT, 
&#x9;&#x9;annotation &#x9;&#x9;&#x9;LONGVARCHAR,
&#x9;&#x9;explicitlyDesigned &#x9;BIT, 
        tableType &#x9;&#x9;&#x9;VARCHAR(255), 
        sqlText &#x9;&#x9;&#x9;LONGVARCHAR, 
        proprietaryModel &#x9;LONGVARCHAR, 
&#x9;&#x9;columnNum &#x9;&#x9;&#x9;INTEGER,
        columnName &#x9;&#x9;&#x9;VARCHAR(255), 
        columnType &#x9;&#x9;&#x9;VARCHAR(255),
        nativeBaseType &#x9;&#x9;VARCHAR(32768), 
        nativeType &#x9;&#x9;&#x9;VARCHAR(32768)
&#x9;);
&#x9;DECLARE rec&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;recType;
&#x9;DECLARE columnNum&#x9;&#x9; &#x9;&#x9;INTEGER DEFAULT 0;
&#x9;DECLARE nativeBaseType&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE nativeType&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE xmlType&#x9;&#x9;&#x9;&#x9;&#x9;BIT;  -- 1=when &lt;common:xmlType&gt; exists otherwise 0=&lt;common:dataType&gt; or any other exists.
&#x9;DECLARE request&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE createResponseXML&#x9;&#x9;XML;
&#x9;DECLARE faultResponseXML&#x9;&#x9;XML;
&#x9;DECLARE createResponseStr&#x9;&#x9;LONGVARCHAR;
&#x9;-- XML processing variables
&#x9;DECLARE resourceEntry&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE xmlEntry&#x9;&#x9;&#x9;&#x9;LONGVARCHAR; 
&#x9;DECLARE pos1, pos2&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE pos3, pos4&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE pbeg, pend, len&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE name&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR; 
&#x9;DECLARE nameValue&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE namespaceTag&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE ex&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION;

&#x9;-- Invoke the TDV API to getResource attributes
&#x9;SET request = 
&#x9;&#x9;&apos;&lt;resource:getResource xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
&#x9;&#x9;&apos;  &lt;resource:path&gt;&apos; || CAST(XMLTEXT(fullResourcePath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
&#x9;&#x9;&apos;  &lt;resource:type&gt;&apos; || CAST(XMLTEXT(resourceType) AS LONGVARCHAR) || &apos;&lt;/resource:type&gt;&apos;||CHR(10)||
&#x9;&#x9;&apos;  &lt;resource:detail&gt;FULL&lt;/resource:detail&gt;&apos;||CHR(10)||
&#x9;&#x9;&apos;&lt;/resource:getResource&gt;&apos;;

&#x9;-----------------------------
&#x9;-- Invoke Web Service API
&#x9;-----------------------------
&#x9;CALL /services/webservices/system/admin/resource/operations/getResource(request, createResponseXML, faultResponseXML);
&#x9;IF (faultResponseXML IS NOT NULL) THEN
&#x9;&#x9;RAISE ex VALUE CAST(faultResponseXML AS LONGVARCHAR);
&#x9;END IF;

&#x9;-- Get the namespace tag=ns1 from [&lt;ns1: and &lt;/ns1:] and replace it with [&lt;resource: and &lt;/resource:]
&#x9;SET createResponseStr = CAST(createResponseXML AS LONGVARCHAR);
&#x9;IF (createResponseStr IS NOT NULL AND LENGTH(createResponseStr) &gt; 0) THEN
&#x9;&#x9;SET pos1 = INSTR(createResponseStr, &apos;&lt;&apos;);
&#x9;&#x9;SET pos2 = INSTR(createResponseStr, &apos;:&apos;);
&#x9;&#x9;IF (pos1 &gt; 0 AND pos2 &gt; 0) THEN
&#x9;&#x9;&#x9;SET namespaceTag = SUBSTRING(createResponseStr, pos1+1, pos2-pos1-1);
&#x9;&#x9;&#x9;IF (namespaceTag &lt;&gt; &apos;resource&apos;) THEN
&#x9;&#x9;&#x9;&#x9;SET createResponseStr = REPLACE(createResponseStr, &apos;&lt;&apos;||namespaceTag||&apos;:&apos;, &apos;&lt;resource:&apos;);
&#x9;&#x9;&#x9;&#x9;SET createResponseStr = REPLACE(createResponseStr, &apos;&lt;/&apos;||namespaceTag||&apos;:&apos;, &apos;&lt;/resource:&apos;);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END IF;
&#x9;END IF;
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(&apos;&apos;);
&#x9;&#x9;CALL PRINT(SUBSTRING(moduleName||&apos;:     createResponseStr=&apos;||NVL(createResponseStr,&apos;null&apos;),1,debugPrintSize));
&#x9;END IF;

&#x9;-- Extract resource:resource
&#x9;SET pos1 = INSTR(createResponseStr, &apos;&lt;resource:resource&apos;);
&#x9;SET pos2 = INSTR(createResponseStr, &apos;&lt;/resource:resource&gt;&apos;);
&#x9;SET len = LENGTH(&apos;&lt;resource:resource&gt;&apos;);
&#x9;SET resourceEntry = &apos;    &apos;||TRIM(SUBSTRING(createResponseStr, pos1, pos2-pos1+len+1));
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(&apos;&apos;);
&#x9;&#x9;CALL PRINT(SUBSTRING(moduleName||&apos;:     resource:resource[1]:&apos;||NVL(resourceEntry,&apos;null&apos;),1,debugPrintSize));
&#x9;END IF;

&#x9;-- Initialize resource record structure
&#x9;SET columnNum = 0;
&#x9;SET rec = null;
&#x9;SET rec.columnNum = columnNum;

&#x9;-- Extract all top level resource attributes
&#x9;SET pbeg = 1;
&#x9;SET pend = INSTR(parseAttributeNameList, &apos;,&apos;);
&#x9;WHILE (pend &gt; 0) DO
&#x9;&#x9;SET name = SUBSTRING(parseAttributeNameList, pbeg, pend-pbeg);

&#x9;&#x9;-- Extract the name value
&#x9;&#x9;SET nameValue = null;
&#x9;&#x9;SET pos3 = INSTR(resourceEntry, &apos;&lt;resource:&apos;||name||&apos;&gt;&apos;);
&#x9;&#x9;SET pos4 = INSTR(resourceEntry, &apos;&lt;/resource:&apos;||name||&apos;&gt;&apos;);
&#x9;&#x9;IF (pos3 &gt; 0 or pos4 &gt; 0) THEN
&#x9;&#x9;&#x9;SET len = LENGTH(&apos;&lt;resource:&apos;||name||&apos;&gt;&apos;);
&#x9;&#x9;&#x9;SET nameValue = TRIM(SUBSTRING(resourceEntry, pos3+len, pos4-(pos3+len)));
&#x9;&#x9;END IF;
&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL PRINT(SUBSTRING(moduleName||&apos;:     name=&apos;||NVL(name,&apos;null&apos;)||&apos;  value=&apos;||NVL(nameValue,&apos;[NULL]&apos;),1,debugPrintSize));
&#x9;&#x9;END IF;

/*
&#x9;The Escape Characters: &#x9;When unescaping parsed data from XML: 
&#x9;quote &#x9;&#x9;&#x9;(&quot;) &#x9;&#x9;&amp;quot; 
&#x9;apostrophe &#x9;&#x9;(&apos;)&#x9;&#x9;&#x9;&amp;apos; 
&#x9;ampersand&#x9;&#x9;(&amp;)&#x9;&#x9;&#x9;&amp;amp;
&#x9;less than &#x9;&#x9;(&lt;) &#x9;&#x9;&amp;lt; 
&#x9;greater than &#x9;(&gt;) &#x9;&#x9;&amp;gt; 
*/
&#x9;&#x9;IF (INSTR(nameValue, &apos;&amp;&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;SET nameValue = REPLACE(nameValue, &apos;&amp;lt;&apos;, &apos;&lt;&apos;);
&#x9;&#x9;&#x9;SET&#x9;nameValue = REPLACE(nameValue, &apos;&amp;gt;&apos;, &apos;&gt;&apos;);
&#x9;&#x9;&#x9;SET&#x9;nameValue = REPLACE(nameValue, &apos;&amp;apos;&apos;, &apos;&apos;&apos;&apos;);
&#x9;&#x9;&#x9;SET&#x9;nameValue = REPLACE(nameValue, &apos;&amp;quot;&apos;, &apos;&quot;&apos;);
&#x9;&#x9;&#x9;SET&#x9;nameValue = REPLACE(nameValue, &apos;&amp;amp;&apos;, &apos;&amp;&apos;);
&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;
&#x9;&#x9;-- Assign the resource value to output record structure variables
&#x9;&#x9;CASE
&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;id&apos;) THEN &#x9;&#x9;&#x9;&#x9;SET rec.resourceId = nameValue;
&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;name&apos;) THEN &#x9;&#x9;&#x9;&#x9;SET rec.resourceName = nameValue;
&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;path&apos;) THEN &#x9;&#x9;&#x9;&#x9;SET rec.resourcePath = nameValue;
&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;type&apos;) THEN &#x9;&#x9;&#x9;&#x9;SET rec.resourceType = nameValue;
&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;subtype&apos;) THEN &#x9;&#x9;&#x9;SET rec.subtype = nameValue;
&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;changeId&apos;) THEN &#x9;&#x9;&#x9;SET rec.changeId = nameValue;
&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;ownerDomain&apos;) THEN &#x9;&#x9;SET rec.ownerDomain = nameValue;
&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;ownerName&apos;) THEN &#x9;&#x9;&#x9;SET rec.ownerName = nameValue;
&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;impactLevel&apos;) THEN &#x9;&#x9;SET rec.impactLevel = nameValue;
&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;enabled&apos;) THEN &#x9;&#x9;&#x9;SET rec.enabled = CASE WHEN LOWER(nameValue) = &apos;true&apos; THEN 1 ELSE 0 END;
&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;annotation&apos;) THEN &#x9;&#x9;SET rec.annotation = nameValue;
&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;explicitlyDesigned&apos;) THEN SET rec.explicitlyDesigned = CASE WHEN LOWER(nameValue) = &apos;true&apos; THEN 1 ELSE 0 END;
&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;tableType&apos;) THEN &#x9;&#x9;&#x9;SET rec.tableType = nameValue;
&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;sqlText&apos;) THEN &#x9;&#x9;&#x9;SET rec.sqlText = nameValue;
&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;proprietaryModel&apos;) THEN &#x9;SET rec.proprietaryModel = nameValue;
&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;END CASE;
&#x9;&#x9;SET pbeg = pend+1;
&#x9;&#x9;SET pend = INSTR(parseAttributeNameList, &apos;,&apos;,pbeg);
&#x9;END WHILE;

&#x9;-- Insert the resource table row into the PIPE cursor
&#x9;INSERT INTO result VALUES(rec);

&#x9;-- Extract resource:columns
&#x9;SET pos1 = INSTR(createResponseStr, &apos;&lt;resource:columns&gt;&apos;);
&#x9;SET pos2 = INSTR(createResponseStr, &apos;&lt;/resource:columns&gt;&apos;);
&#x9;SET len = LENGTH(&apos;&lt;resource:columns&gt;&apos;);
&#x9;SET resourceEntry = TRIM(SUBSTRING(createResponseStr, pos1, pos2-pos1+len+1));
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(&apos;&apos;);
&#x9;&#x9;CALL PRINT(SUBSTRING(moduleName||&apos;:     resource:columns[1]:&apos;||NVL(resourceEntry,&apos;null&apos;),1,debugPrintSize));
&#x9;END IF;

&#x9;SET pos1 = INSTR(resourceEntry, &apos;&lt;resource:column&gt;&apos;);
&#x9;SET pos2 = INSTR(resourceEntry, &apos;&lt;/resource:column&gt;&apos;);
&#x9;WHILE (pos1 &gt; 0 and pos2 &gt; 0) DO
&#x9;&#x9;SET columnNum = columnNum + 1;
&#x9;&#x9;SET len = LENGTH(&apos;&lt;resource:column&gt;&apos;);
&#x9;&#x9;SET xmlEntry = &apos;    &apos;||TRIM(SUBSTRING(resourceEntry, pos1, pos2-pos1+len+1));
&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL PRINT(&apos;&apos;);
&#x9;&#x9;&#x9;CALL PRINT(SUBSTRING(moduleName||&apos;:     resource:column[&apos;||columnNum||&apos;]:&apos;||NVL(xmlEntry,&apos;null&apos;),1,debugPrintSize));
&#x9;&#x9;END IF;

&#x9;&#x9;-- Initialize
&#x9;&#x9;SET rec.columnNum = columnNum;
&#x9;&#x9;SET rec.annotation = null;
&#x9;&#x9;SET xmlType = 0;
&#x9;&#x9;IF (INSTR(LOWER(xmlEntry), &apos;&lt;common:xmltype&gt;&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;SET xmlType = 1;
&#x9;&#x9;END IF;

&#x9;&#x9;-- Extract column names
&#x9;&#x9;SET pbeg = 1;
&#x9;&#x9;SET pend = INSTR(parseColumnNameList, &apos;,&apos;);
&#x9;&#x9;WHILE (pend &gt; 0) DO
&#x9;&#x9;&#x9;SET name = SUBSTRING(parseColumnNameList, pbeg, pend-pbeg);

&#x9;&#x9;&#x9;-- Extract the name value
&#x9;&#x9;&#x9;SET nameValue = null;
&#x9;&#x9;&#x9;SET pos3 = INSTR(xmlEntry, &apos;&lt;resource:&apos;||name||&apos;&gt;&apos;);
&#x9;&#x9;&#x9;SET pos4 = INSTR(xmlEntry, &apos;&lt;/resource:&apos;||name||&apos;&gt;&apos;);
&#x9;&#x9;&#x9;IF (pos3 &gt; 0 or pos4 &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET len = LENGTH(&apos;&lt;resource:&apos;||name||&apos;&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;SET nameValue = TRIM(SUBSTRING(xmlEntry, pos3+len, pos4-(pos3+len)));
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL PRINT(SUBSTRING(moduleName||&apos;:     name=&apos;||NVL(name,&apos;null&apos;)||&apos;  value=&apos;||NVL(nameValue,&apos;[NULL]&apos;),1,debugPrintSize));
&#x9;&#x9;&#x9;END IF;

/*
&#x9;The Escape Characters: &#x9;When unescaping parsed data from XML: 
&#x9;quote &#x9;&#x9;&#x9;(&quot;) &#x9;&#x9;&amp;quot; 
&#x9;apostrophe &#x9;&#x9;(&apos;)&#x9;&#x9;&#x9;&amp;apos; 
&#x9;ampersand&#x9;&#x9;(&amp;)&#x9;&#x9;&#x9;&amp;amp;
&#x9;less than &#x9;&#x9;(&lt;) &#x9;&#x9;&amp;lt; 
&#x9;greater than &#x9;(&gt;) &#x9;&#x9;&amp;gt; 
*/
&#x9;&#x9;&#x9;IF (INSTR(nameValue, &apos;&amp;&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET nameValue = REPLACE(nameValue, &apos;&amp;lt;&apos;, &apos;&lt;&apos;);
&#x9;&#x9;&#x9;&#x9;SET&#x9;nameValue = REPLACE(nameValue, &apos;&amp;gt;&apos;, &apos;&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;SET&#x9;nameValue = REPLACE(nameValue, &apos;&amp;apos;&apos;, &apos;&apos;&apos;&apos;);
&#x9;&#x9;&#x9;&#x9;SET&#x9;nameValue = REPLACE(nameValue, &apos;&amp;quot;&apos;, &apos;&quot;&apos;);
&#x9;&#x9;&#x9;&#x9;SET&#x9;nameValue = REPLACE(nameValue, &apos;&amp;amp;&apos;, &apos;&amp;&apos;);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;
&#x9;&#x9;&#x9;-- Assign the column name and annotation value to output record structure variables
&#x9;&#x9;&#x9;CASE
&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;name&apos;) THEN &#x9;&#x9;&#x9;SET rec.columnName = nameValue;
&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;annotation&apos;) THEN &#x9;SET rec.annotation = nameValue;
&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;END CASE;
&#x9;&#x9;&#x9;SET pbeg = pend+1;
&#x9;&#x9;&#x9;SET pend = INSTR(parseColumnNameList, &apos;,&apos;,pbeg);
&#x9;&#x9;END WHILE;

&#x9;&#x9;-- Extract column types
&#x9;&#x9;SET pbeg = 1;
&#x9;&#x9;SET pend = INSTR(parseColumnTypeList, &apos;,&apos;);
&#x9;&#x9;WHILE (pend &gt; 0) DO
&#x9;&#x9;&#x9;SET name = SUBSTRING(parseColumnTypeList, pbeg, pend-pbeg);

&#x9;&#x9;&#x9;-- Extract the name value
&#x9;&#x9;&#x9;SET nameValue = null;
&#x9;&#x9;&#x9;SET pos3 = INSTR(xmlEntry, &apos;&lt;common:&apos;||name||&apos;&gt;&apos;);
&#x9;&#x9;&#x9;SET pos4 = INSTR(xmlEntry, &apos;&lt;/common:&apos;||name||&apos;&gt;&apos;);
&#x9;&#x9;&#x9;IF (pos3 &gt; 0 or pos4 &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET len = LENGTH(&apos;&lt;common:&apos;||name||&apos;&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;SET nameValue = TRIM(SUBSTRING(xmlEntry, pos3+len, pos4-(pos3+len)));
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL PRINT(SUBSTRING(moduleName||&apos;:     name=&apos;||NVL(name,&apos;null&apos;)||&apos;  value=&apos;||NVL(nameValue,&apos;[NULL]&apos;),1,debugPrintSize));
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- Assign the column type values to output record structure variables
&#x9;&#x9;&#x9;IF (xmlType = 1) THEN
&#x9;&#x9;&#x9;&#x9;-- &lt;common:xmlType&gt;
&#x9;&#x9;&#x9;&#x9;-- &#x9;&#x9;columnType and nativeBaseType are different for xmlType than sqlType
&#x9;&#x9;&#x9;&#x9;CASE
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;definition&apos;) THEN &#x9;&#x9;SET nativeBaseType = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;name&apos;) THEN &#x9;&#x9;&#x9;&#x9;SET rec.columnType = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;nativeType&apos;) THEN &#x9;&#x9;SET nativeType = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;proprietaryModel&apos;) THEN &#x9;SET rec.proprietaryModel = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;END CASE;
&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;-- &lt;common:sqlType&gt;
&#x9;&#x9;&#x9;&#x9;CASE
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;definition&apos;) THEN &#x9;&#x9;SET rec.columnType = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;name&apos;) THEN &#x9;&#x9;&#x9;&#x9;SET nativeBaseType = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;nativeType&apos;) THEN &#x9;&#x9;SET nativeType = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;proprietaryModel&apos;) THEN&#x9;SET rec.proprietaryModel = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;END CASE;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;SET pbeg = pend+1;
&#x9;&#x9;&#x9;SET pend = INSTR(parseColumnTypeList, &apos;,&apos;,pbeg);
&#x9;&#x9;END WHILE;

&#x9;&#x9;IF (length(nativeType) &lt; 32768) THEN
&#x9;&#x9;&#x9;SET rec.nativeType = nativeType;
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;SET rec.nativeType = SUBSTRING(nativeType,1,32768);
&#x9;&#x9;END IF;
&#x9;&#x9;IF (length(nativeBaseType) &lt; 32768) THEN
&#x9;&#x9;&#x9;SET rec.nativeBaseType = nativeBaseType;
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;SET rec.nativeBaseType = SUBSTRING(nativeBaseType,1,32768);
&#x9;&#x9;END IF;

&#x9;&#x9;-- Insert the column results into the PIPE cursor
&#x9;&#x9;INSERT INTO result VALUES(rec);

&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos;:  CURRENT: pos1=&apos;||pos1||&apos;  pos2=&apos;||pos2);
&#x9;&#x9;END IF;

&#x9;&#x9;-- Get the next attributes entry
&#x9;&#x9;SET pos1 = pos2;
&#x9;&#x9;SET pos1 = INSTR(resourceEntry, &apos;&lt;resource:column&gt;&apos;, pos1+1);
&#x9;&#x9;SET pos2 = INSTR(resourceEntry, &apos;&lt;/resource:column&gt;&apos;, pos1+1);
&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos;:  NEXT: pos1=&apos;||pos1||&apos;  pos2=&apos;||pos2);
&#x9;&#x9;END IF;
&#x9;END WHILE;
EXCEPTION
&#x9;ELSE
&#x9;&#x9;RAISE ex VALUE &apos;EXEPTION: fullResourcePath=[&apos;||NVL(fullResourcePath,&apos;null&apos;)||&apos;]  resourceType=[&apos;||NVL(resourceType,&apos;null&apos;)||&apos;]  &apos;||CAST(CURRENT_EXCEPTION.TRACE AS LONGVARCHAR);
END</attribute>
  <attribute name="creationDate" type="LONG">1376679119329</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609896425519</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">9/269</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/268</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/295</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/390</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/382</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/339</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/258</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/257</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/206</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/173</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/172</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/183</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/182</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>