<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="getBasicResourceCursor_ResourceAttributes" path="/shared/Delta_DV/_scripts/Utilities/repository/getBasicResourceCursor_ResourceAttributes" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[getBasicResourceCursor_ActionAttributes:
&#x9;-- CIS Repository Helper Procedure --
&#x9;This procedure retrieves the resource metadata for a given resource that is contains Action Attributes
&#x9;such as a TRIGGER.  A cursor of metadata is returned.  &#x9;This procedure invokes 2 lower level API procedures:
&#x9;&#x9;getBasicResourceXML - this performs the actual invocation to the CIS repository API and returns XML
&#x9;&#x9;getBasicResourceXSLT_ActionAttributes - this procedure takes the XML response from getBasicResourceXML
&#x9;&#x9;&#x9;and turns it into a cursor which is more usable by other CIS procedures.

&#x9;Input:
&#x9;&#x9;fullResourcePath - Full resource path which includes the path and the resource name  
&#x9;&#x9;&#x9;Values: e.g. /shared/Utilities/repository/examples/source/trigger1
&#x9;&#x9;resourceType - Type of CIS resource to be created
&#x9;&#x9;&#x9;Values: see &quot;TYPES / SUBTYPES&quot; listing below.  e.g. TRIGGER
&#x9;Output:
&#x9;&#x9;resourceCursor - XML response containing the resource metadata
&#x9;&#x9;&#x9;CURSOR (
&#x9;&#x9;&#x9;&#x9;actionType&#x9;VARCHAR(255)
        &#x9;&#x9;&#x9;name &#x9;&#x9;VARCHAR(255), 
        &#x9;&#x9;&#x9;&quot;type&quot; &#x9;&#x9;VARCHAR(255), 
        &#x9;&#x9;&#x9;&quot;value&quot; &#x9;VARCHAR(255)
        &#x9;&#x9;&#x9;)
&#x9;&#x9;&#x9;Values: example:
&#x9;&#x9;&#x9;actionType&#x9;name&#x9;&#x9;type&#x9;&#x9;value
&#x9;&#x9;&#x9;-----------&#x9;--------&#x9;--------&#x9;----------------------
&#x9;&#x9;&#x9;PROCEDURE&#x9;PARAMETERS&#x9;STRING&#x9;&#x9;&apos;string&apos;
&#x9;&#x9;&#x9;PROCEDURE&#x9;PATH&#x9;&#x9;STRING&#x9;&#x9;/shared/Utilities/repository/examples/source/folder1/proc1
&#x9;&#x9;&#x9;PROCEDURE&#x9;null&#x9;&#x9;null&#x9;&#x9;null
&#x9;Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2012.3&#x9;&#x9;5/4/2012&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new

    (c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.



&#x9;TYPES / SUBTYPES:
&#x9;=================
&#x9;The following resource types/subtypes are supported by this operation.  Resources
&#x9;cannot be created under &quot;/services&quot; unless otherwise noted, and cannot be created
&#x9;within a physical data source.  

&#x9;(Basic CIS folder)
&#x9;* CONTAINER / FOLDER_CONTAINER - A Composite folder.   Cannot be created anywhere under /services except in another FOLDER under /services/webservices.
&#x9;* CONTAINER / DIRECTORY_CONTAINER - A Composite directory.
&#x9;(Database)
&#x9;* CONTAINER / CATALOG_CONTAINER - A Composite catalog folder under a data source.  Can only be created within a data source under /services/databases.
&#x9;* CONTAINER / SCHEMA_CONTAINER - A Composite schema container.  Can only be created within a CATALOG that is under /services/databases.
&#x9;(Web Services)
&#x9;* CONTAINER / SERVICE_CONTAINER - A web service container for the service.  Can only be created within a Composite Web Services data source that is under /services/webservices.
&#x9;* CONTAINER / OPERATIONS_CONTAINER - A web service container for the operations
&#x9;* CONTAINER / PORT_CONTAINER - A Composite web service container for port.   Can only be created within a SERVICE under /services/webservices.
&#x9;(Connectors)
&#x9;* CONTAINER / CONNECTOR_CONTAINER - A Composite container for connectors.

&#x9;* CONNECTOR / JMS - A Composite JMS Connector.  Created with no connection information
&#x9;* CONNECTOR / HTTP - A Composite HTTP Connector.  Created with no connection information

&#x9;* DATA_SOURCE / RELATIONAL_DATA_SOURCE - A relational database source.
&#x9;* DATA_SOURCE / FILE_DATA_SOURCE - A comma separate file data source.
&#x9;* DATA_SOURCE / XML_FILE_DATA_SOURCE - An XML file data source.
&#x9;* DATA_SOURCE / WSDL_DATA_SOURCE - A Composite web service data source.
&#x9;* DATA_SOURCE / XML_HTTP_DATA_SOURCE - An HTTP XML data source.
&#x9;* DATA_SOURCE / NONE - A custom java procedure data source.

&#x9;* DEFINITION_SET / SQL_DEFINITION_SET - A Composite SQL Definition set.
&#x9;* DEFINITION_SET / XML_SCHEMA_DEFINITION_SET - A Composite XML Schema Defintion set.
&#x9;* DEFINITION_SET / WSDL_DEFINITION_SET - A Composite WSDL Definition set.
&#x9;* DEFINITION_SET / ABSTRACT_WSDL_DEFINITION_SET - A Composite Abstract WSDL Definition set such as the ones imported from Designer.
&#x9;* DEFINITION_SET / SCDL_DEFINITION_SET - A Composite SCA composite Definition set imported from Designer.

&#x9;* LINK / unknown at this time

&#x9;(CIS procedures)
&#x9;* PROCEDURE / SQL_SCRIPT_PROCEDURE - A Composite SQL Procedure.  Created with a simple default script body that is runnable.
&#x9;(Custom procedures)
&#x9;* PROCEDURE / JAVA_PROCEDURE - A Composite java data source procedure.  Created from a java data source (jar file).
&#x9;(Database procedures)
&#x9;* PROCEDURE / EXTERNAL_SQL_PROCEDURE - A Composite Packaged Query.  Created with no SQL text, so it is not runnable.  
&#x9;* PROCEDURE / DATABASE_PROCEDURE - A database stored procedure.
&#x9;(XML procedures)
&#x9;* PROCEDURE / BASIC_TRANSFORM_PROCEDURE - A Composite Basic XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / XSLT_TRANSFORM_PROCEDURE - A Composite XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / STREAM_TRANSFORM_PROCEDURE - A Composite XSLT Streaming Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / XQUERY_TRANSFORM_PROCEDURE - A Composite XQUERY Transformation Procedure.  Created with no target schema and no model, so it is not runnable.
&#x9;(Misc procedures)
&#x9;* PROCEDURE / OPERATION_PROCEDURE - A Composite web service or HTTP procedure operation.

&#x9;* TABLE / SQL_TABLE - A Composite View.  Created with no SQL text or model, so it is not runnable.  
&#x9;* TABLE / DATABASE_TABLE - A Composite database table.
&#x9;* TABLE / DELIMITED_FILE_TABLE - A Composite delimited file table
&#x9;* TABLE / SYSTEM_TABLE - A Composite system table view.

&#x9;* TREE / XML_FILE_TREE - The XML tree structure associated with a file-XML data source.

&#x9;* TRIGGER / NONE - A Composite trigger.   Created disabled.]]></annotation>
  <parameters>
    <parameter name="fullResourcePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="resourceCursor" direction="OUT" nullable="true">
      <datatype name="resourceCursor" type="TABLE" refId="256">
        <element name="name">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="type">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="value">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="valueList">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="valueMap">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/lowerLevelProcedures/getBasicResourceXML" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/Delta_DV/&quot;_scripts&quot;/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceResponse" direction="OUT">
        <datatype name="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="257"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/lowerLevelProcedures/getBasicResourceXSLT_ResourceAttributes" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inXML" direction="IN">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="257"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="outputs" direction="OUT" nullable="false">
        <datatype type="TABLE" refId="256">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="type">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="value">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="valueList">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="valueMap">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* getBasicResourceCursor_ResourceAttributes:
&#x9;-- CIS Repository Helper Procedure --
&#x9;This procedure retrieves the resource metadata for a given resource that is contains Resource Attributes
&#x9;such as &quot;root&quot; from a DATA_SOURCE resource.  A cursor of metadata is returned.  &#x9;
&#x9;This procedure invokes 2 lower level API procedures:
&#x9;&#x9;getBasicResourceXML - this performs the actual invocation to the CIS repository API and returns XML
&#x9;&#x9;getBasicResourceXSLT_ResourceAttributes - this procedure takes the XML response from getBasicResourceXML
&#x9;&#x9;&#x9;and turns it into a cursor which is more usable by other CIS procedures.

&#x9;Input:
&#x9;&#x9;fullResourcePath - Full resource path which includes the path and the resource name  
&#x9;&#x9;&#x9;Values: e.g. /shared/examples/ds_XML
&#x9;&#x9;resourceType - Type of CIS resource to be created
&#x9;&#x9;&#x9;Values: see &quot;TYPES / SUBTYPES&quot; listing below.  e.g. DATA_SOURCE
&#x9;Output:
&#x9;&#x9;resourceCursor - XML response containing the resource metadata
&#x9;&#x9;&#x9;CURSOR (
        &#x9;&#x9;&#x9;name &#x9;&#x9;VARCHAR(255), 
        &#x9;&#x9;&#x9;&quot;type&quot; &#x9;&#x9;VARCHAR(255), 
        &#x9;&#x9;&#x9;&quot;value&quot; &#x9;VARCHAR(255),
        &#x9;&#x9;&#x9;valueList&#x9;LONGVARCHAR,
        &#x9;&#x9;&#x9;valueMap&#x9;LONGVARCHAR
        &#x9;&#x9;&#x9;)
&#x9;&#x9;&#x9;Values: example:
&#x9;&#x9;&#x9;name&#x9;&#x9;&#x9;type&#x9;&#x9;value&#x9;&#x9;&#x9;&#x9;&#x9;valueList&#x9;&#x9;valueMap
&#x9;&#x9;&#x9;--------&#x9;&#x9;--------&#x9;----------------------&#x9;--------------&#x9;------------------------
&#x9;&#x9;&#x9;autoAddChildren&#x9;BOOLEAN&#x9;&#x9;true&#x9;&#x9;&#x9;&#x9;&#x9;null&#x9;&#x9;&#x9;null
&#x9;&#x9;&#x9;charset&#x9;&#x9;&#x9;STRING&#x9;&#x9;&lt;auto detect&gt;&#x9;&#x9;&#x9;null&#x9;&#x9;&#x9;null
&#x9;&#x9;&#x9;filters&#x9;&#x9;&#x9;STRING&#x9;&#x9;null&#x9;&#x9;&#x9;&#x9;&#x9;null&#x9;&#x9;&#x9;null
&#x9;&#x9;&#x9;root&#x9;&#x9;&#x9;STRING&#x9;&#x9;c:\myfiles

&#x9;Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2012.3&#x9;&#x9;5/4/2012&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.


&#x9;TYPES / SUBTYPES:
&#x9;=================
&#x9;The following resource types/subtypes are supported by this operation.  Resources
&#x9;cannot be created under &quot;/services&quot; unless otherwise noted, and cannot be created
&#x9;within a physical data source.  

&#x9;(Basic CIS folder)
&#x9;* CONTAINER / FOLDER_CONTAINER - A Composite folder.   Cannot be created anywhere under /services except in another FOLDER under /services/webservices.
&#x9;* CONTAINER / DIRECTORY_CONTAINER - A Composite directory.
&#x9;(Database)
&#x9;* CONTAINER / CATALOG_CONTAINER - A Composite catalog folder under a data source.  Can only be created within a data source under /services/databases.
&#x9;* CONTAINER / SCHEMA_CONTAINER - A Composite schema container.  Can only be created within a CATALOG that is under /services/databases.
&#x9;(Web Services)
&#x9;* CONTAINER / SERVICE_CONTAINER - A web service container for the service.  Can only be created within a Composite Web Services data source that is under /services/webservices.
&#x9;* CONTAINER / OPERATIONS_CONTAINER - A web service container for the operations
&#x9;* CONTAINER / PORT_CONTAINER - A Composite web service container for port.   Can only be created within a SERVICE under /services/webservices.
&#x9;(Connectors)
&#x9;* CONTAINER / CONNECTOR_CONTAINER - A Composite container for connectors.

&#x9;* CONNECTOR / JMS - A Composite JMS Connector.  Created with no connection information
&#x9;* CONNECTOR / HTTP - A Composite HTTP Connector.  Created with no connection information

&#x9;* DATA_SOURCE / RELATIONAL_DATA_SOURCE - A relational database source.
&#x9;* DATA_SOURCE / FILE_DATA_SOURCE - A comma separate file data source.
&#x9;* DATA_SOURCE / XML_FILE_DATA_SOURCE - An XML file data source.
&#x9;* DATA_SOURCE / WSDL_DATA_SOURCE - A Composite web service data source.
&#x9;* DATA_SOURCE / XML_HTTP_DATA_SOURCE - An HTTP XML data source.
&#x9;* DATA_SOURCE / NONE - A custom java procedure data source.

&#x9;* DEFINITION_SET / SQL_DEFINITION_SET - A Composite SQL Definition set.
&#x9;* DEFINITION_SET / XML_SCHEMA_DEFINITION_SET - A Composite XML Schema Defintion set.
&#x9;* DEFINITION_SET / WSDL_DEFINITION_SET - A Composite WSDL Definition set.
&#x9;* DEFINITION_SET / ABSTRACT_WSDL_DEFINITION_SET - A Composite Abstract WSDL Definition set such as the ones imported from Designer.
&#x9;* DEFINITION_SET / SCDL_DEFINITION_SET - A Composite SCA composite Definition set imported from Designer.

&#x9;* LINK / unknown at this time

&#x9;(CIS procedures)
&#x9;* PROCEDURE / SQL_SCRIPT_PROCEDURE - A Composite SQL Procedure.  Created with a simple default script body that is runnable.
&#x9;(Custom procedures)
&#x9;* PROCEDURE / JAVA_PROCEDURE - A Composite java data source procedure.  Created from a java data source (jar file).
&#x9;(Database procedures)
&#x9;* PROCEDURE / EXTERNAL_SQL_PROCEDURE - A Composite Packaged Query.  Created with no SQL text, so it is not runnable.  
&#x9;* PROCEDURE / DATABASE_PROCEDURE - A database stored procedure.
&#x9;(XML procedures)
&#x9;* PROCEDURE / BASIC_TRANSFORM_PROCEDURE - A Composite Basic XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / XSLT_TRANSFORM_PROCEDURE - A Composite XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / STREAM_TRANSFORM_PROCEDURE - A Composite XSLT Streaming Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / XQUERY_TRANSFORM_PROCEDURE - A Composite XQUERY Transformation Procedure.  Created with no target schema and no model, so it is not runnable.
&#x9;(Misc procedures)
&#x9;* PROCEDURE / OPERATION_PROCEDURE - A Composite web service or HTTP procedure operation.

&#x9;* TABLE / SQL_TABLE - A Composite View.  Created with no SQL text or model, so it is not runnable.  
&#x9;* TABLE / DATABASE_TABLE - A Composite database table.
&#x9;* TABLE / DELIMITED_FILE_TABLE - A Composite delimited file table
&#x9;* TABLE / SYSTEM_TABLE - A Composite system table view.

&#x9;* TREE / XML_FILE_TREE - The XML tree structure associated with a file-XML data source.

&#x9;* TRIGGER / NONE - A Composite trigger.   Created disabled.
*/
PROCEDURE getBasicResourceCursor_ResourceAttributes(
    IN fullResourcePath &#x9;VARCHAR(4096),  
    IN resourceType &#x9;&#x9;VARCHAR, 
    OUT resourceCursor CURSOR (
        name &#x9;&#x9;VARCHAR(255), 
        &quot;type&quot; &#x9;&#x9;VARCHAR(255), 
        &quot;value&quot;&#x9;&#x9;LONGVARCHAR,
        valueList&#x9;LONGVARCHAR,
        valueMap&#x9;LONGVARCHAR
        )
    )
    BEGIN
&#x9;DECLARE resourceResponse XML;
&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/lowerLevelProcedures/getBasicResourceXML(fullResourcePath, resourceType, resourceResponse);
        OPEN resourceCursor FOR 
            SELECT * FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/lowerLevelProcedures/getBasicResourceXSLT_ResourceAttributes(resourceResponse)
&#x9;&#x9;&#x9;WHERE name is not null or &quot;type&quot; is not null or &quot;value&quot; is not null;
    END</attribute>
  <attribute name="creationDate" type="LONG">1369417729293</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609965948495</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>