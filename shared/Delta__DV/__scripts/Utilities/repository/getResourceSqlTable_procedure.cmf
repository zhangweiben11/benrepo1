<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="getResourceSqlTable" path="/shared/Delta_DV/_scripts/Utilities/repository/getResourceSqlTable" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[getResourceSqlTable:
&#x9;-- CIS Repository Helper Procedure --
&#x9;This procedure is used to get the view or table definitions that can be used with updateResourceSqlTable.
 
&#x9;Input:
&#x9;&#x9;fullResourcePath - Full resource path which includes the path and the resource name  
&#x9;&#x9;&#x9;Values: e.g. /shared/Utilities/repository/examples/source/view1


&#x9;Output:
&#x9;&#x9;scripttext - SQL Table text to be updated  
&#x9;&#x9;&#x9;Values: sql table script
&#x9;&#x9;annotation - View annotation
&#x9;&#x9;columnList - a vector array of sql columns and definitions
&#x9;&#x9;&#x9;Values: see vector definition
&#x9;&#x9;&#x9;&#x9;&#x9;childResourceType ROW (
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;resourceName &#x9;&#x9;VARCHAR, 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;resourcePath &#x9;&#x9;TypeDefinitions.pathType, 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;resourceType &#x9;&#x9;VARCHAR, 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;columnName &#x9;&#x9;&#x9;VARCHAR, 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;columnType &#x9;&#x9;&#x9;VARCHAR,
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;annotation&#x9;&#x9;&#x9;LONGVARCHAR
&#x9;&#x9;&#x9;&#x9;&#x9;);
&#x9;&#x9;sqlIndexList - a vector array of sql indexes
&#x9;&#x9;&#x9;Values: see vector definition
&#x9;&#x9;&#x9;&#x9;&#x9;sqlIndexType ROW (
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sqlIndexName &#x9;&#x9;VARCHAR(255), 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sqlIndexType &#x9;&#x9;VARCHAR(255), 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sqlIndexUnique &#x9;&#x9;BIT, 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sqlIndexColName &#x9;VARCHAR(255), 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sqlIndexColOrder &#x9;VARCHAR(255)
&#x9;&#x9;&#x9;&#x9;&#x9;);
        foreignKeyList - a vector array of foreign keys
            Values: see vector definition
                &#x9;foreignKeyType ROW (
                &#x9;&#x9;fkName &#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(255),
                &#x9;&#x9;fkPrimaryKeyName &#x9;&#x9;VARCHAR(255),
                &#x9;&#x9;fkPrimaryKeyTable &#x9;&#x9;/shared/ASAssets/Utilities/TypeDefinitions.pathType,
                &#x9;&#x9;fkForeignKeyColumnName &#x9;VARCHAR(255),
                &#x9;&#x9;fkPrimaryKeyColumnName &#x9;VARCHAR(255)
                &#x9;);


&#x9;Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2015.2&#x9;&#x9;04/08/2015&#x9;&#x9;Tony Young&#x9;&#x9;&#x9;7.0.0&#x9;&#x9;&#x9;Created new.
&#x9;2015.3&#x9;&#x9;07/21/2015&#x9;&#x9;Tony Young&#x9;&#x9;&#x9;7.0.0&#x9;&#x9;&#x9;Fixed issue where view annotation was populated with column annotations also.

&#x9;(c) 2017 TIBCO Software Inc. All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]></annotation>
  <parameters>
    <parameter name="fullResourcePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="scriptText" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="annotation" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="columnList" direction="OUT" nullable="true">
      <datatype name="columnList" type="ARRAY">
        <itemDatatype>
          <datatype name="childResourceType" referenceDefinitionSet="/shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/definitions/RepositoryDefinitions" referenceType="childResourceType" type="TREE" refId="257">
            <element name="resourceName">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="resourcePath">
              <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
            </element>
            <element name="resourceType">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="columnName">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="columnType">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="annotation">
              <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
            </element>
          </datatype>
        </itemDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="sqlIndexList" direction="OUT" nullable="true">
      <datatype name="sqlIndexList" type="ARRAY">
        <itemDatatype>
          <datatype name="sqlIndexType" referenceDefinitionSet="/shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/definitions/RepositoryDefinitions" referenceType="sqlIndexType" type="TREE" refId="257">
            <element name="sqlIndexName">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="sqlIndexType">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="sqlIndexUnique">
              <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
            </element>
            <element name="sqlIndexColName">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="sqlIndexColOrder">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
          </datatype>
        </itemDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="foreignKeyList" direction="OUT" nullable="true">
      <datatype name="foreignKeyList" type="ARRAY">
        <itemDatatype>
          <datatype name="foreignKeyType" referenceDefinitionSet="/shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/definitions/RepositoryDefinitions" referenceType="foreignKeyType" type="TREE" refId="257">
            <element name="fkName">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="fkPrimaryKeyName">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="fkPrimaryKeyTable">
              <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
            </element>
            <element name="fkForeignKeyColumnName">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="fkPrimaryKeyColumnName">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
          </datatype>
        </itemDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/resource/operations/getResource" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="getResource" direction="IN">
        <datatype name="getResource" extendedName="{http://www.compositesw.com/services/system/admin/resource}getResource" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}getResource" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}getResource">
          <schemaDatatype>
            <datatype name="getResource" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="getResourceRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="257">
              <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="detail" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="detailLevel" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="getResourceResponse" direction="OUT">
        <datatype name="getResourceResponse" extendedName="{http://www.compositesw.com/services/system/admin/resource}getResourceResponse" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}getResourceResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}getResourceResponse">
          <schemaDatatype>
            <datatype name="getResourceResponse" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="getResourceResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="513">
              <element name="resources" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="resourceList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="769">
                  <element name="resource" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="resource" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1025">
                      <element name="name" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="subtype" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceSubType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="id" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="changeId" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                      </element>
                      <element name="version" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="introspectState" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="introspectState" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="ownerDomain" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="ownerName" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="impactLevel" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="impactLevel" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="impactMessage" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="enabled" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                      </element>
                      <element name="lockState" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="lockState" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1281">
                          <element name="lockOwnerDomain" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="lockOwnerName" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="lockCreateTime" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="dateTime" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DATETIME"/>
                          </element>
                          <element name="lockParentPath" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                        </datatype>
                      </element>
                      <element name="hints" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1537">
                          <element name="hint" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                            <datatype name="attribute" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1793">
                              <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="attributeTypeValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="2049">
                                  <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                    <datatype name="attributeTypeValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="2305">
                                      <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                                        <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                      </element>
                                      <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                      </element>
                                      <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <reference refId="2049"/>
                                      </element>
                                      <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeTypeValueMap" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="2561">
                                          <element name="entry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                            <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="2817">
                                              <element name="key" namespace="http://www.compositesw.com/services/system/util/common">
                                                <reference refId="2305"/>
                                              </element>
                                              <element name="value" namespace="http://www.compositesw.com/services/system/util/common">
                                                <reference refId="2305"/>
                                              </element>
                                            </datatype>
                                          </element>
                                        </datatype>
                                      </element>
                                      <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeSimpleValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="3073">
                                          <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                            <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                          </element>
                                        </datatype>
                                      </element>
                                    </datatype>
                                  </element>
                                </datatype>
                              </element>
                              <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <reference refId="2561"/>
                              </element>
                              <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <reference refId="3073"/>
                              </element>
                              <element name="unset" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                      <element name="annotation" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="attributes" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="attributeList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3329">
                          <element name="attribute" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                            <reference refId="1793"/>
                          </element>
                        </datatype>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="3585">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3841">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/definitions/RepositoryDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* getResourceSqlTable:
&#x9;-- CIS Repository Helper Procedure --
&#x9;This procedure is used to get the view or table definitions that can be used with updateResourceSqlTable.
 
&#x9;Input:
&#x9;&#x9;fullResourcePath - Full resource path which includes the path and the resource name  
&#x9;&#x9;&#x9;Values: e.g. /shared/Utilities/repository/examples/source/view1


&#x9;Output:
&#x9;&#x9;scripttext - SQL Table text to be updated  
&#x9;&#x9;&#x9;Values: sql table script
&#x9;&#x9;annotation - View annotation
&#x9;&#x9;columnList - a vector array of sql columns and definitions
&#x9;&#x9;&#x9;Values: see vector definition
&#x9;&#x9;&#x9;&#x9;&#x9;childResourceType ROW (
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;resourceName &#x9;&#x9;VARCHAR, 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;resourcePath &#x9;&#x9;TypeDefinitions.pathType, 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;resourceType &#x9;&#x9;VARCHAR, 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;columnName &#x9;&#x9;&#x9;VARCHAR, 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;columnType &#x9;&#x9;&#x9;VARCHAR,
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;annotation&#x9;&#x9;&#x9;LONGVARCHAR
&#x9;&#x9;&#x9;&#x9;&#x9;);
&#x9;&#x9;sqlIndexList - a vector array of sql indexes
&#x9;&#x9;&#x9;Values: see vector definition
&#x9;&#x9;&#x9;&#x9;&#x9;sqlIndexType ROW (
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sqlIndexName &#x9;&#x9;VARCHAR(255), 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sqlIndexType &#x9;&#x9;VARCHAR(255), 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sqlIndexUnique &#x9;&#x9;BIT, 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sqlIndexColName &#x9;VARCHAR(255), 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sqlIndexColOrder &#x9;VARCHAR(255)
&#x9;&#x9;&#x9;&#x9;&#x9;);
        foreignKeyList - a vector array of foreign keys
            Values: see vector definition
                &#x9;foreignKeyType ROW (
                &#x9;&#x9;fkName &#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(255),
                &#x9;&#x9;fkPrimaryKeyName &#x9;&#x9;VARCHAR(255),
                &#x9;&#x9;fkPrimaryKeyTable &#x9;&#x9;/shared/ASAssets/Utilities/TypeDefinitions.pathType,
                &#x9;&#x9;fkForeignKeyColumnName &#x9;VARCHAR(255),
                &#x9;&#x9;fkPrimaryKeyColumnName &#x9;VARCHAR(255)
                &#x9;);


&#x9;Exceptions:  none


&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2015.2&#x9;&#x9;04/08/2015&#x9;&#x9;Tony Young&#x9;&#x9;&#x9;7.0.0&#x9;&#x9;&#x9;Created new.
&#x9;2015.3&#x9;&#x9;07/21/2015&#x9;&#x9;Tony Young&#x9;&#x9;&#x9;7.0.0&#x9;&#x9;&#x9;Fixed issue where view annotation was populated with column annotations also.
&#x9;2020.400&#x9;10/15/2020&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Added an XMLTEXT to escape the fullResourcePath.  Added unescape XML for column names and paths.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE getResourceSqlTable(
&#x9;IN fullResourcePath &#x9;VARCHAR(4096),
    OUT scriptText &#x9;&#x9;&#x9;LONGVARCHAR,
&#x9;OUT annotation&#x9;&#x9;&#x9;LONGVARCHAR, -- view annotation
&#x9;OUT columnList&#x9;&#x9;&#x9;VECTOR(/shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/definitions/RepositoryDefinitions.childResourceType),
&#x9;OUT sqlIndexList&#x9;&#x9;VECTOR(/shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/definitions/RepositoryDefinitions.sqlIndexType),
&#x9;OUT foreignKeyList&#x9;&#x9;VECTOR(/shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/definitions/RepositoryDefinitions.foreignKeyType)
)
BEGIN
&#x9;DECLARE&#x9;&#x9;requestXml&#x9;&#x9;XML;
&#x9;DECLARE&#x9;&#x9;sqlTableType&#x9;VARCHAR&#x9;&#x9;&#x9;DEFAULT &apos;TABLE&apos;;
&#x9;DECLARE&#x9;&#x9;detailLevel&#x9;&#x9;VARCHAR&#x9;&#x9;&#x9;DEFAULT &apos;FULL&apos;;

&#x9;DECLARE&#x9;&#x9;responseXml&#x9;&#x9;XML;
&#x9;DECLARE&#x9;&#x9;faultXml&#x9;&#x9;XML;

&#x9;--Column level temp variables
&#x9;DECLARE&#x9;&#x9;resourceName &#x9;&#x9;VARCHAR;
&#x9;DECLARE&#x9;&#x9;resourcePath&#x9;&#x9;VARCHAR; 
&#x9;DECLARE&#x9;&#x9;resourceType&#x9;&#x9;VARCHAR; 
&#x9;DECLARE&#x9;&#x9;columnName &#x9;&#x9;&#x9;VARCHAR; 
&#x9;DECLARE&#x9;&#x9;columnType &#x9;&#x9;&#x9;VARCHAR; 
&#x9;DECLARE&#x9;&#x9;columnAnnotation &#x9;VARCHAR;

&#x9;--Index level temp variables
&#x9;DECLARE&#x9;&#x9;sqlIndexName &#x9;&#x9;VARCHAR(255);
&#x9;DECLARE&#x9;&#x9;sqlIndexType &#x9;&#x9;VARCHAR(255); 
&#x9;DECLARE&#x9;&#x9;sqlIndexUnique &#x9;&#x9;BIT;
&#x9;DECLARE&#x9;&#x9;sqlIndexColName &#x9;VARCHAR(255);
&#x9;DECLARE&#x9;&#x9;sqlIndexColOrder &#x9;VARCHAR(255);

&#x9;--FK level temp variables
&#x9;DECLARE&#x9;&#x9;fkName &#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(255);
&#x9;DECLARE&#x9;&#x9;fkPrimaryKeyName &#x9;&#x9;VARCHAR(255); 
&#x9;DECLARE&#x9;&#x9;fkPrimaryKeyTable &#x9;&#x9;VARCHAR(255);
&#x9;DECLARE&#x9;&#x9;fkForeignKeyColumnName &#x9;VARCHAR(255);
&#x9;DECLARE&#x9;&#x9;fkPrimaryKeyColumnName &#x9;VARCHAR(255);

&#x9;DECLARE&#x9;&#x9;i&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER&#x9;&#x9;&#x9;DEFAULT 1;
&#x9;DECLARE&#x9;&#x9;j&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER&#x9;&#x9;&#x9;DEFAULT 1;

&#x9;SET requestXml = &apos;&lt;resource:getResource xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos; || CAST(XMLTEXT(fullResourcePath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;
  &lt;resource:type&gt;&apos; || sqlTableType || &apos;&lt;/resource:type&gt;
  &lt;resource:detail&gt;&apos; || detailLevel || &apos;&lt;/resource:detail&gt;
&lt;/resource:getResource&gt;&apos;;

&#x9;CALL /services/webservices/system/admin/resource/operations/getResource(requestXml, responseXml, faultXml);

&#x9;CALL print(CAST(responseXml AS LONGVARCHAR));

&#x9;SET scriptText = CAST(XPATH(responseXml, &apos;//resource:sqlText/text()&apos;) AS LONGVARCHAR);
/*
&#x9;The Escape Characters: &#x9;When unescaping parsed data from XML: 
&#x9;quote &#x9;&#x9;&#x9;(&quot;) &#x9;&#x9;&amp;quot; 
&#x9;apostrophe &#x9;&#x9;(&apos;)&#x9;&#x9;&#x9;&amp;apos; 
&#x9;ampersand&#x9;&#x9;(&amp;)&#x9;&#x9;&#x9;&amp;amp;
&#x9;less than &#x9;&#x9;(&lt;) &#x9;&#x9;&amp;lt; 
&#x9;greater than &#x9;(&gt;) &#x9;&#x9;&amp;gt; 
*/
&#x9;IF (INSTR(scriptText, &apos;&amp;&apos;) &gt; 0) THEN
&#x9;&#x9;SET scriptText = REPLACE(scriptText, &apos;&amp;lt;&apos;, &apos;&lt;&apos;);
&#x9;&#x9;SET&#x9;scriptText = REPLACE(scriptText, &apos;&amp;gt;&apos;, &apos;&gt;&apos;);
&#x9;&#x9;SET&#x9;scriptText = REPLACE(scriptText, &apos;&amp;apos;&apos;, &apos;&apos;&apos;&apos;);
&#x9;&#x9;SET&#x9;scriptText = REPLACE(scriptText, &apos;&amp;quot;&apos;, &apos;&quot;&apos;);
&#x9;&#x9;SET&#x9;scriptText = REPLACE(scriptText, &apos;&amp;amp;&apos;, &apos;&amp;&apos;);
&#x9;END IF;&#x9;&#x9;&#x9;&#x9;
&#x9;SET annotation = CAST(XPATH(responseXml, &apos;//resource:getResourceResponse/resource:resources/resource:resource/resource:annotation/text()&apos;) AS LONGVARCHAR);
&#x9;IF (INSTR(annotation, &apos;&amp;&apos;) &gt; 0) THEN
&#x9;&#x9;SET annotation = REPLACE(annotation, &apos;&amp;lt;&apos;, &apos;&lt;&apos;);
&#x9;&#x9;SET&#x9;annotation = REPLACE(annotation, &apos;&amp;gt;&apos;, &apos;&gt;&apos;);
&#x9;&#x9;SET&#x9;annotation = REPLACE(annotation, &apos;&amp;apos;&apos;, &apos;&apos;&apos;&apos;);
&#x9;&#x9;SET&#x9;annotation = REPLACE(annotation, &apos;&amp;quot;&apos;, &apos;&quot;&apos;);
&#x9;&#x9;SET&#x9;annotation = REPLACE(annotation, &apos;&amp;amp;&apos;, &apos;&amp;&apos;);
&#x9;END IF;&#x9;&#x9;&#x9;&#x9;

&#x9;--CALL PRINT(&apos;responseText=&apos;||NVL(CAST(XPATH(responseXml, &apos;//resource:resources/resource:resource/resource:columns/resource:column[&apos; || i || &apos;]&apos;) AS LONGVARCHAR),&apos;null&apos;));

&#x9;WHILE(XPATH(responseXml, &apos;//resource:resources/resource:resource/resource:columns/resource:column[&apos; || i || &apos;]&apos;) IS NOT NULL) DO
&#x9;&#x9;SET resourceName = NULL; --CAST(XPATH(responseXml, &apos;//resource:resources/resource:resource/resource:columns/resource:column[&apos; || i || &apos;]/resource:name/text()&apos;) AS LONGVARCHAR);
&#x9;&#x9;SET resourcePath = NULL; --CAST(XPATH(responseXml, &apos;//resource:resources/resource:resource/resource:columns/resource:column[&apos; || i || &apos;]/resource:path/text()&apos;) AS LONGVARCHAR);
&#x9;&#x9;SET resourceType = NULL; --CAST(XPATH(responseXml, &apos;//resource:resources/resource:resource/resource:columns/resource:column[&apos; || i || &apos;]/resource:type/text()&apos;) AS LONGVARCHAR);

&#x9;&#x9;SET columnName = CAST(XPATH(responseXml, &apos;//resource:resources/resource:resource/resource:columns/resource:column[&apos; || i || &apos;]/resource:name/text()&apos;) AS LONGVARCHAR);
&#x9;&#x9;SET columnType = CAST(XPATH(responseXml, &apos;//resource:resources/resource:resource/resource:columns/resource:column[&apos; || i || &apos;]/resource:dataType/common:sqlType/common:definition/text()&apos;) AS LONGVARCHAR);
&#x9;&#x9;SET columnAnnotation = CAST(XPATH(responseXml, &apos;//resource:resources/resource:resource/resource:columns/resource:column[&apos; || i || &apos;]/resource:annotation/text()&apos;) AS LONGVARCHAR);
/*
&#x9;The Escape Characters: &#x9;When unescaping parsed data from XML: 
&#x9;quote &#x9;&#x9;&#x9;(&quot;) &#x9;&#x9;&amp;quot; 
&#x9;apostrophe &#x9;&#x9;(&apos;)&#x9;&#x9;&#x9;&amp;apos; 
&#x9;ampersand&#x9;&#x9;(&amp;)&#x9;&#x9;&#x9;&amp;amp;
&#x9;less than &#x9;&#x9;(&lt;) &#x9;&#x9;&amp;lt; 
&#x9;greater than &#x9;(&gt;) &#x9;&#x9;&amp;gt; 
*/
&#x9;&#x9;IF (INSTR(columnName, &apos;&amp;&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;SET columnName = REPLACE(columnName, &apos;&amp;lt;&apos;, &apos;&lt;&apos;);
&#x9;&#x9;&#x9;SET&#x9;columnName = REPLACE(columnName, &apos;&amp;gt;&apos;, &apos;&gt;&apos;);
&#x9;&#x9;&#x9;SET&#x9;columnName = REPLACE(columnName, &apos;&amp;apos;&apos;, &apos;&apos;&apos;&apos;);
&#x9;&#x9;&#x9;SET&#x9;columnName = REPLACE(columnName, &apos;&amp;quot;&apos;, &apos;&quot;&apos;);
&#x9;&#x9;&#x9;SET&#x9;columnName = REPLACE(columnName, &apos;&amp;amp;&apos;, &apos;&amp;&apos;);
&#x9;&#x9;END IF;&#x9;&#x9;&#x9;&#x9;
&#x9;&#x9;IF (INSTR(columnAnnotation, &apos;&amp;&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;SET columnAnnotation = REPLACE(columnAnnotation, &apos;&amp;lt;&apos;, &apos;&lt;&apos;);
&#x9;&#x9;&#x9;SET&#x9;columnAnnotation = REPLACE(columnAnnotation, &apos;&amp;gt;&apos;, &apos;&gt;&apos;);
&#x9;&#x9;&#x9;SET&#x9;columnAnnotation = REPLACE(columnAnnotation, &apos;&amp;apos;&apos;, &apos;&apos;&apos;&apos;);
&#x9;&#x9;&#x9;SET&#x9;columnAnnotation = REPLACE(columnAnnotation, &apos;&amp;quot;&apos;, &apos;&quot;&apos;);
&#x9;&#x9;&#x9;SET&#x9;columnAnnotation = REPLACE(columnAnnotation, &apos;&amp;amp;&apos;, &apos;&amp;&apos;);
&#x9;&#x9;END IF;&#x9;&#x9;&#x9;&#x9;

&#x9;&#x9;--CALL PRINT(&apos;columnName=&apos;||NVL(columnName,&apos;null&apos;));
&#x9;&#x9;IF columnList IS NULL THEN
&#x9;&#x9;&#x9;SET columnList = VECTOR[(resourceName, resourcePath, resourceType, columnName, columnType, columnAnnotation)];
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;SET columnList = columnList || VECTOR[(resourceName, resourcePath, resourceType, columnName, columnType, columnAnnotation)];
&#x9;&#x9;END IF;

&#x9;&#x9;SET i = i+1;
&#x9;END WHILE;

&#x9;SET i = 1;
&#x9;SET j = 1;

&#x9;WHILE(XPATH(responseXml, &apos;//resource:index[&apos; || i || &apos;]&apos;) IS NOT NULL) DO
&#x9;&#x9;SET sqlIndexName = CAST(XPATH(responseXml, &apos;//resource:index[&apos; || i || &apos;]/resource:name/text()&apos;) AS LONGVARCHAR);
&#x9;&#x9;SET sqlIndexType = CAST(XPATH(responseXml, &apos;//resource:index[&apos; || i || &apos;]/resource:type/text()&apos;) AS LONGVARCHAR);
&#x9;&#x9;SET sqlIndexUnique = CASE CAST(XPATH(responseXml, &apos;//resource:index[&apos; || i || &apos;]/resource:unique/text()&apos;) AS LONGVARCHAR)
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN &apos;true&apos; THEN &apos;1&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN &apos;false&apos; THEN &apos;0&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END;
/*
&#x9;The Escape Characters: &#x9;When unescaping parsed data from XML: 
&#x9;quote &#x9;&#x9;&#x9;(&quot;) &#x9;&#x9;&amp;quot; 
&#x9;apostrophe &#x9;&#x9;(&apos;)&#x9;&#x9;&#x9;&amp;apos; 
&#x9;ampersand&#x9;&#x9;(&amp;)&#x9;&#x9;&#x9;&amp;amp;
&#x9;less than &#x9;&#x9;(&lt;) &#x9;&#x9;&amp;lt; 
&#x9;greater than &#x9;(&gt;) &#x9;&#x9;&amp;gt; 
*/
&#x9;&#x9;IF (INSTR(sqlIndexName, &apos;&amp;&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;SET sqlIndexName = REPLACE(sqlIndexName, &apos;&amp;lt;&apos;, &apos;&lt;&apos;);
&#x9;&#x9;&#x9;SET&#x9;sqlIndexName = REPLACE(sqlIndexName, &apos;&amp;gt;&apos;, &apos;&gt;&apos;);
&#x9;&#x9;&#x9;SET&#x9;sqlIndexName = REPLACE(sqlIndexName, &apos;&amp;apos;&apos;, &apos;&apos;&apos;&apos;);
&#x9;&#x9;&#x9;SET&#x9;sqlIndexName = REPLACE(sqlIndexName, &apos;&amp;quot;&apos;, &apos;&quot;&apos;);
&#x9;&#x9;&#x9;SET&#x9;sqlIndexName = REPLACE(sqlIndexName, &apos;&amp;amp;&apos;, &apos;&amp;&apos;);
&#x9;&#x9;END IF;&#x9;&#x9;&#x9;&#x9;

&#x9;&#x9;WHILE(XPATH(responseXml, &apos;//resource:index[&apos; || i || &apos;]/resource:columns/column[&apos; || j || &apos;]&apos;) IS NOT NULL) DO
&#x9;&#x9;&#x9;SET sqlIndexColName = CAST(XPATH(responseXml, &apos;//resource:index[&apos; || i || &apos;]/resource:columns/column[&apos; || j || &apos;]/resource:name/text()&apos;) AS LONGVARCHAR);
&#x9;&#x9;&#x9;SET sqlIndexColOrder = CAST(XPATH(responseXml, &apos;//resource:index[&apos; || i || &apos;]/resource:columns/column[&apos; || j || &apos;]/resource:order/text()&apos;) AS LONGVARCHAR);&#x9;
/*
&#x9;The Escape Characters: &#x9;When unescaping parsed data from XML: 
&#x9;quote &#x9;&#x9;&#x9;(&quot;) &#x9;&#x9;&amp;quot; 
&#x9;apostrophe &#x9;&#x9;(&apos;)&#x9;&#x9;&#x9;&amp;apos; 
&#x9;ampersand&#x9;&#x9;(&amp;)&#x9;&#x9;&#x9;&amp;amp;
&#x9;less than &#x9;&#x9;(&lt;) &#x9;&#x9;&amp;lt; 
&#x9;greater than &#x9;(&gt;) &#x9;&#x9;&amp;gt; 
*/
&#x9;&#x9;&#x9;IF (INSTR(sqlIndexColName, &apos;&amp;&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET sqlIndexColName = REPLACE(sqlIndexColName, &apos;&amp;lt;&apos;, &apos;&lt;&apos;);
&#x9;&#x9;&#x9;&#x9;SET&#x9;sqlIndexColName = REPLACE(sqlIndexColName, &apos;&amp;gt;&apos;, &apos;&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;SET&#x9;sqlIndexColName = REPLACE(sqlIndexColName, &apos;&amp;apos;&apos;, &apos;&apos;&apos;&apos;);
&#x9;&#x9;&#x9;&#x9;SET&#x9;sqlIndexColName = REPLACE(sqlIndexColName, &apos;&amp;quot;&apos;, &apos;&quot;&apos;);
&#x9;&#x9;&#x9;&#x9;SET&#x9;sqlIndexColName = REPLACE(sqlIndexColName, &apos;&amp;amp;&apos;, &apos;&amp;&apos;);
&#x9;&#x9;&#x9;END IF;&#x9;&#x9;&#x9;&#x9;
&#x9;&#x9;&#x9;IF sqlIndexList IS NULL THEN
&#x9;&#x9;&#x9;&#x9;SET sqlIndexList = VECTOR[(sqlIndexName, sqlIndexType, sqlIndexUnique, sqlIndexColName, sqlIndexColOrder)];
&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;SET sqlIndexList = sqlIndexList || VECTOR[(sqlIndexName, sqlIndexType, sqlIndexUnique, sqlIndexColName, sqlIndexColOrder)];
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;SET j = j + 1;
&#x9;&#x9;END WHILE;

&#x9;&#x9;SET i = i+1;
&#x9;&#x9;SET j = 1;
&#x9;END WHILE;

&#x9;SET i = 1;
&#x9;SET j = 1;

&#x9;WHILE(XPATH(responseXml, &apos;//resource:foreignKey[&apos; || i || &apos;]&apos;) IS NOT NULL) DO
&#x9;&#x9;SET fkName = CAST(XPATH(responseXml, &apos;//resource:foreignKey[&apos; || i || &apos;]/resource:name/text()&apos;) AS LONGVARCHAR);
&#x9;&#x9;SET fkPrimaryKeyName = CAST(XPATH(responseXml, &apos;//resource:foreignKey[&apos; || i || &apos;]/resource:primaryKeyName/text()&apos;) AS LONGVARCHAR);
&#x9;&#x9;SET fkPrimaryKeyTable = CAST(XPATH(responseXml, &apos;//resource:foreignKey[&apos; || i || &apos;]/resource:primaryKeyTable/text()&apos;) AS LONGVARCHAR);
/*
&#x9;The Escape Characters: &#x9;When unescaping parsed data from XML: 
&#x9;quote &#x9;&#x9;&#x9;(&quot;) &#x9;&#x9;&amp;quot; 
&#x9;apostrophe &#x9;&#x9;(&apos;)&#x9;&#x9;&#x9;&amp;apos; 
&#x9;ampersand&#x9;&#x9;(&amp;)&#x9;&#x9;&#x9;&amp;amp;
&#x9;less than &#x9;&#x9;(&lt;) &#x9;&#x9;&amp;lt; 
&#x9;greater than &#x9;(&gt;) &#x9;&#x9;&amp;gt; 
*/
&#x9;&#x9;IF (INSTR(fkName, &apos;&amp;&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;SET fkName = REPLACE(fkName, &apos;&amp;lt;&apos;, &apos;&lt;&apos;);
&#x9;&#x9;&#x9;SET&#x9;fkName = REPLACE(fkName, &apos;&amp;gt;&apos;, &apos;&gt;&apos;);
&#x9;&#x9;&#x9;SET&#x9;fkName = REPLACE(fkName, &apos;&amp;apos;&apos;, &apos;&apos;&apos;&apos;);
&#x9;&#x9;&#x9;SET&#x9;fkName = REPLACE(fkName, &apos;&amp;quot;&apos;, &apos;&quot;&apos;);
&#x9;&#x9;&#x9;SET&#x9;fkName = REPLACE(fkName, &apos;&amp;amp;&apos;, &apos;&amp;&apos;);
&#x9;&#x9;END IF;&#x9;&#x9;&#x9;&#x9;
&#x9;&#x9;IF (INSTR(fkPrimaryKeyName, &apos;&amp;&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;SET fkPrimaryKeyName = REPLACE(fkPrimaryKeyName, &apos;&amp;lt;&apos;, &apos;&lt;&apos;);
&#x9;&#x9;&#x9;SET&#x9;fkPrimaryKeyName = REPLACE(fkPrimaryKeyName, &apos;&amp;gt;&apos;, &apos;&gt;&apos;);
&#x9;&#x9;&#x9;SET&#x9;fkPrimaryKeyName = REPLACE(fkPrimaryKeyName, &apos;&amp;apos;&apos;, &apos;&apos;&apos;&apos;);
&#x9;&#x9;&#x9;SET&#x9;fkPrimaryKeyName = REPLACE(fkPrimaryKeyName, &apos;&amp;quot;&apos;, &apos;&quot;&apos;);
&#x9;&#x9;&#x9;SET&#x9;fkPrimaryKeyName = REPLACE(fkPrimaryKeyName, &apos;&amp;amp;&apos;, &apos;&amp;&apos;);
&#x9;&#x9;END IF;&#x9;&#x9;&#x9;&#x9;
&#x9;&#x9;IF (INSTR(fkPrimaryKeyTable, &apos;&amp;&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;SET fkPrimaryKeyTable = REPLACE(fkPrimaryKeyTable, &apos;&amp;lt;&apos;, &apos;&lt;&apos;);
&#x9;&#x9;&#x9;SET&#x9;fkPrimaryKeyTable = REPLACE(fkPrimaryKeyTable, &apos;&amp;gt;&apos;, &apos;&gt;&apos;);
&#x9;&#x9;&#x9;SET&#x9;fkPrimaryKeyTable = REPLACE(fkPrimaryKeyTable, &apos;&amp;apos;&apos;, &apos;&apos;&apos;&apos;);
&#x9;&#x9;&#x9;SET&#x9;fkPrimaryKeyTable = REPLACE(fkPrimaryKeyTable, &apos;&amp;quot;&apos;, &apos;&quot;&apos;);
&#x9;&#x9;&#x9;SET&#x9;fkPrimaryKeyTable = REPLACE(fkPrimaryKeyTable, &apos;&amp;amp;&apos;, &apos;&amp;&apos;);
&#x9;&#x9;END IF;&#x9;&#x9;&#x9;&#x9;

&#x9;&#x9;WHILE(XPATH(responseXml, &apos;//resource:foreignKey[&apos; || i || &apos;]/resource:columns/column[&apos; || j || &apos;]&apos;) IS NOT NULL) DO
&#x9;&#x9;&#x9;SET fkPrimaryKeyColumnName = CAST(XPATH(responseXml, &apos;//resource:foreignKey[&apos; || i || &apos;]/resource:columns/column[&apos; || j || &apos;]/resource:primaryKeyColumnName/text()&apos;) AS LONGVARCHAR);
&#x9;&#x9;&#x9;SET fkForeignKeyColumnName = CAST(XPATH(responseXml, &apos;//resource:foreignKey[&apos; || i || &apos;]/resource:columns/column[&apos; || j || &apos;]/resource:foreignKeyColumnName/text()&apos;) AS LONGVARCHAR);
/*
&#x9;The Escape Characters: &#x9;When unescaping parsed data from XML: 
&#x9;quote &#x9;&#x9;&#x9;(&quot;) &#x9;&#x9;&amp;quot; 
&#x9;apostrophe &#x9;&#x9;(&apos;)&#x9;&#x9;&#x9;&amp;apos; 
&#x9;ampersand&#x9;&#x9;(&amp;)&#x9;&#x9;&#x9;&amp;amp;
&#x9;less than &#x9;&#x9;(&lt;) &#x9;&#x9;&amp;lt; 
&#x9;greater than &#x9;(&gt;) &#x9;&#x9;&amp;gt; 
*/
&#x9;&#x9;&#x9;IF (INSTR(fkPrimaryKeyColumnName, &apos;&amp;&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET fkPrimaryKeyColumnName = REPLACE(fkPrimaryKeyColumnName, &apos;&amp;lt;&apos;, &apos;&lt;&apos;);
&#x9;&#x9;&#x9;&#x9;SET&#x9;fkPrimaryKeyColumnName = REPLACE(fkPrimaryKeyColumnName, &apos;&amp;gt;&apos;, &apos;&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;SET&#x9;fkPrimaryKeyColumnName = REPLACE(fkPrimaryKeyColumnName, &apos;&amp;apos;&apos;, &apos;&apos;&apos;&apos;);
&#x9;&#x9;&#x9;&#x9;SET&#x9;fkPrimaryKeyColumnName = REPLACE(fkPrimaryKeyColumnName, &apos;&amp;quot;&apos;, &apos;&quot;&apos;);
&#x9;&#x9;&#x9;&#x9;SET&#x9;fkPrimaryKeyColumnName = REPLACE(fkPrimaryKeyColumnName, &apos;&amp;amp;&apos;, &apos;&amp;&apos;);
&#x9;&#x9;&#x9;END IF;&#x9;&#x9;&#x9;&#x9;
&#x9;&#x9;&#x9;IF (INSTR(fkForeignKeyColumnName, &apos;&amp;&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET fkForeignKeyColumnName = REPLACE(fkForeignKeyColumnName, &apos;&amp;lt;&apos;, &apos;&lt;&apos;);
&#x9;&#x9;&#x9;&#x9;SET&#x9;fkForeignKeyColumnName = REPLACE(fkForeignKeyColumnName, &apos;&amp;gt;&apos;, &apos;&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;SET&#x9;fkForeignKeyColumnName = REPLACE(fkForeignKeyColumnName, &apos;&amp;apos;&apos;, &apos;&apos;&apos;&apos;);
&#x9;&#x9;&#x9;&#x9;SET&#x9;fkForeignKeyColumnName = REPLACE(fkForeignKeyColumnName, &apos;&amp;quot;&apos;, &apos;&quot;&apos;);
&#x9;&#x9;&#x9;&#x9;SET&#x9;fkForeignKeyColumnName = REPLACE(fkForeignKeyColumnName, &apos;&amp;amp;&apos;, &apos;&amp;&apos;);
&#x9;&#x9;&#x9;END IF;&#x9;&#x9;&#x9;&#x9;
&#x9;&#x9;
&#x9;&#x9;&#x9;IF foreignKeyList IS NULL THEN
&#x9;&#x9;&#x9;&#x9;SET foreignKeyList = VECTOR[(fkName, fkPrimaryKeyName, fkPrimaryKeyTable, fkForeignKeyColumnName, fkPrimaryKeyColumnName)];
&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;SET foreignKeyList = foreignKeyList || VECTOR[(fkName, fkPrimaryKeyName, fkPrimaryKeyTable, fkForeignKeyColumnName, fkPrimaryKeyColumnName)];
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;SET j = j + 1;
&#x9;&#x9;END WHILE;

&#x9;&#x9;SET i = i+1;
&#x9;&#x9;SET j = 1;
&#x9;END WHILE;
END</attribute>
  <attribute name="creationDate" type="LONG">1427461624401</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609965948495</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:3:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:4:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:5:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">7/118</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1427461624401</attribute>
</metadata>