<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="createUser" path="/shared/Delta_DV/_scripts/Utilities/repository/user/createUser" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[createUser:
    Create a user if it does not exist or update the user if it does exist.
&#x9;Create the user with the specified password, membership details and domain.  
&#x9;If the user already exists, update the user password only when forcePassword=Y is specified.
&#x9;In all cases, the group membership of the user will be updated to reflect the specified membership.
 
&#x9;Input:
    &#x9;&#x9;debug - Y=debug on, N=debug off 
&#x9;&#x9;&#x9;username - username to create in composite
&#x9;&#x9;&#x9;password - password of the user
&#x9;&#x9;&#x9;forcePassword - 1=force a reset of the password even if the user exists, 0=if user exists, then don&apos;t force a change to the password
&#x9;&#x9;&#x9;domainName - domain which the user will belong to.  default is &apos;composite&apos;
&#x9;&#x9;&#x9;groupNameAndDomainList - a space separate list of group|domain pairs where the pairs are separated by a pipe (|)
&#x9;&#x9;&#x9;&#x9;&#x9;   groupName|groupDomain groupName|groupDomain groupName|groupDomain&#x9;&#x9;&#x9;     
&#x9;&#x9;&#x9;&#x9;e.g.  comp_admin|composite    comp_dev|composite   comp_user|composite
&#x9;&#x9;&#x9;annotation - the annotation for the group
&#x9;Output:

&#x9;Exceptions:  Exception may be thrown.

&#x9;2011.2&#x9;&#x9;01/18/2011&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new.
&#x9;2014.4&#x9;&#x9;11/07/2014&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.6&#x9;&#x9;&#x9;Updated to add annotation and insure username and groups are lower case when domain=composite.
&#x9;2014.4&#x9;&#x9;11/21/2014&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.6&#x9;&#x9;&#x9;Removed use of /XML/escapeXML() in favor of XMLTEXT which does the same thing.
&#x9;2018.100&#x9;03/02/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Replaced RegexSplit with extractDelimitedText
&#x9;2019.200&#x9;04/04/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Changed custom functions to explicit paths.
&#x9;2019.200&#x9;05/15/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Removed the use of a vector. It was overkill.

    (c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]></annotation>
  <parameters>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="username" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="8192"/>
    </parameter>
    <parameter name="password" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="8192"/>
    </parameter>
    <parameter name="forcePassword" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="domainName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="8192"/>
    </parameter>
    <parameter name="groupNameAndDomainList" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="8192"/>
    </parameter>
    <parameter name="annotation" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/Pause" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="timeInMilliSeconds" direction="IN">
        <datatype type="INTEGER"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/services/databases/system/DUAL" type="TABLE">
    <datatype type="TABLE" refId="256">
      <element name="DUMMY">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/user/operations/createUser" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="createUser" direction="IN">
        <datatype name="createUser" extendedName="{http://www.compositesw.com/services/system/admin/user}createUser" namespace="http://www.compositesw.com/services/system/admin/user" referenceDefinitionSet="/services/webservices/system/admin/user/operations/UserSchema" referenceType="{http://www.compositesw.com/services/system/admin/user}createUser" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/user}createUser">
          <schemaDatatype>
            <datatype name="createUser" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="createUserRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/user" subType="ELEMENT_DECL" type="TREE" refId="257">
              <element name="domainName" namespace="http://www.compositesw.com/services/system/admin/user">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="userName" namespace="http://www.compositesw.com/services/system/admin/user">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="password" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="explicitRights" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="userRightsList" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="annotation" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="createUserResponse" direction="OUT">
        <datatype name="createUserResponse" extendedName="{http://www.compositesw.com/services/system/admin/user}createUserResponse" namespace="http://www.compositesw.com/services/system/admin/user" referenceDefinitionSet="/services/webservices/system/admin/user/operations/UserSchema" referenceType="{http://www.compositesw.com/services/system/admin/user}createUserResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/user}createUserResponse">
          <schemaDatatype>
            <datatype name="createUserResponse" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="createUserResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/user" subType="ELEMENT_DECL" type="TREE" refId="513"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="769">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1025">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/user/operations/updateUser" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="updateUser" direction="IN">
        <datatype name="updateUser" extendedName="{http://www.compositesw.com/services/system/admin/user}updateUser" namespace="http://www.compositesw.com/services/system/admin/user" referenceDefinitionSet="/services/webservices/system/admin/user/operations/UserSchema" referenceType="{http://www.compositesw.com/services/system/admin/user}updateUser" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/user}updateUser">
          <schemaDatatype>
            <datatype name="updateUser" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="updateUserRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/user" subType="ELEMENT_DECL" type="TREE" refId="257">
              <element name="domainName" namespace="http://www.compositesw.com/services/system/admin/user">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="userName" namespace="http://www.compositesw.com/services/system/admin/user">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="oldPassword" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="password" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="groupNames" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="domainMemberReferenceList" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="513">
                  <element name="entry" namespace="http://www.compositesw.com/services/system/admin/user" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="domainMemberReference" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="769">
                      <element name="name" namespace="http://www.compositesw.com/services/system/admin/user">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="domain" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
              <element name="explicitRights" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="userRightsList" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="annotation" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="updateUserResponse" direction="OUT">
        <datatype name="updateUserResponse" extendedName="{http://www.compositesw.com/services/system/admin/user}updateUserResponse" namespace="http://www.compositesw.com/services/system/admin/user" referenceDefinitionSet="/services/webservices/system/admin/user/operations/UserSchema" referenceType="{http://www.compositesw.com/services/system/admin/user}updateUserResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/user}updateUserResponse">
          <schemaDatatype>
            <datatype name="updateUserResponse" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="updateUserResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/user" subType="ELEMENT_DECL" type="TREE" refId="1025"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="1281">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1537">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/conversions/convertBit" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="request" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="response" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/user/getUser" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="userName" direction="IN">
        <datatype type="STRING" maxLength="8192"/>
      </element>
      <element name="userDomain" direction="IN">
        <datatype type="STRING" maxLength="8192"/>
      </element>
      <element name="userExists" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="userExplicitRights" direction="OUT">
        <datatype type="STRING" maxLength="8192"/>
      </element>
      <element name="userEffectiveRights" direction="OUT">
        <datatype type="STRING" maxLength="8192"/>
      </element>
      <element name="userInheritedRights" direction="OUT">
        <datatype type="STRING" maxLength="8192"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/string/extractDelimitedText" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inputString" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="delimiter" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="occurrence" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="reverseInputText" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="reverseOutput" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="trimText" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="includeDelimiter" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="object">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* createUser:
    Create a user if it does not exist or update the user if it does exist.
&#x9;Create the user with the specified password, membership details and domain.  
&#x9;If the user already exists, update the user password only when forcePassword=Y is specified.
&#x9;In all cases, the group membership of the user will be updated to reflect the specified membership.
 
&#x9;Input:
    &#x9;&#x9;debug - Y=debug on, N=debug off 
&#x9;&#x9;&#x9;username - username to create in composite
&#x9;&#x9;&#x9;password - password of the user
&#x9;&#x9;&#x9;forcePassword - 1=force a reset of the password even if the user exists, 0=if user exists, then don&apos;t force a change to the password
&#x9;&#x9;&#x9;domainName - domain which the user will belong to.  default is &apos;composite&apos;
&#x9;&#x9;&#x9;groupNameAndDomainList - a space separate list of group|domain pairs where the pairs are separated by a pipe (|)
&#x9;&#x9;&#x9;&#x9;&#x9;   groupName|groupDomain groupName|groupDomain groupName|groupDomain&#x9;&#x9;&#x9;     
&#x9;&#x9;&#x9;&#x9;e.g.  comp_admin|composite    comp_dev|composite   comp_user|composite
&#x9;&#x9;&#x9;annotation - the annotation for the group
&#x9;Output:

&#x9;Exceptions:  Exception may be thrown.

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2011.2&#x9;&#x9;01/18/2011&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new.
&#x9;2014.4&#x9;&#x9;11/07/2014&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.6&#x9;&#x9;&#x9;Updated to add annotation and insure username and groups are lower case when domain=composite.
&#x9;2014.4&#x9;&#x9;11/21/2014&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.6&#x9;&#x9;&#x9;Removed use of /XML/escapeXML() in favor of XMLTEXT which does the same thing.
&#x9;2018.100&#x9;03/02/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Replaced RegexSplit with extractDelimitedText
&#x9;2019.200&#x9;04/04/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Changed custom functions to explicit paths.
&#x9;2019.200&#x9;05/15/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Removed the use of a vector. It was overkill.
&#x9;2020.201&#x9;04/31/2020&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Fixed a bug with XML request to escape XML characters.  Changed logDebugMessage to print.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE createUser(
&#x9;IN debug &#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1),&#x9;&#x9;-- e.g. Y or N
&#x9;IN username&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(8192), 
&#x9;IN password &#x9;&#x9;&#x9;&#x9;VARCHAR(8192), 
&#x9;IN forcePassword&#x9;&#x9;&#x9;CHAR(1),&#x9;&#x9;-- 0=do not force change or 1=force change
&#x9;IN domainName &#x9;&#x9;&#x9;&#x9;VARCHAR(8192),&#x9;
&#x9;IN groupNameAndDomainList &#x9;VARCHAR(8192),&#x9;-- a space separate list of group|domain pairs where the pairs are separated by a pipe (|)
&#x9;IN annotation&#x9;&#x9;&#x9;&#x9;VARCHAR(32768)
)
BEGIN
&#x9;DECLARE moduleName &#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;createUser&apos;;
&#x9;DECLARE groupNameAndDomains&#x9;VARCHAR(8192) DEFAULT TRIM(NVL(groupNameAndDomainList,&apos;   &apos;));
&#x9;DECLARE request &#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE response &#x9;&#x9;&#x9;XML;
&#x9;DECLARE fault &#x9;&#x9;&#x9;&#x9;XML;
&#x9;DECLARE userExists&#x9;&#x9;&#x9;BIT;
&#x9;DECLARE groupName&#x9;&#x9;&#x9;VARCHAR(8192);
&#x9;DECLARE groupDomain&#x9;&#x9;&#x9;VARCHAR(8192);
&#x9;DECLARE tmp &#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE userExplicitRights&#x9;VARCHAR(8192);
&#x9;DECLARE userEffectiveRights&#x9;VARCHAR(8192);
&#x9;DECLARE userInheritedRights&#x9;VARCHAR(8192);
&#x9;DECLARE force_password_bit&#x9;BIT;
&#x9;DECLARE pos&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE message &#x9;&#x9;&#x9;LONGVARCHAR;
    DECLARE ex&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION;
    DECLARE createUserException&#x9;EXCEPTION;

&#x9;-- Step one: make sure the appropriate users exist or create if needed
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos;: Checking if user (&apos; || username || &apos;) exists&apos;);
&#x9;END IF;
&#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/&quot;user&quot;/getUser(debug, username, domainName, userExists, userExplicitRights, userEffectiveRights, userInheritedRights);

&#x9;-- Step two: create the user if it does not exist
&#x9;IF userExists = 1 THEN
&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos;: User (&apos; || username || &apos;) exists&apos;);
&#x9;&#x9;END IF;
&#x9;ELSE
&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos;: USER(&apos;|| username||&apos;) does NOT exist&apos;);
&#x9;&#x9;END IF;

&#x9;&#x9;IF (domainName != &apos;composite&apos;) THEN
&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;call pause(1000); -- pause long enough for the debug statements to be able to print out
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;RAISE createUserException VALUE &apos;User (&apos; || username || &apos;) in domain (&apos; || domainName || &apos;) does not exist&apos;;
&#x9;&#x9;END IF;
&#x9;&#x9;BEGIN INDEPENDENT TRANSACTION
&#x9;&#x9;&#x9;SET request =
                  &apos;&lt;ns1:createUser xmlns:ns1=&quot;http://www.compositesw.com/services/system/admin/user&quot;&apos;||CHR(10)||
                  &apos;   xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;  xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&apos;||CHR(10)||
                  &apos;     &lt;ns1:domainName&gt;&apos; || CAST(XMLTEXT(TRIM(NVL(domainName,&apos;  &apos;))) AS LONGVARCHAR) || &apos;&lt;/ns1:domainName&gt;&apos;||CHR(10)||
                  &apos;     &lt;ns1:userName&gt;&apos; || CAST(XMLTEXT(TRIM(NVL(username,&apos;  &apos;))) AS LONGVARCHAR) || &apos;&lt;/ns1:userName&gt;&apos;||CHR(10)||
                  &apos;     &lt;ns1:password&gt;&apos; || CAST(XMLTEXT(TRIM(NVL(password,&apos;  &apos;))) AS LONGVARCHAR) || &apos;&lt;/ns1:password&gt;&apos;||CHR(10)||
                  &apos;&lt;/ns1:createUser&gt;&apos;;

&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos;: Creating user (&apos; || username||&apos;) request=&apos;||CHR(10)||request);
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- Invoke the API to create the user
&#x9;&#x9;&#x9;CALL /services/webservices/system/admin/&quot;user&quot;/operations/createUser(request, response, fault);
&#x9;&#x9;EXCEPTION                 
&#x9;&#x9;&#x9;WHEN System.SOAPFaultException THEN
&#x9;&#x9;&#x9;&#x9;RAISE;                                   
&#x9;&#x9;END;
&#x9;END IF;        

&#x9;-- Step three: update the user with the appropriate password and group assignments.
&#x9;BEGIN INDEPENDENT TRANSACTION
&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos;: apply groups TO USER (&apos; || username||&apos;)&apos;);
&#x9;&#x9;END IF;
&#x9;&#x9;-- Remove white space around the pipe separator in the group domain list
&#x9;&#x9;SET pos = INSTR(groupNameAndDomains, &apos; |&apos;);
&#x9;&#x9;WHILE (pos &gt; 0) DO
&#x9;&#x9;&#x9;SET groupNameAndDomains = REPLACE(groupNameAndDomains, &apos; |&apos;, &apos;|&apos;);
&#x9;&#x9;&#x9;SET pos = INSTR(groupNameAndDomains, &apos; |&apos;);
&#x9;&#x9;END WHILE;
&#x9;&#x9;SELECT {OPTION IGNORE_TRAILING_SPACES=&quot;FALSE&quot;} INSTR(groupNameAndDomains, &apos;| &apos;) INTO pos FROM /services/databases/system/DUAL;
&#x9;&#x9;WHILE (pos &gt; 0) DO
&#x9;&#x9;&#x9;SET groupNameAndDomains = REPLACE(groupNameAndDomains, &apos;| &apos;, &apos;|&apos;);
&#x9;&#x9;&#x9;SELECT {OPTION IGNORE_TRAILING_SPACES=&quot;FALSE&quot;} INSTR(groupNameAndDomains, &apos;| &apos;) INTO pos FROM /services/databases/system/DUAL;
&#x9;&#x9;END WHILE;

&#x9;&#x9;SET tmp = &apos;    &lt;ns1:groupNames&gt;&apos;||CHR(10)||
                  &apos;    &lt;ns1:entry&gt;&apos;||CHR(10)||
                  &apos;       &lt;ns1:name&gt;all&lt;/ns1:name&gt;&apos;||CHR(10)||
                  &apos;       &lt;ns1:domain&gt;composite&lt;/ns1:domain&gt;&apos;||CHR(10)||
                  &apos;    &lt;/ns1:entry&gt;&apos;||CHR(10);
&#x9;&#x9;FOR pair AS
&#x9;&#x9;&#x9;SELECT object keyword 
&#x9;&#x9;&#x9;FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/string/extractDelimitedText(groupNameAndDomains,&apos; &apos;,0,0,0,1,0)
&#x9;&#x9;&#x9;WHERE object IS NOT NULL AND LENGTH(TRIM(object)) &gt; 0
&#x9;&#x9;DO
&#x9;&#x9;&#x9;SET pos = INSTR(pair.keyword, &apos;|&apos;);
&#x9;&#x9;&#x9;IF (pos &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET groupName = TRIM(SUBSTRING(pair.keyword, 1, pos-1));
&#x9;&#x9;&#x9;&#x9;SET groupDomain = TRIM(SUBSTRING(pair.keyword, pos+1));
&#x9;&#x9;&#x9;&#x9;SET tmp = tmp ||
                  &apos;    &lt;ns1:entry&gt;&apos;||CHR(10)||
                  &apos;       &lt;ns1:name&gt;&apos; || CAST(XMLTEXT(groupName) AS LONGVARCHAR) || &apos;&lt;/ns1:name&gt;&apos;||CHR(10)||
                  &apos;       &lt;ns1:domain&gt;&apos; || CAST(XMLTEXT(groupDomain) AS LONGVARCHAR) || &apos;&lt;/ns1:domain&gt;&apos;||CHR(10)||
                  &apos;    &lt;/ns1:entry&gt;&apos;||CHR(10);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END FOR;
&#x9;&#x9;SET tmp = tmp ||
                 &apos;    &lt;/ns1:groupNames&gt;&apos;||CHR(10);
 
&#x9;&#x9;-- Convert the force password to a bit
&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/conversions/convertBit(forcePassword, force_password_bit);

&#x9;&#x9;IF (force_password_bit = 1 AND domainName = &apos;composite&apos;) THEN
&#x9;&#x9;&#x9;SET tmp = &apos;    &lt;ns1:password&gt;&apos; || TRIM(NVL(password,&apos;  &apos;)) || &apos;&lt;/ns1:password&gt;&apos;||CHR(10)|| tmp;
&#x9;&#x9;END IF;
                        
&#x9;&#x9;SET request =
               &apos;&lt;ns1:updateUser xmlns:ns1=&quot;http://www.compositesw.com/services/system/admin/user&quot;&apos;||CHR(10)||
               &apos;  xmlns:ns2=&quot;http://www.compositesw.com/services/system/util/common&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&apos;||CHR(10)||
               &apos;    &lt;ns1:domainName&gt;&apos; || CAST(XMLTEXT(TRIM(NVL(domainName,&apos;  &apos;))) AS LONGVARCHAR) || &apos;&lt;/ns1:domainName&gt;&apos;||CHR(10)||
               &apos;    &lt;ns1:userName&gt;&apos; || CAST(XMLTEXT(TRIM(NVL(username,&apos;  &apos;))) AS LONGVARCHAR) || &apos;&lt;/ns1:userName&gt;&apos;||CHR(10)||
               tmp ||
               &apos;    &lt;ns1:annotation&gt;&apos;||CAST(XMLTEXT(TRIM(NVL(annotation, &apos; &apos;))) AS LONGVARCHAR)||&apos;&lt;/ns1:annotation&gt;&apos;||CHR(10)||
               &apos;&lt;/ns1:updateUser&gt;&apos;;

&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos;: &apos;||CHR(10)||NVL(request,&apos;null&apos;));
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;-- Invoke the API to update the user
&#x9;&#x9;CALL /services/webservices/system/admin/&quot;user&quot;/operations/updateUser(request, response, fault);
&#x9;EXCEPTION
&#x9;&#x9;WHEN System.SOAPFaultException THEN
&#x9;&#x9;&#x9;RAISE;                                   
&#x9;END;

EXCEPTION
&#x9;ELSE
&#x9;&#x9;SET message = CAST(CURRENT_EXCEPTION.TRACE AS LONGVARCHAR);
&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos;: &apos;||NVL(message,&apos;null&apos;));
&#x9;&#x9;&#x9;CALL pause(1000); -- pause long enough for the debug statements to be able to print out before raising the exception.
&#x9;&#x9;END IF;
&#x9;&#x9;RAISE ex VALUE message;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609965948495</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">10/93</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>Pause</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/121</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/113</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/176</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/84</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/191</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>Pause</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/190</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/88</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/77</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/107</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/182</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
  </attribute>
</metadata>