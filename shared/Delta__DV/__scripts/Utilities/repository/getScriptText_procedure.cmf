<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="getScriptText" path="/shared/Delta_DV/_scripts/Utilities/repository/getScriptText" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[getScriptText:
&#x9;-- CIS Repository Helper Procedure --
&#x9;This procedure returns the script text for a procedure.  This allows a program to get the text modify
&#x9;the text and then use another procedure to update the procedure.
 
&#x9;Input:
&#x9;&#x9;fullResourcePath - Full resource path which includes the path and the resource name  
&#x9;&#x9;&#x9;Values: e.g. /shared/Utilities/repository/examples/source/proc2
&#x9;&#x9;resourceType - Type of CIS resource to be created
&#x9;&#x9;&#x9;Values: see &quot;TYPES / SUBTYPES&quot; listing below.  e.g. PROCEDURE
&#x9;&#x9;subType - Subtype of CIS resource to be created
&#x9;&#x9;&#x9;Values: see &quot;TYPES / SUBTYPES&quot; listing below.  e.g. SQL_SCRIPT_PROCEDURE
&#x9;Output:
&#x9;&#x9;scriptText - contains the text of the script
&#x9;&#x9;&#x9;Values: script text value.  e.g. PROCEDURE proc2() BEGIN END
&#x9;Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2010.3&#x9;&#x9;8/2/2010&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.1.0&#x9;&#x9;&#x9;Created new.

    (c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.



&#x9;TYPES / SUBTYPES:
&#x9;=================
&#x9;The following resource types/subtypes are supported by this operation.  Resources
&#x9;cannot be created under &quot;/services&quot; unless otherwise noted, and cannot be created
&#x9;within a physical data source.  

&#x9;(Basic CIS folder)
&#x9;* CONTAINER / FOLDER_CONTAINER - A Composite folder.   Cannot be created anywhere under /services except in another FOLDER under /services/webservices.
&#x9;* CONTAINER / DIRECTORY_CONTAINER - A Composite directory.
&#x9;(Database)
&#x9;* CONTAINER / CATALOG_CONTAINER - A Composite catalog folder under a data source.  Can only be created within a data source under /services/databases.
&#x9;* CONTAINER / SCHEMA_CONTAINER - A Composite schema container.  Can only be created within a CATALOG that is under /services/databases.
&#x9;(Web Services)
&#x9;* CONTAINER / SERVICE_CONTAINER - A web service container for the service.  Can only be created within a Composite Web Services data source that is under /services/webservices.
&#x9;* CONTAINER / OPERATIONS_CONTAINER - A web service container for the operations
&#x9;* CONTAINER / PORT_CONTAINER - A Composite web service container for port.   Can only be created within a SERVICE under /services/webservices.
&#x9;(Connectors)
&#x9;* CONTAINER / CONNECTOR_CONTAINER - A Composite container for connectors.

&#x9;* CONNECTOR / JMS - A Composite JMS Connector.  Created with no connection information
&#x9;* CONNECTOR / HTTP - A Composite HTTP Connector.  Created with no connection information

&#x9;* DATA_SOURCE / RELATIONAL_DATA_SOURCE - A relational database source.
&#x9;* DATA_SOURCE / FILE_DATA_SOURCE - A comma separate file data source.
&#x9;* DATA_SOURCE / XML_FILE_DATA_SOURCE - An XML file data source.
&#x9;* DATA_SOURCE / WSDL_DATA_SOURCE - A Composite web service data source.
&#x9;* DATA_SOURCE / XML_HTTP_DATA_SOURCE - An HTTP XML data source.
&#x9;* DATA_SOURCE / NONE - A custom java procedure data source.

&#x9;* DEFINITION_SET / SQL_DEFINITION_SET - A Composite SQL Definition set.
&#x9;* DEFINITION_SET / XML_SCHEMA_DEFINITION_SET - A Composite XML Schema Defintion set.
&#x9;* DEFINITION_SET / WSDL_DEFINITION_SET - A Composite WSDL Definition set.
&#x9;* DEFINITION_SET / ABSTRACT_WSDL_DEFINITION_SET - A Composite Abstract WSDL Definition set such as the ones imported from Designer.
&#x9;* DEFINITION_SET / SCDL_DEFINITION_SET - A Composite SCA composite Definition set imported from Designer.

&#x9;* LINK / unknown at this time

&#x9;(CIS procedures)
&#x9;* PROCEDURE / SQL_SCRIPT_PROCEDURE - A Composite SQL Procedure.  Created with a simple default script body that is runnable.
&#x9;(Custom procedures)
&#x9;* PROCEDURE / JAVA_PROCEDURE - A Composite java data source procedure.  Created from a java data source (jar file).
&#x9;(Database procedures)
&#x9;* PROCEDURE / EXTERNAL_SQL_PROCEDURE - A Composite Packaged Query.  Created with no SQL text, so it is not runnable.  
&#x9;* PROCEDURE / DATABASE_PROCEDURE - A database stored procedure.
&#x9;(XML procedures)
&#x9;* PROCEDURE / BASIC_TRANSFORM_PROCEDURE - A Composite Basic XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / XSLT_TRANSFORM_PROCEDURE - A Composite XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / STREAM_TRANSFORM_PROCEDURE - A Composite XSLT Streaming Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / XQUERY_TRANSFORM_PROCEDURE - A Composite XQUERY Transformation Procedure.  Created with no target schema and no model, so it is not runnable.
&#x9;(Misc procedures)
&#x9;* PROCEDURE / OPERATION_PROCEDURE - A Composite web service or HTTP procedure operation.

&#x9;* TABLE / SQL_TABLE - A Composite View.  Created with no SQL text or model, so it is not runnable.  
&#x9;* TABLE / DATABASE_TABLE - A Composite database table.
&#x9;* TABLE / DELIMITED_FILE_TABLE - A Composite delimited file table
&#x9;* TABLE / SYSTEM_TABLE - A Composite system table view.

&#x9;* TREE / XML_FILE_TREE - The XML tree structure associated with a file-XML data source.

&#x9;* TRIGGER / NONE - A Composite trigger.   Created disabled.]]></annotation>
  <parameters>
    <parameter name="resourcePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="inSubType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="scriptText" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/Delta_DV/&quot;_scripts&quot;/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/_debug" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/lowerLevelProcedures/getBasicResourceXML" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/Delta_DV/&quot;_scripts&quot;/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceResponse" direction="OUT">
        <datatype name="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="257"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/xml/getValueFromXML" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="namespaces" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="inXpath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="inXml" direction="IN">
        <datatype name="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="257"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="outValue" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/xml/unescapeXML" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inStr" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="outStr" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* getScriptText:
&#x9;-- CIS Repository Helper Procedure --
&#x9;This procedure returns the script text for a procedure or view.  This allows a program to get the text modify
&#x9;the text and then use another procedure to update the procedure.
 
&#x9;The following resource types and sub-types are supported:
&#x9;&#x9;resourceType = &apos;PROCEDURE&apos;
&#x9;&#x9;&#x9;subtype = &apos;SQL_SCRIPT_PROCEDURE&apos; -- Get Regular Procedure
&#x9;&#x9;&#x9;subtype = &apos;EXTERNAL_SQL_PROCEDURE&apos; -- Get Packaged Query Procedure
&#x9;&#x9;&#x9;subtype = &apos;XSLT_TRANSFORM_PROCEDURE&apos; -- Get XSLT Transformation text
&#x9;&#x9;&#x9;subtype = &apos;XQUERY_TRANSFORM_PROCEDURE&apos; -- Get XQuery Transformation text

&#x9;&#x9;resourceType = &apos;TABLE&apos;
&#x9;&#x9;&#x9;subtype = &apos;SQL_TABLE&apos; -- Get Regular View

&#x9;Input:
&#x9;&#x9;fullResourcePath - Full resource path which includes the path and the resource name  
&#x9;&#x9;&#x9;Values: e.g. /shared/Utilities/repository/examples/source/proc2
&#x9;&#x9;resourceType - Type of CIS resource to be created
&#x9;&#x9;&#x9;Values: see &quot;TYPES / SUBTYPES&quot; listing below.  e.g. PROCEDURE
&#x9;&#x9;inSubType - Subtype of CIS resource to be created (optional)
&#x9;&#x9;&#x9;Values: see &quot;TYPES / SUBTYPES&quot; listing below.  e.g. SQL_SCRIPT_PROCEDURE
&#x9;&#x9;&#x9;Note:  A lookup is now performed on each resource to get the sub-type therefore
&#x9;&#x9;&#x9;&#x9;&#x9;this parameter is being left here for backwards compatibility.
&#x9;Output:
&#x9;&#x9;scriptText - contains the text of the script
&#x9;&#x9;&#x9;Values: script text value.  e.g. PROCEDURE proc2() BEGIN END
&#x9;Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2010.3&#x9;&#x9;8/2/2010&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.1.0&#x9;&#x9;&#x9;Created new.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.


&#x9;TYPES / SUBTYPES:
&#x9;=================
&#x9;The following resource types/subtypes are supported by this operation.  Resources
&#x9;cannot be created under &quot;/services&quot; unless otherwise noted, and cannot be created
&#x9;within a physical data source.  

&#x9;(Basic CIS folder)
&#x9;* CONTAINER / FOLDER_CONTAINER - A Composite folder.   Cannot be created anywhere under /services except in another FOLDER under /services/webservices.
&#x9;* CONTAINER / DIRECTORY_CONTAINER - A Composite directory.
&#x9;(Database)
&#x9;* CONTAINER / CATALOG_CONTAINER - A Composite catalog folder under a data source.  Can only be created within a data source under /services/databases.
&#x9;* CONTAINER / SCHEMA_CONTAINER - A Composite schema container.  Can only be created within a CATALOG that is under /services/databases.
&#x9;(Web Services)
&#x9;* CONTAINER / SERVICE_CONTAINER - A web service container for the service.  Can only be created within a Composite Web Services data source that is under /services/webservices.
&#x9;* CONTAINER / OPERATIONS_CONTAINER - A web service container for the operations
&#x9;* CONTAINER / PORT_CONTAINER - A Composite web service container for port.   Can only be created within a SERVICE under /services/webservices.
&#x9;(Connectors)
&#x9;* CONTAINER / CONNECTOR_CONTAINER - A Composite container for connectors.

&#x9;* CONNECTOR / JMS - A Composite JMS Connector.  Created with no connection information
&#x9;* CONNECTOR / HTTP - A Composite HTTP Connector.  Created with no connection information

&#x9;* DATA_SOURCE / RELATIONAL_DATA_SOURCE - A relational database source.
&#x9;* DATA_SOURCE / FILE_DATA_SOURCE - A comma separate file data source.
&#x9;* DATA_SOURCE / XML_FILE_DATA_SOURCE - An XML file data source.
&#x9;* DATA_SOURCE / WSDL_DATA_SOURCE - A Composite web service data source.
&#x9;* DATA_SOURCE / XML_HTTP_DATA_SOURCE - An HTTP XML data source.
&#x9;* DATA_SOURCE / NONE - A custom java procedure data source.

&#x9;* DEFINITION_SET / SQL_DEFINITION_SET - A Composite SQL Definition set.
&#x9;* DEFINITION_SET / XML_SCHEMA_DEFINITION_SET - A Composite XML Schema Defintion set.
&#x9;* DEFINITION_SET / WSDL_DEFINITION_SET - A Composite WSDL Definition set.
&#x9;* DEFINITION_SET / ABSTRACT_WSDL_DEFINITION_SET - A Composite Abstract WSDL Definition set such as the ones imported from Designer.
&#x9;* DEFINITION_SET / SCDL_DEFINITION_SET - A Composite SCA composite Definition set imported from Designer.

&#x9;* LINK / unknown at this time

&#x9;(CIS procedures)
&#x9;* PROCEDURE / SQL_SCRIPT_PROCEDURE - A Composite SQL Procedure.  Created with a simple default script body that is runnable.
&#x9;(Custom procedures)
&#x9;* PROCEDURE / JAVA_PROCEDURE - A Composite java data source procedure.  Created from a java data source (jar file).
&#x9;(Database procedures)
&#x9;* PROCEDURE / EXTERNAL_SQL_PROCEDURE - A Composite Packaged Query.  Created with no SQL text, so it is not runnable.  
&#x9;* PROCEDURE / DATABASE_PROCEDURE - A database stored procedure.
&#x9;(XML procedures)
&#x9;* PROCEDURE / BASIC_TRANSFORM_PROCEDURE - A Composite Basic XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / XSLT_TRANSFORM_PROCEDURE - A Composite XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / STREAM_TRANSFORM_PROCEDURE - A Composite XSLT Streaming Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / XQUERY_TRANSFORM_PROCEDURE - A Composite XQUERY Transformation Procedure.  Created with no target schema and no model, so it is not runnable.
&#x9;(Misc procedures)
&#x9;* PROCEDURE / OPERATION_PROCEDURE - A Composite web service or HTTP procedure operation.

&#x9;* TABLE / SQL_TABLE - A Composite View.  Created with no SQL text or model, so it is not runnable.  
&#x9;* TABLE / DATABASE_TABLE - A Composite database table.
&#x9;* TABLE / DELIMITED_FILE_TABLE - A Composite delimited file table
&#x9;* TABLE / SYSTEM_TABLE - A Composite system table view.

&#x9;* TREE / XML_FILE_TREE - The XML tree structure associated with a file-XML data source.

&#x9;* TRIGGER / NONE - A Composite trigger.   Created disabled.
*/
PROCEDURE getScriptText(
    IN resourcePath &#x9;VARCHAR(4096), 
&#x9;IN resourceType&#x9;&#x9;VARCHAR(255), -- PROCEDURE
&#x9;IN inSubType&#x9;&#x9;VARCHAR(255), -- SQL_SCRIPT_PROCEDURE
&#x9;OUT scriptText &#x9;&#x9;LONGVARCHAR
)
BEGIN
&#x9;DECLARE moduleName&#x9;VARCHAR(255) DEFAULT &apos;getScriptText()&apos;;
&#x9;DECLARE debug&#x9;&#x9;CHAR(1) DEFAULT /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/&quot;_debug&quot;.debug;
&#x9;DECLARE xmlOut&#x9;&#x9;XML;
&#x9;DECLARE xmlTemp&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE namespaces&#x9;VARCHAR(255) DEFAULT &apos;xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot;&apos;;
&#x9;DECLARE xpath&#x9;&#x9;VARCHAR(1024);
&#x9;DECLARE subtype&#x9;&#x9;VARCHAR(255);

&#x9;-- Retrieve the resource XML
&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/lowerLevelProcedures/getBasicResourceXML(resourcePath, resourceType, xmlOut);
&#x9;set xmlTemp = CAST(xmlOut as LONGVARCHAR);
&#x9;if (UPPER(debug) = &apos;Y&apos;) then
&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/log/logDebugMessage(moduleName, debug, xmlTemp);
&#x9;end if;

&#x9;-- Retrieve the subtype if it is not provided
&#x9;if (inSubType is null or inSubType = &apos;&apos;) then
&#x9;&#x9;set xpath = &apos;/resource:getResourceResponse/resource:resources/resource:resource/resource:subtype&apos;;
&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/&quot;xml&quot;/getValueFromXML(debug, namespaces, xpath, xmlTemp, subtype);
&#x9;else
&#x9;&#x9;set subtype = inSubType;
&#x9;end if;

&#x9;-- Initialize result
&#x9;set scriptText = null;

&#x9;case UPPER(resourceType)
&#x9;&#x9;when &apos;PROCEDURE&apos; then
&#x9;&#x9;&#x9;-- Get Regular Procedure
&#x9;&#x9;&#x9;if (subtype = &apos;SQL_SCRIPT_PROCEDURE&apos;) then
&#x9;&#x9;&#x9;&#x9;set xpath = &apos;/resource:getResourceResponse/resource:resources/resource:resource/resource:scriptText&apos;;
&#x9;&#x9;&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/&quot;xml&quot;/getValueFromXML(debug, namespaces, xpath, xmlTemp, scriptText);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;-- Get Packaged Query Procedure
&#x9;&#x9;&#x9;if (subtype = &apos;EXTERNAL_SQL_PROCEDURE&apos;) then
&#x9;&#x9;&#x9;&#x9;set xpath = &apos;/resource:getResourceResponse/resource:resources/resource:resource/resource:externalSqlText&apos;;
&#x9;&#x9;&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/&quot;xml&quot;/getValueFromXML(debug, namespaces, xpath, xmlTemp, scriptText);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;-- Get XSLT Transformation text
&#x9;&#x9;&#x9;if (subtype = &apos;XSLT_TRANSFORM_PROCEDURE&apos;) then
&#x9;&#x9;&#x9;&#x9;set xpath = &apos;/resource:getResourceResponse/resource:resources/resource:resource/resource:xsltText&apos;;
&#x9;&#x9;&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/&quot;xml&quot;/getValueFromXML(debug, namespaces, xpath, xmlTemp, scriptText);
&#x9;&#x9;&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/&quot;xml&quot;/unescapeXML(scriptText, scriptText);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;-- Get XQuery Transformation text
&#x9;&#x9;&#x9;if (subtype = &apos;XQUERY_TRANSFORM_PROCEDURE&apos;) then
&#x9;&#x9;&#x9;&#x9;set xpath = &apos;/resource:getResourceResponse/resource:resources/resource:resource/resource:xqueryText&apos;;
&#x9;&#x9;&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/&quot;xml&quot;/getValueFromXML(debug, namespaces, xpath, xmlTemp, scriptText);
&#x9;&#x9;&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/&quot;xml&quot;/unescapeXML(scriptText, scriptText);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;when &apos;TABLE&apos; then
&#x9;&#x9;&#x9;-- Get Regular View
&#x9;&#x9;&#x9;if (subtype = &apos;SQL_TABLE&apos;) then
&#x9;&#x9;&#x9;&#x9;set xpath = &apos;/resource:getResourceResponse/resource:resources/resource:resource/resource:sqlText&apos;;
&#x9;&#x9;&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/&quot;xml&quot;/getValueFromXML(debug, namespaces, xpath, xmlTemp, scriptText);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;else
&#x9;&#x9;&#x9;set scriptText = null;
&#x9;end case;

&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/&quot;xml&quot;/unescapeXML(scriptText, scriptText);

&#x9;if (UPPER(debug) = &apos;Y&apos;) then
&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/log/logDebugMessage(moduleName, debug, scriptText);
&#x9;end if;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609965948495</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>