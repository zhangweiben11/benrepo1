<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="rebindResource" path="/shared/Delta_DV/_scripts/Utilities/repository/rebindResource" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[rebindResource:

&#x9;-- CIS Repository Helper Procedure --
&#x9;This procedure provides the capability to rebind the resources inside of the requested resource.  
&#x9;For example, if a View points to a data source table, you may want to rebind to a different data source
&#x9;that has the same structure.  This may be useful when redeploying from Dev to Test to Production or
&#x9;simply rebinding to a different development instance of the database.

 
&#x9;Input:
&#x9;&#x9;resourcePath - Full resource path which includes the path and the resource name  
&#x9;&#x9;&#x9;Values: e.g. /shared/Utilities/repository/examples/source/PRODUCT_VIEW

&#x9;&#x9;resourceType - Type of CIS resource to be created
&#x9;&#x9;&#x9;Values: see &quot;TYPES / SUBTYPES&quot; listing below.  e.g. TABLE

&#x9;&#x9;rebindVector - a vector that provides the rules for rebinding each of the associate resources
&#x9;&#x9;&#x9;within the given resource.
&#x9;&#x9;&#x9;VECTOR (rebindRow ROW (
&#x9;&#x9;&#x9;&#x9;oldPath&#x9;&#x9;TypeDefinitions.pathType,
&#x9;&#x9;&#x9;&#x9;oldType&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;&#x9;newPath&#x9;&#x9;TypeDefinitions.pathType,
&#x9;&#x9;&#x9;&#x9;newType&#x9;&#x9;VARCHAR(255)
&#x9;&#x9;&#x9;));
&#x9;&#x9;&#x9;Values: example:  rebind a data source resource from /shared/examples... to /shared/Utilities...
&#x9;&#x9;&#x9;&#x9;(&apos;/shared/examples/ds_inventory/products&apos;, &#x9;&#x9;&#x9;&#x9;
&#x9;&#x9;&#x9;&#x9;&apos;TABLE&apos;,
&#x9;&#x9;&#x9;&#x9;&apos;/shared/Utilities/repository/examples/source/ds_inventory/products&apos;,&#x9;
&#x9;&#x9;&#x9;&#x9;&apos;TABLE&apos; )


&#x9;Output:
&#x9;&#x9;success&#x9;- true(1) or false(0)
&#x9;&#x9;&#x9;Values: 1 or 0

&#x9;&#x9;createResponse - XML response representing what was created.
&#x9;&#x9;&#x9;Values: Create Response XML value

&#x9;&#x9;faultResponse - null if succesful otherwise contains a fault resposne.
&#x9;&#x9;&#x9;Values: Fault Resposne XML value


&#x9;Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2013.2&#x9;&#x9;04/25/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;create new
&#x9;2018.100&#x9;03/01/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Replaced /shared/ASAssets/Utilities/repository/resourceExists with /lib/resource/ResourceExists
&#x9;2019.200&#x9;05/22/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Consolidated

    (c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.



&#x9;TYPES / SUBTYPES:
&#x9;=================
&#x9;The following resource types/subtypes are supported by this operation.  Resources
&#x9;cannot be created under &quot;/services&quot; unless otherwise noted, and cannot be created
&#x9;within a physical data source.  

&#x9;(Basic CIS folder)
&#x9;* CONTAINER / FOLDER_CONTAINER - A Composite folder.   Cannot be created anywhere under /services except in another FOLDER under /services/webservices.
&#x9;* CONTAINER / DIRECTORY_CONTAINER - A Composite directory.
&#x9;(Database)
&#x9;* CONTAINER / CATALOG_CONTAINER - A Composite catalog folder under a data source.  Can only be created within a data source under /services/databases.
&#x9;* CONTAINER / SCHEMA_CONTAINER - A Composite schema container.  Can only be created within a CATALOG that is under /services/databases.
&#x9;(Web Services)
&#x9;* CONTAINER / SERVICE_CONTAINER - A web service container for the service.  Can only be created within a Composite Web Services data source that is under /services/webservices.
&#x9;* CONTAINER / OPERATIONS_CONTAINER - A web service container for the operations
&#x9;* CONTAINER / PORT_CONTAINER - A Composite web service container for port.   Can only be created within a SERVICE under /services/webservices.
&#x9;(Connectors)
&#x9;* CONTAINER / CONNECTOR_CONTAINER - A Composite container for connectors.

&#x9;* CONNECTOR / JMS - A Composite JMS Connector.  Created with no connection information
&#x9;* CONNECTOR / HTTP - A Composite HTTP Connector.  Created with no connection information

&#x9;* DATA_SOURCE / RELATIONAL_DATA_SOURCE - A relational database source.
&#x9;* DATA_SOURCE / FILE_DATA_SOURCE - A comma separate file data source.
&#x9;* DATA_SOURCE / XML_FILE_DATA_SOURCE - An XML file data source.
&#x9;* DATA_SOURCE / WSDL_DATA_SOURCE - A Composite web service data source.
&#x9;* DATA_SOURCE / XML_HTTP_DATA_SOURCE - An HTTP XML data source.
&#x9;* DATA_SOURCE / NONE - A custom java procedure data source.

&#x9;* DEFINITION_SET / SQL_DEFINITION_SET - A Composite SQL Definition set.
&#x9;* DEFINITION_SET / XML_SCHEMA_DEFINITION_SET - A Composite XML Schema Defintion set.
&#x9;* DEFINITION_SET / WSDL_DEFINITION_SET - A Composite WSDL Definition set.
&#x9;* DEFINITION_SET / ABSTRACT_WSDL_DEFINITION_SET - A Composite Abstract WSDL Definition set such as the ones imported from Designer.
&#x9;* DEFINITION_SET / SCDL_DEFINITION_SET - A Composite SCA composite Definition set imported from Designer.

&#x9;* LINK / unknown at this time

&#x9;(CIS procedures)
&#x9;* PROCEDURE / SQL_SCRIPT_PROCEDURE - A Composite SQL Procedure.  Created with a simple default script body that is runnable.
&#x9;(Custom procedures)
&#x9;* PROCEDURE / JAVA_PROCEDURE - A Composite java data source procedure.  Created from a java data source (jar file).
&#x9;(Database procedures)
&#x9;* PROCEDURE / EXTERNAL_SQL_PROCEDURE - A Composite Packaged Query.  Created with no SQL text, so it is not runnable.  
&#x9;* PROCEDURE / DATABASE_PROCEDURE - A database stored procedure.
&#x9;(XML procedures)
&#x9;* PROCEDURE / BASIC_TRANSFORM_PROCEDURE - A Composite Basic XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / XSLT_TRANSFORM_PROCEDURE - A Composite XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / STREAM_TRANSFORM_PROCEDURE - A Composite XSLT Streaming Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / XQUERY_TRANSFORM_PROCEDURE - A Composite XQUERY Transformation Procedure.  Created with no target schema and no model, so it is not runnable.
&#x9;(Misc procedures)
&#x9;* PROCEDURE / OPERATION_PROCEDURE - A Composite web service or HTTP procedure operation.

&#x9;* TABLE / SQL_TABLE - A Composite View.  Created with no SQL text or model, so it is not runnable.  
&#x9;* TABLE / DATABASE_TABLE - A Composite database table.
&#x9;* TABLE / DELIMITED_FILE_TABLE - A Composite delimited file table
&#x9;* TABLE / SYSTEM_TABLE - A Composite system table view.

&#x9;* TREE / XML_FILE_TREE - The XML tree structure associated with a file-XML data source.

&#x9;* TRIGGER / NONE - A Composite trigger.   Created disabled.]]></annotation>
  <parameters>
    <parameter name="resourcePath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="rebindVector" direction="IN" nullable="true">
      <datatype name="rebindVector" type="ARRAY">
        <itemDatatype>
          <datatype name="rebindVector" type="TREE" refId="257">
            <element name="oldPath">
              <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
            </element>
            <element name="oldType">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="newPath">
              <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
            </element>
            <element name="newType">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
          </datatype>
        </itemDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="success" direction="OUT" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="createResponse" direction="OUT" nullable="true">
      <datatype name="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
        <schemaDatatype>
          <datatype name="XML" type="TREE" refId="257"></datatype>
        </schemaDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed</attribute>
    </parameter>
    <parameter name="faultResponse" direction="OUT" nullable="true">
      <datatype name="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
        <schemaDatatype>
          <datatype name="XML" type="TREE" refId="257"></datatype>
        </schemaDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed</attribute>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/resource/operations/rebindResources" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="rebindResources" direction="IN">
        <datatype name="rebindResources" extendedName="{http://www.compositesw.com/services/system/admin/resource}rebindResources" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}rebindResources" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}rebindResources">
          <schemaDatatype>
            <datatype name="rebindResources" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="rebindResourcesRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="257">
              <element name="entries" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="513">
                  <element name="entry" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="pathTypePair" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="769">
                      <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
              <element name="rebindRules" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="rebindRuleList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1025">
                  <element name="rebindRule" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="rebindRule" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1281">
                      <element name="oldPath" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="oldType" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="newPath" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="newType" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="rebindResourcesResponse" direction="OUT">
        <datatype name="rebindResourcesResponse" extendedName="{http://www.compositesw.com/services/system/admin/resource}rebindResourcesResponse" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}rebindResourcesResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}rebindResourcesResponse">
          <schemaDatatype>
            <datatype name="rebindResourcesResponse" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="rebindResourcesResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="1537"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="1793">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="2049">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/Delta_DV/&quot;_scripts&quot;/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/_debug" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/rebind/rebindReplaceText" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="resourcePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="fromFolder" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="toFolder" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/returnFolderNameAndFolderPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="fullResourcePath" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="mode" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="folderName" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="folderPath" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
&#x9;rebindResource:

&#x9;-- CIS Repository Helper Procedure --
&#x9;This procedure provides the capability to rebind the resources inside of the requested resource.  
&#x9;For example, if a View points to a data source table, you may want to rebind to a different data source
&#x9;that has the same strucutre.  This may be useful when redeploying from Dev to Test to Production or
&#x9;simply rebinding to a different development instance of the database.

&#x9;Input:
&#x9;&#x9;resourcePath - Full resource path which includes the path and the resource name  
&#x9;&#x9;&#x9;Values: e.g. /shared/Utilities/repository/examples/source/PRODUCT_VIEW

&#x9;&#x9;resourceType - Type of CIS resource to be created
&#x9;&#x9;&#x9;Values: see &quot;TYPES / SUBTYPES&quot; listing below.  e.g. TABLE

&#x9;&#x9;rebindVector - a vector that provides the rules for rebinding each of the associate resources
&#x9;&#x9;&#x9;within the given resource.
&#x9;&#x9;&#x9;VECTOR (rebindRow ROW (
&#x9;&#x9;&#x9;&#x9;oldPath&#x9;&#x9;TypeDefinitions.pathType,
&#x9;&#x9;&#x9;&#x9;oldType&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;&#x9;newPath&#x9;&#x9;TypeDefinitions.pathType,
&#x9;&#x9;&#x9;&#x9;newType&#x9;&#x9;VARCHAR(255)
&#x9;&#x9;&#x9;));
&#x9;&#x9;&#x9;Values: example:  rebind a data source resource from /shared/examples... to /shared/Utilities...
&#x9;&#x9;&#x9;&#x9;(&apos;/shared/examples/ds_inventory/products&apos;, &#x9;&#x9;&#x9;&#x9;
&#x9;&#x9;&#x9;&#x9;&apos;TABLE&apos;,
&#x9;&#x9;&#x9;&#x9;&apos;/shared/Utilities/repository/examples/source/ds_inventory/products&apos;,&#x9;
&#x9;&#x9;&#x9;&#x9;&apos;TABLE&apos; )

&#x9;Output:
&#x9;&#x9;success&#x9;- true(1) or false(0)
&#x9;&#x9;&#x9;Values: 1 or 0

&#x9;&#x9;createResponse - XML response representing what was created.
&#x9;&#x9;&#x9;Values: Create Response XML value

&#x9;&#x9;faultResponse - null if succesful otherwise contains a fault resposne.
&#x9;&#x9;&#x9;Values: Fault Resposne XML value

&#x9;Exceptions:
        System.SOAPFaultException - thrown if there is a fault

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2013.2&#x9;&#x9;04/25/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;create new
&#x9;2018.100&#x9;03/01/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Replaced /shared/ASAssets/Utilities/repository/resourceExists with /lib/resource/ResourceExists
&#x9;2019.200&#x9;05/22/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Consolidated

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

&#x9;TYPES / SUBTYPES:
&#x9;=================
&#x9;The following resource types/subtypes are supported by this operation.  Resources
&#x9;cannot be created under &quot;/services&quot; unless otherwise noted, and cannot be created
&#x9;within a physical data source.  

&#x9;(Basic CIS folder)
&#x9;* CONTAINER / FOLDER_CONTAINER - A Composite folder.   Cannot be created anywhere under /services except in another FOLDER under /services/webservices.
&#x9;* CONTAINER / DIRECTORY_CONTAINER - A Composite directory.
&#x9;(Database)
&#x9;* CONTAINER / CATALOG_CONTAINER - A Composite catalog folder under a data source.  Can only be created within a data source under /services/databases.
&#x9;* CONTAINER / SCHEMA_CONTAINER - A Composite schema container.  Can only be created within a CATALOG that is under /services/databases.
&#x9;(Web Services)
&#x9;* CONTAINER / SERVICE_CONTAINER - A web service container for the service.  Can only be created within a Composite Web Services data source that is under /services/webservices.
&#x9;* CONTAINER / OPERATIONS_CONTAINER - A web service container for the operations
&#x9;* CONTAINER / PORT_CONTAINER - A Composite web service container for port.   Can only be created within a SERVICE under /services/webservices.
&#x9;(Connectors)
&#x9;* CONTAINER / CONNECTOR_CONTAINER - A Composite container for connectors.

&#x9;* CONNECTOR / JMS - A Composite JMS Connector.  Created with no connection information
&#x9;* CONNECTOR / HTTP - A Composite HTTP Connector.  Created with no connection information

&#x9;* DATA_SOURCE / RELATIONAL_DATA_SOURCE - A relational database source.
&#x9;* DATA_SOURCE / FILE_DATA_SOURCE - A comma separate file data source.
&#x9;* DATA_SOURCE / XML_FILE_DATA_SOURCE - An XML file data source.
&#x9;* DATA_SOURCE / WSDL_DATA_SOURCE - A Composite web service data source.
&#x9;* DATA_SOURCE / XML_HTTP_DATA_SOURCE - An HTTP XML data source.
&#x9;* DATA_SOURCE / NONE - A custom java procedure data source.

&#x9;* DEFINITION_SET / SQL_DEFINITION_SET - A Composite SQL Definition set.
&#x9;* DEFINITION_SET / XML_SCHEMA_DEFINITION_SET - A Composite XML Schema Defintion set.
&#x9;* DEFINITION_SET / WSDL_DEFINITION_SET - A Composite WSDL Definition set.
&#x9;* DEFINITION_SET / ABSTRACT_WSDL_DEFINITION_SET - A Composite Abstract WSDL Definition set such as the ones imported from Designer.
&#x9;* DEFINITION_SET / SCDL_DEFINITION_SET - A Composite SCA composite Definition set imported from Designer.

&#x9;* LINK / unknown at this time

&#x9;(CIS procedures)
&#x9;* PROCEDURE / SQL_SCRIPT_PROCEDURE - A Composite SQL Procedure.  Created with a simple default script body that is runnable.
&#x9;(Custom procedures)
&#x9;* PROCEDURE / JAVA_PROCEDURE - A Composite java data source procedure.  Created from a java data source (jar file).
&#x9;(Database procedures)
&#x9;* PROCEDURE / EXTERNAL_SQL_PROCEDURE - A Composite Packaged Query.  Created with no SQL text, so it is not runnable.  
&#x9;* PROCEDURE / DATABASE_PROCEDURE - A database stored procedure.
&#x9;(XML procedures)
&#x9;* PROCEDURE / BASIC_TRANSFORM_PROCEDURE - A Composite Basic XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / XSLT_TRANSFORM_PROCEDURE - A Composite XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / STREAM_TRANSFORM_PROCEDURE - A Composite XSLT Streaming Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
&#x9;* PROCEDURE / XQUERY_TRANSFORM_PROCEDURE - A Composite XQUERY Transformation Procedure.  Created with no target schema and no model, so it is not runnable.
&#x9;(Misc procedures)
&#x9;* PROCEDURE / OPERATION_PROCEDURE - A Composite web service or HTTP procedure operation.

&#x9;* TABLE / SQL_TABLE - A Composite View.  Created with no SQL text or model, so it is not runnable.  
&#x9;* TABLE / DATABASE_TABLE - A Composite database table.
&#x9;* TABLE / DELIMITED_FILE_TABLE - A Composite delimited file table
&#x9;* TABLE / SYSTEM_TABLE - A Composite system table view.

&#x9;* TREE / XML_FILE_TREE - The XML tree structure associated with a file-XML data source.

&#x9;* TRIGGER / NONE - A Composite trigger.   Created disabled.
*/
PROCEDURE rebindResource(
&#x9;IN resourcePath&#x9;&#x9;&#x9;LONGVARCHAR, &#x9;-- full folder path of the resource requiring a rebind of it&apos;s sources.
&#x9;IN resourceType&#x9;&#x9;&#x9;VARCHAR,
&#x9;IN rebindVector &#x9;&#x9;VECTOR(
&#x9;&#x9;ROW (
&#x9;&#x9;oldPath&#x9;&#x9;&#x9;&#x9;LONGVARCHAR,
&#x9;&#x9;oldType&#x9;&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;newPath&#x9;&#x9;&#x9;&#x9;LONGVARCHAR,
&#x9;&#x9;newType&#x9;&#x9;&#x9;&#x9;VARCHAR(255))
&#x9;),&#x9;
&#x9;OUT success&#x9;&#x9;&#x9;&#x9;BIT,
&#x9;OUT createResponse &#x9;&#x9;XML,
&#x9;OUT faultResponse&#x9;&#x9;XML
)
BEGIN
&#x9;DECLARE debug&#x9;&#x9;&#x9;&#x9;CHAR(1) DEFAULT /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/&quot;_debug&quot;.debug;
&#x9;DECLARE moduleName      &#x9;VARCHAR DEFAULT &apos;rebindResource&apos;;
&#x9;DECLARE createInput &#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE rebindRules &#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE i&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE rebindFromFolder &#x9;LONGVARCHAR;
&#x9;DECLARE rebindToFolder&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE tempName&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE resourceExists &#x9;&#x9;BOOLEAN;
&#x9;DECLARE allPathsExist&#x9;&#x9;BOOLEAN DEFAULT true;

&#x9;set success = 0;
&#x9;call /lib/resource/ResourceExists(resourcePath, resourceType, null, resourceExists);
&#x9;if (resourceExists) then

&#x9;&#x9;-- Validate that all rebind paths for old and new exist.
&#x9;&#x9;set i = 1;
&#x9;&#x9;rebindLoop:
&#x9;&#x9;WHILE (i &lt;= CARDINALITY(rebindVector)) DO
&#x9;&#x9;&#x9;-- If both the old resource path and the new resource path exist then this is a &quot;rebindable&quot; resource
&#x9;&#x9;&#x9;call /lib/resource/ResourceExists(rebindVector[i].oldPath, rebindVector[i].oldType, null, resourceExists);
&#x9;&#x9;&#x9;if (resourceExists) then
&#x9;&#x9;&#x9;&#x9;call /lib/resource/ResourceExists(rebindVector[i].newPath, rebindVector[i].newType, null, resourceExists);
&#x9;&#x9;&#x9;&#x9;if (not resourceExists) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise System.NotFoundException value &apos;The target &quot;new path&quot;=[&apos;||NVL(rebindVector[i].newPath,&apos;null&apos;)||&apos;] and &quot;new type&quot;=[&apos;||NVL(rebindVector[i].newType,&apos;null&apos;)||&apos;] does not exist.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/log/logDebugMessage(moduleName, debug, &apos;Old Path does not exist:&apos;||CHR(10)||NVL(rebindVector[i].oldPath,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;set allPathsExist = false;
&#x9;&#x9;&#x9;&#x9;leave rebindLoop;
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;set i = i + 1;
&#x9;&#x9;END WHILE;

&#x9;&#x9;if (allPathsExist and rebindVector is not null and CARDINALITY(rebindVector) &gt; 0) then

&#x9;&#x9;&#x9;set i = 1;
&#x9;&#x9;&#x9;set rebindRules = &apos;&apos;;
&#x9;&#x9;&#x9;while (i &lt;= CARDINALITY(rebindVector)) do
&#x9;&#x9;&#x9;&#x9;set rebindRules = rebindRules || 
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&lt;resource:rebindRule&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;    &lt;resource:oldPath&gt;&apos;|| CAST(XMLTEXT(REPLACE(rebindVector[i].oldPath, &apos;&quot;&apos;, &apos;&apos;)) AS LONGVARCHAR) ||&apos;&lt;/resource:oldPath&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;    &lt;resource:oldType&gt;&apos;|| CAST(XMLTEXT(REPLACE(rebindVector[i].oldType, &apos;&quot;&apos;, &apos;&apos;)) AS LONGVARCHAR) ||&apos;&lt;/resource:oldType&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;    &lt;resource:newPath&gt;&apos;|| CAST(XMLTEXT(REPLACE(rebindVector[i].newPath, &apos;&quot;&apos;, &apos;&apos;)) AS LONGVARCHAR) ||&apos;&lt;/resource:newPath&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;    &lt;resource:newType&gt;&apos;|| CAST(XMLTEXT(REPLACE(rebindVector[i].newType, &apos;&quot;&apos;, &apos;&apos;)) AS LONGVARCHAR) ||&apos;&lt;/resource:newType&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&lt;/resource:rebindRule&gt;&apos;||CHR(10);
&#x9;&#x9;&#x9;&#x9;set i = i + 1;
&#x9;&#x9;&#x9;end while;

&#x9;&#x9;&#x9;if (rebindRules IS NOT NULL AND LENGTH(rebindRules) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;set createInput = 
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&lt;resource:rebindResources &apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;    xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;    xmlns:ns1=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;    &lt;resource:entries&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;        &lt;resource:entry&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;           &lt;resource:path&gt;&apos; || CAST(XMLTEXT(REPLACE(resourcePath, &apos;&quot;&apos;, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;           &lt;resource:type&gt;&apos; || resourceType || &apos;&lt;/resource:type&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;       &lt;/resource:entry&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;    &lt;/resource:entries&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;    &lt;resource:rebindRules&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;rebindRules || 
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;    &lt;/resource:rebindRules&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&lt;/resource:rebindResources&gt;&apos;;

&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/log/logDebugMessage(moduleName, debug, &apos;INVOKE API rebindResources()  createInput:&apos;||CHR(10)||NVL(createInput,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;end if;

&#x9;&#x9;&#x9;&#x9;-- Invoke the API to rebind resources
&#x9;&#x9;&#x9;&#x9;Call /services/webservices/system/admin/resource/operations/rebindResources(createInput, createResponse, faultResponse);
&#x9;&#x9;&#x9;&#x9;if (faultResponse is not null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise System.SOAPFaultException value CAST(faultResponse as LONGVARCHAR);
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;set success = 1;
&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;else
/*****************************
This section rebinds a TABLE or PROCEDURE resource when the original source for the rebind old folder cannot be found.
*******************************/
&#x9;&#x9;&#x9;set i = 1;
&#x9;&#x9;&#x9;while (i &lt;= CARDINALITY(rebindVector)) do
&#x9;&#x9;&#x9;&#x9;set success = 1;

&#x9;&#x9;&#x9;&#x9;-- Get the old folder path only from the actual path
&#x9;&#x9;&#x9;&#x9;if (rebindVector[i].oldType = &apos;DATA_SOURCE&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;set rebindFromFolder = rebindVector[i].oldPath;
&#x9;&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/returnFolderNameAndFolderPath(rebindVector[i].oldPath, &apos;E&apos;, tempName, rebindFromFolder);
&#x9;&#x9;&#x9;&#x9;end if;

&#x9;&#x9;&#x9;&#x9;-- Get the old folder path only from the actual path
&#x9;&#x9;&#x9;&#x9;if (rebindVector[i].newType = &apos;DATA_SOURCE&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;set rebindToFolder = rebindVector[i].newPath;
&#x9;&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/returnFolderNameAndFolderPath(rebindVector[i].newPath, &apos;E&apos;, tempName, rebindToFolder);
&#x9;&#x9;&#x9;&#x9;end if;

&#x9;&#x9;&#x9;&#x9;-- Invoke the procedure to replace the script text or data source path
&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/log/logDebugMessage(moduleName, debug, &apos;INVOKE rebindReplaceText()&apos;);
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/rebind/rebindReplaceText(resourcePath, resourceType, rebindFromFolder, rebindToFolder, debug, success);

&#x9;&#x9;&#x9;&#x9;set i = i + 1;
&#x9;&#x9;&#x9;end while;
&#x9;&#x9;end if;
&#x9;else
&#x9;&#x9;set success = 0;
&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) then
&#x9;&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/log/logDebugMessage(moduleName, debug, &apos;Resource does not exist.&apos;);
&#x9;&#x9;end if;
    end if;
END
</attribute>
  <attribute name="creationDate" type="LONG">1369417729294</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609965948495</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:2:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:4:Customized" type="STRING">datatype.changed</attribute>
  <attribute name="p:5:Customized" type="STRING">datatype.changed</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">12/165</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">12/215</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
  </attribute>
</metadata>