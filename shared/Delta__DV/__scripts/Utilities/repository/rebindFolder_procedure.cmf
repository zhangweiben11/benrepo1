<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="rebindFolder" path="/shared/Delta_DV/_scripts/Utilities/repository/rebindFolder" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[rebindFolder:

&#x9;-- CIS Repository Helper Procedure --

&#x9;This procedure provides the capability to rebind all the resources in a folder.  For example, if a 
&#x9;&#x9;View points to a data source table, you may want to rebind to a different data source
&#x9;&#x9;that has the same strucutre.  This may be useful when redeploying from Dev to Test to Production
&#x9;&#x9;or simply rebinding to a different development instance of the database.

&#x9;This procedure allows for the possibility of the &quot;rebindFromFolder&quot; to not exist.  This may be the case
&#x9;&#x9;if rebinding resources after deploying from one environment to another where the the name of the
&#x9;&#x9;datasource catalog or schema is different between the environments and the source folder does not
&#x9;&#x9;exist in the target environment.   However, if the user of this procedure simply provides an 
&#x9;&#x9;incorrect &quot;rebindFromFolder&quot;, this procedure will not throw an exception but simply finish 
&#x9;&#x9;successfully with no indication that the folder was incorrect.

&#x9;&#x9;Rules:
&#x9;&#x9;1) If a resource in the folder has both the source and the target sources present, it will
&#x9;&#x9;&#x9;use rebindResource to do an explicit rebind.
&#x9;&#x9;2) If a resource in the folder does not have the source present, it will rebind using explicit
&#x9;&#x9;&#x9;text modification techniques instead of rebindResource.  The following text modification
&#x9;&#x9;&#x9;techniques are supported for the given resource type:
&#x9;&#x9;&#x9;&#x9;resourceType = &apos;TABLE&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;subtype = &apos;SQL_TABLE&apos; -- Regular View not a database table
&#x9;
&#x9;&#x9;&#x9;&#x9;resourceType = &apos;PROCEDURE&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;subtype = &apos;SQL_SCRIPT_PROCEDURE&apos; -- Custom Procedure or Parameterized query
&#x9;&#x9;&#x9;&#x9;&#x9;subtype = &apos;EXTERNAL_SQL_PROCEDURE&apos; -- Packaged Query Procedure
 &#x9;&#x9;&#x9;&#x9;&#x9;subtype = &apos;BASIC_TRANSFORM_PROCEDURE&apos; -- XSLT Basic Transformation definition
&#x9;&#x9;&#x9;&#x9;&#x9;subtype = &apos;XSLT_TRANSFORM_PROCEDURE&apos; -- XSLT Transformation text
&#x9;&#x9;&#x9;&#x9;&#x9;subtype = &apos;STREAM_TRANSFORM_PROCEDURE&apos; -- XSLT Stream Transformation text
&#x9;&#x9;3) if a resource in the folder does not have the target present, that is an error and an exception is raised.

 &#x9;Input:
&#x9;&#x9;startingResourceFolder - Full resource path to the starting folder to begin rebinding
&#x9;&#x9;&#x9;Values: e.g. /shared/Utilities/repository/examples

&#x9;&#x9;rebindFromFolder - The source &quot;used&quot; resource folder to rebind from

&#x9;&#x9;rebindToFolder - The target &quot;used&quot; resource folder to rebind to

&#x9;Output:
&#x9;&#x9;success&#x9;- true(1) or false(0)
&#x9;&#x9;&#x9;Values: 1 or 0

&#x9;&#x9;faultResponse - null if succesful otherwise contains a fault resposne.
&#x9;&#x9;&#x9;Values: Fault Resposne XML value

&#x9;Exceptions:
        N/A

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2013.2&#x9;&#x9;04/24/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new
&#x9;2018.100&#x9;03/01/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Replaced /shared/ASAssets/Utilities/repository/resourceExists with /lib/resource/ResourceExists
&#x9;2019.200&#x9;05/22/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Removed the use of VECTOR.  Consolidated code and eliminated procedure calls to be more efficient.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]></annotation>
  <parameters>
    <parameter name="startingResourceFolder" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="rebindFromFolder" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="rebindToFolder" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="success" direction="OUT" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="faultResponse" direction="OUT" nullable="true">
      <datatype name="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
        <schemaDatatype>
          <datatype name="XML" type="TREE" refId="257"></datatype>
        </schemaDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed</attribute>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/resource/operations/rebindResources" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="rebindResources" direction="IN">
        <datatype name="rebindResources" extendedName="{http://www.compositesw.com/services/system/admin/resource}rebindResources" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}rebindResources" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}rebindResources">
          <schemaDatatype>
            <datatype name="rebindResources" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="rebindResourcesRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="257">
              <element name="entries" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="513">
                  <element name="entry" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="pathTypePair" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="769">
                      <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
              <element name="rebindRules" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="rebindRuleList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1025">
                  <element name="rebindRule" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="rebindRule" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1281">
                      <element name="oldPath" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="oldType" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="newPath" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="newType" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="rebindResourcesResponse" direction="OUT">
        <datatype name="rebindResourcesResponse" extendedName="{http://www.compositesw.com/services/system/admin/resource}rebindResourcesResponse" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}rebindResourcesResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}rebindResourcesResponse">
          <schemaDatatype>
            <datatype name="rebindResourcesResponse" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="rebindResourcesResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="1537"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="1793">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="2049">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/_debug" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/getResourceListRecursive" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="resourcePath" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resPath">
            <datatype type="STRING" maxLength="4096"/>
          </element>
          <element name="resType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="changeid">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="version">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="introspectState">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactLevel">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactMessage">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="explicitlyDesigned">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="isFunction">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="tableType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="sqlText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="scriptText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="proprietaryModel">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="childCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="dataSourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creationDate">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creationDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="creatorUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creatorUserId">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creatorUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedDate">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="lastModifiedUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedUserId">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/getUsedResourcesCursor" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="resourcePath" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="usedResCursor" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="resourceName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resourcePath">
            <datatype type="STRING" maxLength="4096"/>
          </element>
          <element name="resourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="tableType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="explicitlyDesigned">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="sqlText">
            <datatype type="STRING" maxLength="32768"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/rebind/rebindReplaceText" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="resourcePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="fromFolder" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="toFolder" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
    rebindFolder:

&#x9;-- CIS Repository Helper Procedure --

&#x9;This procedure provides the capability to rebind all the resources in a folder.  For example, if a 
&#x9;&#x9;View points to a data source table, you may want to rebind to a different data source
&#x9;&#x9;that has the same strucutre.  This may be useful when redeploying from Dev to Test to Production
&#x9;&#x9;or simply rebinding to a different development instance of the database.

&#x9;This procedure allows for the possibility of the &quot;rebindFromFolder&quot; to not exist.  This may be the case
&#x9;&#x9;if rebinding resources after deploying from one environment to another where the the name of the
&#x9;&#x9;datasource catalog or schema is different between the environments and the source folder does not
&#x9;&#x9;exist in the target environment.   However, if the user of this procedure simply provides an 
&#x9;&#x9;incorrect &quot;rebindFromFolder&quot;, this procedure will not throw an exception but simply finish 
&#x9;&#x9;successfully with no indication that the folder was incorrect.

&#x9;&#x9;Rules:
&#x9;&#x9;1) If a resource in the folder has both the source and the target sources present, it will
&#x9;&#x9;&#x9;use rebindResource to do an explicit rebind.
&#x9;&#x9;2) If a resource in the folder does not have the source present, it will rebind using explicit
&#x9;&#x9;&#x9;text modification techniques instead of rebindResource.  The following text modification
&#x9;&#x9;&#x9;techniques are supported for the given resource type:
&#x9;&#x9;&#x9;&#x9;resourceType = &apos;TABLE&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;subtype = &apos;SQL_TABLE&apos; -- Regular View not a database table
&#x9;
&#x9;&#x9;&#x9;&#x9;resourceType = &apos;PROCEDURE&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;subtype = &apos;SQL_SCRIPT_PROCEDURE&apos; -- Custom Procedure or Parameterized query
&#x9;&#x9;&#x9;&#x9;&#x9;subtype = &apos;EXTERNAL_SQL_PROCEDURE&apos; -- Packaged Query Procedure
 &#x9;&#x9;&#x9;&#x9;&#x9;subtype = &apos;BASIC_TRANSFORM_PROCEDURE&apos; -- XSLT Basic Transformation definition
&#x9;&#x9;&#x9;&#x9;&#x9;subtype = &apos;XSLT_TRANSFORM_PROCEDURE&apos; -- XSLT Transformation text
&#x9;&#x9;&#x9;&#x9;&#x9;subtype = &apos;STREAM_TRANSFORM_PROCEDURE&apos; -- XSLT Stream Transformation text
&#x9;&#x9;3) if a resource in the folder does not have the target present, that is an error and an exception is raised.

 &#x9;Input:
&#x9;&#x9;startingResourceFolder - Full resource path to the starting folder to begin rebinding
&#x9;&#x9;&#x9;Values: e.g. /shared/Utilities/repository/examples

&#x9;&#x9;rebindFromFolder - The source &quot;used&quot; resource folder to rebind from

&#x9;&#x9;rebindToFolder - The target &quot;used&quot; resource folder to rebind to

&#x9;Output:
&#x9;&#x9;success&#x9;- true(1) or false(0)
&#x9;&#x9;&#x9;Values: 1 or 0

&#x9;&#x9;faultResponse - null if succesful otherwise contains a fault resposne.
&#x9;&#x9;&#x9;Values: Fault Resposne XML value

&#x9;Exceptions:
        N/A

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2013.2&#x9;&#x9;04/24/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new
&#x9;2018.100&#x9;03/01/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Replaced /shared/ASAssets/Utilities/repository/resourceExists with /lib/resource/ResourceExists
&#x9;2019.200&#x9;05/22/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Removed the use of VECTOR.  Consolidated code and eliminated procedure calls to be more efficient.
&#x9;2020.201&#x9;05/21/2020&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Fixe a bug where it was rebinding calls to resources that it should not have done.  Needed to init rebindRow.newPath and rebindRow.newType at the beginning of the loop.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE rebindFolder(
&#x9;IN startingResourceFolder &#x9;LONGVARCHAR,
&#x9;IN rebindFromFolder&#x9;&#x9;&#x9;LONGVARCHAR,
&#x9;IN rebindToFolder&#x9;&#x9;&#x9;LONGVARCHAR,
&#x9;OUT success&#x9;&#x9;&#x9;&#x9;&#x9;BIT,
&#x9;OUT faultResponse&#x9;&#x9;&#x9;XML
)
BEGIN
    DECLARE moduleName      &#x9;VARCHAR DEFAULT &apos;rebindFolder&apos;;
&#x9;DECLARE debug&#x9;&#x9;&#x9;&#x9;CHAR(1) DEFAULT /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/&quot;_debug&quot;.debug;
&#x9;DECLARE rebindFromFolder_&#x9;LONGVARCHAR DEFAULT REPLACE(rebindFromFolder,&apos;//&apos;,&apos;/&apos;);
&#x9;DECLARE rebindToFolder_&#x9;&#x9;LONGVARCHAR DEFAULT REPLACE(rebindToFolder,&apos;//&apos;,&apos;/&apos;);
&#x9;DECLARE resourcePath&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE resourceType&#x9;&#x9;VARCHAR;
&#x9;DECLARE resourceExists&#x9;&#x9;BOOLEAN;
&#x9;DECLARE resourcePathRebound&#x9;BOOLEAN;
&#x9;DECLARE subtype&#x9;&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE rebindRules &#x9;&#x9;LONGVARCHAR DEFAULT &apos;&apos;;
&#x9;DECLARE rebindRow &#x9;&#x9;&#x9;ROW (
&#x9;&#x9;oldPath&#x9;&#x9;LONGVARCHAR,
&#x9;&#x9;oldType&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;newPath&#x9;&#x9;LONGVARCHAR,
&#x9;&#x9;newType&#x9;&#x9;VARCHAR(255)
&#x9;);
&#x9;DECLARE i&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE createInput &#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE createResponse &#x9;&#x9;XML;
&#x9;DECLARE success2&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE ex&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION;

&#x9;if (UPPER(debug) = &apos;Y&apos;) then
&#x9;&#x9;call print(moduleName||&apos; : INPUT: startingResourceFolder=&apos;||NVL(startingResourceFolder,&apos;null&apos;));
&#x9;&#x9;call print(moduleName||&apos; : INPUT: rebindFromFolder=&apos;||NVL(rebindFromFolder_,&apos;null&apos;));
&#x9;&#x9;call print(moduleName||&apos; : INPUT: rebindToFolder=&apos;||NVL(rebindToFolder_,&apos;null&apos;)||CHR(10));
&#x9;end if;

&#x9;set success = 1;
&#x9;call /lib/resource/ResourceExists(startingResourceFolder, &apos;CONTAINER&apos;, null, resourceExists);
&#x9;if (resourceExists) then
&#x9;&#x9;-- Get the list of resources recursively contained within the starting resource folder that was passed in.
&#x9;&#x9;FOR r AS 
&#x9;&#x9;&#x9;SELECT * FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/getResourceListRecursive(startingResourceFolder, &apos;CONTAINER&apos;)
&#x9;&#x9;DO
&#x9;&#x9;&#x9;set resourcePath = r.respath;
&#x9;&#x9;&#x9;set resourceType = r.resType;
&#x9;&#x9;&#x9;set subtype = r.subtype;
&#x9;&#x9;&#x9;set rebindRules = &apos;&apos;;
&#x9;&#x9;&#x9;set rebindRow = null;
&#x9;&#x9;&#x9;set resourcePathRebound = false;

&#x9;&#x9;&#x9;-- Determine if the resource exists
&#x9;&#x9;&#x9;call /lib/resource/ResourceExists(resourcePath, resourceType, null, resourceExists);
&#x9;&#x9;&#x9;if (resourceExists) then

&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; : Parent resource to rebind:  resourceType=&apos;||NVL(resourceType,&apos;null&apos;)||&apos;  subtype=&apos;||NVL(subtype,&apos;null&apos;)||&apos;  resourcePath=&apos;||NVL(resourcePath,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;end if;

&#x9;&#x9;&#x9;&#x9;-- BEGIN getRebindableResource and rebindCheckPathExists code combined logic:
&#x9;&#x9;&#x9;&#x9;if (resourceType = &apos;TABLE&apos; or
&#x9;&#x9;&#x9;&#x9;&#x9;resourceType = &apos;PROCEDURE&apos; or
&#x9;&#x9;&#x9;&#x9;&#x9;resourceType = &apos;LINK&apos; or
&#x9;&#x9;&#x9;&#x9;&#x9;resourceType = &apos;DEFINITION_SET&apos; or
&#x9;&#x9;&#x9;&#x9;&#x9;resourceType = &apos;DATA_SOURCE&apos; or
&#x9;&#x9;&#x9;&#x9;&#x9;resourceType = &apos;TRIGGER&apos;) then

&#x9;&#x9;&#x9;&#x9;&#x9;BEGIN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set i = 0;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;for u as select * from /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/getUsedResourcesCursor(resourcePath, resourceType) do
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--call print(&apos;  u.resourcePath=&apos;||u.resourcePath||&apos;  u.resourceType=&apos;||u.resourceType);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set rebindRow.oldPath = u.resourcePath;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set rebindRow.oldType = u.resourceType;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set rebindRow.newPath = null;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set rebindRow.newType = null;

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Check to see if the actual path is the same as the rebind from path
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (u.resourcePath = rebindFromFolder_) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set rebindRow.newPath = rebindToFolder_;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--call print(&apos;u.resourcePath = rebindFromFolder_&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--call print(&apos;      u.resourcePath=&apos;||u.resourcePath);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--call print(&apos;   rebindFromFolder_=&apos;|| rebindFromFolder_);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Check to see if the actual path contains a partial path for rebind from with a / added to the end to insure it is a complete partial path.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (INSTR(u.resourcePath, rebindFromFolder_||&apos;/&apos;) &gt; 0) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--call print(&apos;INSTR(u.resourcePath, rebindFromFolder_||&apos;&apos;/&apos;&apos;) &gt; 0&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--call print(&apos;      u.resourcePath=&apos;||u.resourcePath);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--call print(&apos;   rebindFromFolder_=&apos;|| rebindFromFolder_);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set rebindRow.newPath = REPLACE(u.resourcePath, rebindFromFolder_||&apos;/&apos;, rebindToFolder_||&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set rebindRow.newType = u.resourceType;

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- If the old and new paths are different then add them to the rebind rules XML
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (rebindRow.oldPath IS NOT NULL AND rebindRow.newPath IS NOT NULL AND rebindRow.oldPath != rebindRow.newPath) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; :     REBIND RULE:&apos;|| 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;  [OLD] oldType=&apos; || NVL(rebindRow.oldType,&apos;null&apos;) || &apos;  oldPath=&apos; || NVL(rebindRow.oldPath,&apos;null&apos;)  || 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;  [NEW] newType=&apos; || NVL(rebindRow.newType,&apos;null&apos;) || &apos;  newPath=&apos; || NVL(rebindRow.newPath,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- If both the old resource path and the new resource path exist then this is a &quot;rebindable&quot; resource
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;call /lib/resource/ResourceExists(rebindRow.oldPath, rebindRow.oldType, null, resourceExists);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (resourceExists) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;call /lib/resource/ResourceExists(rebindRow.newPath, rebindRow.newType, null, resourceExists);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (resourceExists) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set rebindRules = rebindRules || 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;       &lt;resource:rebindRule&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;           &lt;resource:oldPath&gt;&apos;|| CAST(XMLTEXT(REPLACE(rebindRow.oldPath, &apos;&quot;&apos;, &apos;&apos;)) AS LONGVARCHAR) ||&apos;&lt;/resource:oldPath&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;           &lt;resource:oldType&gt;&apos;|| CAST(XMLTEXT(REPLACE(rebindRow.oldType, &apos;&quot;&apos;, &apos;&apos;)) AS LONGVARCHAR) ||&apos;&lt;/resource:oldType&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;           &lt;resource:newPath&gt;&apos;|| CAST(XMLTEXT(REPLACE(rebindRow.newPath, &apos;&quot;&apos;, &apos;&apos;)) AS LONGVARCHAR) ||&apos;&lt;/resource:newPath&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;           &lt;resource:newType&gt;&apos;|| CAST(XMLTEXT(REPLACE(rebindRow.newType, &apos;&quot;&apos;, &apos;&apos;)) AS LONGVARCHAR) ||&apos;&lt;/resource:newType&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;       &lt;/resource:rebindRule&gt;&apos;||CHR(10);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise System.NotFoundException value &apos;The target &quot;new path&quot;=[&apos;||NVL(rebindRow.newPath,&apos;null&apos;)||&apos;] and &quot;new type&quot;=[&apos;||NVL(rebindRow.newType,&apos;null&apos;)||&apos;] does not exist.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; :     INVOKE rebind/rebindReplaceText()&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;BEGIN INDEPENDENT TRANSACTION
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/rebind/rebindReplaceText(resourcePath, resourceType, rebindFromFolder_, rebindToFolder_, debug, success2);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set resourcePathRebound = true;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE RAISE;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; :     NO REBIND REQUIRED:&apos;|| 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;  [OLD] oldType=&apos; || NVL(rebindRow.oldType,&apos;null&apos;) || &apos;  oldPath=&apos; || NVL(rebindRow.oldPath,&apos;null&apos;)  || 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;  [NEW] newType=&apos; || NVL(rebindRow.newType,&apos;null&apos;) || &apos;  newPath=&apos; || NVL(rebindRow.newPath,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end for;
&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; : EXCEPTION RETRIEVING &quot;getUsedResourcesCursor&quot;: &apos;||CAST(CURRENT_EXCEPTION.TRACE AS LONGVARCHAR));
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;END;
&#x9;&#x9;&#x9;&#x9;end if;

&#x9;&#x9;&#x9;&#x9;-- BEGIN rebindResourceImpl()
&#x9;&#x9;&#x9;&#x9;if (rebindRules IS NOT NULL AND LENGTH(rebindRules) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;set createInput = 
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&lt;resource:rebindResources &apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;    xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;    xmlns:ns1=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;    &lt;resource:entries&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;        &lt;resource:entry&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;           &lt;resource:path&gt;&apos; || CAST(XMLTEXT(REPLACE(resourcePath, &apos;&quot;&apos;, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;           &lt;resource:type&gt;&apos; || resourceType || &apos;&lt;/resource:type&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;       &lt;/resource:entry&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;    &lt;/resource:entries&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;    &lt;resource:rebindRules&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;rebindRules || 
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;    &lt;/resource:rebindRules&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&lt;/resource:rebindResources&gt;&apos;;

&#x9;&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; :     INVOKE API rebindResources()  createInput:&apos;||CHR(10)||NVL(createInput,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;&#x9;end if;

&#x9;&#x9;&#x9;&#x9;&#x9;BEGIN INDEPENDENT TRANSACTION
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Invoke the API to rebind resources
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;call /services/webservices/system/admin/resource/operations/rebindResources(createInput, createResponse, faultResponse);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (faultResponse is not null) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise System.SOAPFaultException value CAST(faultResponse as LONGVARCHAR);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE RAISE;
&#x9;&#x9;&#x9;&#x9;&#x9;END;
&#x9;&#x9;&#x9;&#x9;&#x9;-- END rebindResourceImpl()
&#x9;&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;&#x9;if (resourceType = &apos;CONTAINER&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; : Skipping CONATINER path=&apos;||NVL(resourcePath,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (not resourcePathRebound) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; :     INVOKE rebind/rebindReplaceText()&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;BEGIN INDEPENDENT TRANSACTION
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/rebind/rebindReplaceText(resourcePath, resourceType, rebindFromFolder_, rebindToFolder_, debug, success2);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE RAISE;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;end if;

&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; : FINISED - Parent resource to rebind:  resourcePath=&apos;||NVL(resourcePath,&apos;null&apos;)||CHR(10));
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;raise System.NotFoundException value &apos;The path=[&apos;||NVL(resourcePath,&apos;null&apos;)||&apos;] and type=[&apos;||NVL(resourceType,&apos;null&apos;)||&apos;] does not exist.&apos;;
&#x9;&#x9;&#x9;end if;
&#x9;&#x9; &#x9;-- END getRebindableResource and rebindCheckPathExists code combined logic:
&#x9;&#x9;END FOR;
&#x9;else
&#x9;&#x9;set success = 0;
&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) then
&#x9;&#x9;&#x9;call print(moduleName||&apos; : Resource does not exist.  Starting folder=[&apos;||NVL(startingResourceFolder,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;end if;
&#x9;end if;
END
</attribute>
  <attribute name="creationDate" type="LONG">1369417729294</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609965948495</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:2:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:4:Customized" type="STRING">datatype.changed</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">11/269</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">13/251</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/131</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/279</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/109</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/108</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/107</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">16/192</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">17/188</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">12/235</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">15/203</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">14/242</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">14/212</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">14/256</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/272</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">15/171</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>