<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="updateResourcePrivilegesV2" path="/shared/Delta_DV/_scripts/Utilities/repository/updateResourcePrivilegesV2" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[updateResourcePrivilegesV2:

    This procedure updates the privileges of one or more resources. It can be used to set privileges exactly
    or to modify existing privileges. It can also be used to recursively set privileges on child resources,
    dependencies, and/or dependents.  This version does not use a vector for input but uses XML instead.

    A public data type has been defined for the resource privileges list input:

        SET privilegeEntriesXML =
&#x9;&#x9;&#x9;-- Repeat &lt;resource:privilegeEntry&gt; for each unique resource path/type
&#x9;&#x9;&#x9;&apos;        &lt;resource:privilegeEntry&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:path&gt;&apos; || resourcePath || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:type&gt;&apos; || resourceType || &apos;&lt;/resource:type&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:privileges&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                &lt;resource:privilege&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:domain&gt;&apos; || domainName || &apos;&lt;/resource:domain&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:name&gt;&apos; || name || &apos;&lt;/resource:name&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:nameType&gt;&apos; || nameType || &apos;&lt;/resource:nameType&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:privs&gt;&apos; || COALESCE (privs, &apos;&apos;) || &apos;&lt;/resource:privs&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                &lt;/resource:privilege&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;-- Repeat &lt;resource:privilege&gt; for each privilege where the user name/domain/type is different
&#x9;&#x9;&#x9;&apos;            &lt;/resource:privileges&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;        &lt;/resource:privilegeEntry&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;&apos;;

    Sample call (illustrates a resource privs VECTOR that sets READ and SELECT on a view, but revokes them
    on one of the view&apos;s columns):

        SET privilegeEntriesXML =
&#x9;&#x9;&#x9;-- Repeat &lt;resource:privilegeEntry&gt; for each unique resource path/type
&#x9;&#x9;&#x9;&apos;        &lt;resource:privilegeEntry&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:path&gt;/users/composite/admin/virt_col_test&lt;/resource:path&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:type&gt;TABLE&lt;/resource:type&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:privileges&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                &lt;resource:privilege&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:domain&gt;composite&lt;/resource:domain&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:name&gt;cgoodric&lt;/resource:name&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:nameType&gt;USER&lt;/resource:nameType&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:privs&gt;READ SELECT&lt;/resource:privs&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                &lt;/resource:privilege&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;/resource:privileges&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;        &lt;/resource:privilegeEntry&gt;&apos;||CHR(10)||

&#x9;&#x9;&#x9;&apos;        &lt;resource:privilegeEntry&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:path&gt;/users/composite/admin/virt_col_test/customerid&lt;/resource:path&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:type&gt;COLUMN&lt;/resource:type&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:privileges&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                &lt;resource:privilege&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:domain&gt;composite&lt;/resource:domain&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:name&gt;cgoodric&lt;/resource:name&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:nameType&gt;USER&lt;/resource:nameType&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:privs&gt;NONE&lt;/resource:privs&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                &lt;/resource:privilege&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;/resource:privileges&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;        &lt;/resource:privilegeEntry&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;&apos;;

    CALL /shared/ASAssets/Utilities/repository/updateResourcePrivileges(
        FALSE, -- modify the existing privileges
        TRUE,  -- recurse child resources (set to TRUE to cascade privileges to columns)
        FALSE, -- don&apos;t recurse dependencies
        FALSE, -- don&apos;t recurse dependents
&#x9;&#x9;privilegeEntriesXML,
        mySuccess,
        mycreateResponse,
        myfaultResponse
    );


    Input:
        setExactly - A bit flag indicating whether the privileges of the resources in the resourcePrivsList
                     should be wiped and replaced with the specified privileges or merely modified.  
            Values: 1 or 0

        recurseChildResources - A bit flag indicating whether the privileges of the resources in the
                                resourcePrivsList should be recursively applied to any child resources 
                                (assumes the resource is a container.)  
            Values: 1 or 0

        recurseDependencies - A bit flag indicating whether the privileges of the resources in the resourcePrivsList
                              resourcePrivsList should be applied to any resources that they use.
            Values: 1 or 0

        recurseDependents - A bit flag indicating whether the privileges of the resources in the resourcePrivsList
                            resourcePrivsList should be applied to any resources that are used by them.
            Values: 1 or 0

        resourcePrivsList - An XML formatted string of resources and their respective privileges settings.
            Values: May not be NULL.

    Output:
&#x9;&#x9;success&#x9;- true(1) or false(0)
&#x9;&#x9;&#x9;Values: 1 or 0
&#x9;&#x9;createResponse - XML response representing what was created.
&#x9;&#x9;&#x9;Values: Create Response XML value
&#x9;&#x9;faultResponse - null if succesful otherwise contains a fault resposne.
&#x9;&#x9;&#x9;Values: Fault Resposne XML value

    Exceptions:  ex
&#x9;&#x9;If there is a code exception or faultResponse is not null

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
    2015.2&#x9;&#x9;04/24/2015      Calvin Goodrich     7.0.1           Created new
&#x9;2015.3&#x9;&#x9;06/10/2015&#x9;&#x9;Calvin Goodrich&#x9;&#x9;7.0.1&#x9;&#x9;&#x9;Updated to fix issue with BOOLEAN data type handling in 7.0.1.00.16
&#x9;2019.200&#x9;04/04/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Changed custom functions to explicit paths.
&#x9;2019.200&#x9;05/15/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;New V2: Created updateResourcePrivilegesV2 from updateResourcePrivileges to remove the use of VECTOR input.  Memory leak associated with vector parameters.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]></annotation>
  <parameters>
    <parameter name="setExactly" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="recurseChildResources" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="recurseDependencies" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="recurseDependents" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="inPrivilegeEntriesXML" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="success" direction="OUT" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="faultResponse" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="invalidPathList" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/services/databases/system/DUAL" type="TABLE">
    <datatype type="TABLE" refId="256">
      <element name="DUMMY">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/resource/operations/updateResourcePrivileges" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="updateResourcePrivileges" direction="IN">
        <datatype name="updateResourcePrivileges" extendedName="{http://www.compositesw.com/services/system/admin/resource}updateResourcePrivileges" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}updateResourcePrivileges" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}updateResourcePrivileges">
          <schemaDatatype>
            <datatype name="updateResourcePrivileges" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="updateResourcePrivilegesRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="257">
              <element name="updateRecursively" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
              </element>
              <element name="updateDependenciesRecursively" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
              </element>
              <element name="updateDependentsRecursively" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
              </element>
              <element name="privilegeEntries" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="513">
                  <element name="privilegeEntry" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="privilegeEntry" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="769">
                      <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceOrColumnType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="privileges" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1025">
                          <element name="privilege" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                            <datatype name="privilege" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1281">
                              <element name="domain" namespace="http://www.compositesw.com/services/system/admin/resource">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="name" namespace="http://www.compositesw.com/services/system/admin/resource">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="nameType" namespace="http://www.compositesw.com/services/system/admin/resource">
                                <datatype name="userNameType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="privs" namespace="http://www.compositesw.com/services/system/admin/resource">
                                <datatype name="privList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="combinedPrivs" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                                <datatype name="privList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="inheritedPrivs" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                                <datatype name="privList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
              <element name="mode" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="updatePrivilegesMode" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="updateResourcePrivilegesResponse" direction="OUT">
        <datatype name="updateResourcePrivilegesResponse" extendedName="{http://www.compositesw.com/services/system/admin/resource}updateResourcePrivilegesResponse" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}updateResourcePrivilegesResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}updateResourcePrivilegesResponse">
          <schemaDatatype>
            <datatype name="updateResourcePrivilegesResponse" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="updateResourcePrivilegesResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="1537"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="1793">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="2049">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/repository/_debug" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
    updateResourcePrivilegesV2:

    This procedure updates the privileges of one or more resources. It can be used to set privileges exactly
    or to modify existing privileges. It can also be used to recursively set privileges on child resources,
    dependencies, and/or dependents.  This version does not use a vector for input but uses XML instead.

    A public XML structure has been defined for the resource privileges list input:

&#x9;&#x9;SET privilegeEntriesXML =
&#x9;&#x9;&#x9;-- Repeat &lt;resource:privilegeEntry&gt; for each unique resource path/type
&#x9;&#x9;&#x9;&apos;        &lt;resource:privilegeEntry&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:path&gt;&apos; || resourcePath || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:type&gt;&apos; || resourceType || &apos;&lt;/resource:type&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:privileges&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;-- Repeat &lt;resource:privilege&gt; for each privilege where the user name/domain/type is different
&#x9;&#x9;&#x9;&apos;                &lt;resource:privilege&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:domain&gt;&apos; || domainName || &apos;&lt;/resource:domain&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:name&gt;&apos; || name || &apos;&lt;/resource:name&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:nameType&gt;&apos; || nameType || &apos;&lt;/resource:nameType&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:privs&gt;&apos; || COALESCE (privs, &apos;&apos;) || &apos;&lt;/resource:privs&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                &lt;/resource:privilege&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;/resource:privileges&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;        &lt;/resource:privilegeEntry&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;&apos;;

    Sample call (illustrates a resource privs XML that sets READ and SELECT on a view, but revokes them
    on one of the view&apos;s columns):

        SET privilegeEntriesXML =
&#x9;&#x9;&#x9;-- Repeat &lt;resource:privilegeEntry&gt; for each unique resource path/type
&#x9;&#x9;&#x9;&apos;        &lt;resource:privilegeEntry&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:path&gt;/users/composite/admin/virt_col_test&lt;/resource:path&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:type&gt;TABLE&lt;/resource:type&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:privileges&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                &lt;resource:privilege&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:domain&gt;composite&lt;/resource:domain&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:name&gt;cgoodric&lt;/resource:name&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:nameType&gt;USER&lt;/resource:nameType&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:privs&gt;READ SELECT&lt;/resource:privs&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                &lt;/resource:privilege&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;/resource:privileges&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;        &lt;/resource:privilegeEntry&gt;&apos;||CHR(10)||

&#x9;&#x9;&#x9;&apos;        &lt;resource:privilegeEntry&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:path&gt;/users/composite/admin/virt_col_test/customerid&lt;/resource:path&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:type&gt;COLUMN&lt;/resource:type&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:privileges&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                &lt;resource:privilege&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:domain&gt;composite&lt;/resource:domain&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:name&gt;cgoodric&lt;/resource:name&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:nameType&gt;USER&lt;/resource:nameType&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:privs&gt;NONE&lt;/resource:privs&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                &lt;/resource:privilege&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;/resource:privileges&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;        &lt;/resource:privilegeEntry&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;&apos;;

    CALL /shared/ASAssets/Utilities/repository/updateResourcePrivileges(
        FALSE, -- modify the existing privileges
        TRUE,  -- recurse child resources (set to TRUE to cascade privileges to columns)
        FALSE, -- don&apos;t recurse dependencies
        FALSE, -- don&apos;t recurse dependents
&#x9;&#x9;privilegeEntriesXML,
        mySuccess,
        mycreateResponse,
        myfaultResponse
    );


    Input:
        setExactly - A bit flag indicating whether the privileges of the resources in the resourcePrivsList
                     should be wiped and replaced with the specified privileges or merely modified.  
            Values: 1=SET_EXACTLY, 0=OVERWRITE_APPEND

        recurseChildResources - A bit flag indicating whether the privileges of the resources in the
                                resourcePrivsList should be recursively applied to any child resources 
                                (assumes the resource is a container.)  
            Values: 1=recurse children or 0=do not recurse

        recurseDependencies - A bit flag indicating whether the privileges of the resources in the resourcePrivsList
                              resourcePrivsList should be applied to any resources that they use.
            Values: 1=recurse dependencies or 0=do not recurse

        recurseDependents - A bit flag indicating whether the privileges of the resources in the resourcePrivsList
                            resourcePrivsList should be applied to any resources that are used by them.
            Values: 1=recurse dependents or 0=do not recurse

        inPrivilegeEntriesXML - An XML formatted string of resources and their respective privileges settings.
            Values: May not be NULL.

    Output:
&#x9;&#x9;success&#x9;- true(1) or false(0)
&#x9;&#x9;&#x9;Values: 1 or 0
&#x9;&#x9;faultResponse - null if succesful otherwise an exception is thrown if not null.
&#x9;&#x9;invalidPathList&#x9;- If not null, then a comma-separated list of paths [path:type] that are invalid as they do not exist and no privileges were applied.

    Exceptions:  ex
&#x9;&#x9;If there is a code exception or faultResponse is not null

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
    2015.2&#x9;&#x9;04/24/2015      Calvin Goodrich     7.0.1           Created new
&#x9;2015.3&#x9;&#x9;06/10/2015&#x9;&#x9;Calvin Goodrich&#x9;&#x9;7.0.1&#x9;&#x9;&#x9;Updated to fix issue with BOOLEAN data type handling in 7.0.1.00.16
&#x9;2019.200&#x9;04/04/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Changed custom functions to explicit paths.
&#x9;2019.200&#x9;05/15/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;New V2: Created updateResourcePrivilegesV2 from updateResourcePrivileges to remove the use of VECTOR input.  Memory leak associated with vector parameters.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE updateResourcePrivilegesV2(
    IN setExactly &#x9;&#x9;&#x9;&#x9;BIT,&#x9;&#x9; -- 0=OVERWRITE_APPEND, 1=SET_EXACTLY
    IN recurseChildResources &#x9;BIT,&#x9;&#x9; -- 1=recurse children or 0=do not recurse
    IN recurseDependencies &#x9;&#x9;BIT,&#x9;&#x9; -- 1=recurse dependencies or 0=do not recurse
    IN recurseDependents &#x9;&#x9;BIT,&#x9;&#x9; -- 1=recurse dependents or 0=do not recurse
    IN inPrivilegeEntriesXML&#x9;LONGVARCHAR, -- XML formatted privileges
    OUT success &#x9;&#x9;&#x9;&#x9;BIT,
    OUT faultResponse &#x9;&#x9;&#x9;LONGVARCHAR,
&#x9;OUT invalidPathList&#x9;&#x9;&#x9;LONGVARCHAR&#x9; -- If not null, then a comma-separated list of paths [path:type:reason] that are invalid as they do not exist and no privileges were applied.
)
BEGIN
    DECLARE moduleName          &#x9;VARCHAR DEFAULT &apos;updateResourcePrivilegesV2&apos;;
&#x9;DECLARE debug&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1) DEFAULT /shared/Delta_DV/&quot;_scripts&quot;/Utilities/repository/&quot;_debug&quot;.debug;
&#x9;DECLARE privilegeEntriesXML&#x9;&#x9;LONGVARCHAR DEFAULT inPrivilegeEntriesXML;
    DECLARE mySetExactly            BOOLEAN DEFAULT CASE WHEN (setExactly IS NULL OR setExactly = 0) THEN FALSE ELSE TRUE END;
    DECLARE myRecurseChildResources BOOLEAN DEFAULT CASE WHEN (recurseChildResources IS NULL OR recurseChildResources = 0) THEN FALSE ELSE TRUE END;
    DECLARE myRecurseDependencies   BOOLEAN DEFAULT CASE WHEN (recurseDependencies IS NULL OR recurseDependencies = 0) THEN FALSE ELSE TRUE END;
    DECLARE myRecurseDependents     BOOLEAN DEFAULT CASE WHEN (recurseDependents IS NULL OR recurseDependents = 0) THEN FALSE ELSE TRUE END;
&#x9;DECLARE resourcePath&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE resourceType&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE resExists&#x9;&#x9;&#x9;&#x9;BOOLEAN;
    DECLARE requestXML &#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
    DECLARE privilegeEntriesXMLValid LONGVARCHAR DEFAULT &apos; &apos;; -- Validated XML formatted privileges.  No invalid paths
    DECLARE privilegeEntry&#x9;&#x9;&#x9;LONGVARCHAR; 
&#x9;DECLARE privilege &#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE priv&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE pos1, pos2&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE pos3, pos4&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE pos5, pos6&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE len&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE resultStr&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE numEntries&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE numPrivs&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE ex &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION;
&#x9;DECLARE namespaceTag&#x9;&#x9;&#x9;VARCHAR;
    DECLARE createResponseXML&#x9;&#x9;XML;
&#x9;DECLARE faultResponseXML&#x9;&#x9;XML;

&#x9;&#x9;
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos; : INPUT: setExactly=&apos;||NVL(CAST(setExactly AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;CALL PRINT(moduleName||&apos; : INPUT: recurseChildResources=&apos;||NVL(CAST(recurseChildResources AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;CALL PRINT(moduleName||&apos; : INPUT: recurseDependencies=&apos;||NVL(CAST(recurseDependencies AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;CALL PRINT(moduleName||&apos; : INPUT: recurseDependents=&apos;||NVL(CAST(recurseDependents AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;CALL PRINT(moduleName||&apos; : INPUT: inPrivilegeEntriesXML=&apos;||CHR(10)||NVL(inPrivilegeEntriesXML,&apos;null&apos;));
&#x9;END IF;

&#x9;-- Get the namespace tag=ns1 from [&lt;ns1: and &lt;/ns1:] and replace it with [&lt;resource: and &lt;/resource:]
&#x9;IF (privilegeEntriesXML IS NOT NULL AND LENGTH(privilegeEntriesXML) &gt; 0) THEN
&#x9;&#x9;SET pos1 = INSTR(privilegeEntriesXML, &apos;&lt;&apos;);
&#x9;&#x9;SET pos2 = INSTR(privilegeEntriesXML, &apos;:&apos;);
&#x9;&#x9;IF (pos1 &gt; 0 AND pos2 &gt; 0) THEN
&#x9;&#x9;&#x9;SET namespaceTag = SUBSTRING(privilegeEntriesXML, pos1+1, pos2-pos1-1);
&#x9;&#x9;&#x9;IF (namespaceTag &lt;&gt; &apos;resource&apos;) THEN
&#x9;&#x9;&#x9;&#x9;SET privilegeEntriesXML = REPLACE(privilegeEntriesXML, &apos;&lt;&apos;||namespaceTag||&apos;:&apos;, &apos;&lt;resource:&apos;);
&#x9;&#x9;&#x9;&#x9;SET privilegeEntriesXML = REPLACE(privilegeEntriesXML, &apos;&lt;/&apos;||namespaceTag||&apos;:&apos;, &apos;&lt;/resource:&apos;);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END IF;
&#x9;END IF;

    IF (privilegeEntriesXML IS NULL OR LENGTH(privilegeEntriesXML) = 0) THEN
        RAISE System.IllegalArgumentException VALUE &apos;The input &quot;privilegeEntriesXML&quot; may not be null or empty.&apos;;
    END IF;

&#x9;/*
&#x9;&#x9;&#x9;-- Repeat &lt;resource:privilegeEntry&gt; for each unique resource path/type
&#x9;&#x9;&#x9;&apos;        &lt;resource:privilegeEntry&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:path&gt;/users/composite/admin/virt_col_test&lt;/resource:path&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:type&gt;TABLE&lt;/resource:type&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;resource:privileges&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                &lt;resource:privilege&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:domain&gt;composite&lt;/resource:domain&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:name&gt;cgoodric&lt;/resource:name&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:nameType&gt;USER&lt;/resource:nameType&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                    &lt;resource:privs&gt;READ SELECT&lt;/resource:privs&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;                &lt;/resource:privilege&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;            &lt;/resource:privileges&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;        &lt;/resource:privilegeEntry&gt;&apos;||CHR(10)||
&#x9;*/
&#x9;-- Validate all entries for privilegeEntriesXML
&#x9;SET pos1 = INSTR(privilegeEntriesXML, &apos;&lt;resource:privilegeEntry&gt;&apos;);
&#x9;SET pos2 = INSTR(privilegeEntriesXML, &apos;&lt;/resource:privilegeEntry&gt;&apos;);
&#x9;SET numEntries = 0;
&#x9;WHILE (pos1 &gt; 0 and pos2 &gt; 0) DO
&#x9;&#x9;SET numEntries = numEntries + 1;
&#x9;&#x9;SET len = LENGTH(&apos;&lt;resource:privilegeEntry&gt;&apos;);
&#x9;&#x9;SET privilegeEntry = &apos;    &apos;||TRIM(SUBSTRING(privilegeEntriesXML, pos1, pos2-pos1+len+1));
&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL PRINT(&apos;&apos;);
&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; : privilegeEntry[&apos;||numEntries||&apos;]:&apos;||CHR(10)||NVL(privilegeEntry,&apos;null&apos;));
&#x9;&#x9;END IF;

&#x9;&#x9;-- Extract the resource path
&#x9;&#x9;SET pos5 = INSTR(privilegeEntry, &apos;&lt;resource:path&gt;&apos;);
&#x9;&#x9;SET pos6 = INSTR(privilegeEntry, &apos;&lt;/resource:path&gt;&apos;);
&#x9;&#x9;SET resourcePath = null;
&#x9;&#x9;IF (pos5 = 0 or pos6 = 0) THEN
&#x9;&#x9;&#x9;RAISE ex VALUE &apos;privilegeEntry[&apos;||numEntries||&apos;]/path not be blank or empty.&apos;;
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;SET len = LENGTH(&apos;&lt;resource:path&gt;&apos;);
&#x9;&#x9;&#x9;SET resourcePath = TRIM(SUBSTRING(privilegeEntry, pos5+len, pos6-(pos5+len)));
&#x9;&#x9;&#x9;IF (LENGTH(TRIM(resourcePath)) = 0) THEN
&#x9;&#x9;&#x9;&#x9;RAISE ex VALUE &apos;privilegeEntry[&apos;||numEntries||&apos;]/path not be blank or empty.&apos;;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END IF;
&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; : privilegeEntry[&apos;||numEntries||&apos;]/path=&apos;||NVL(resourcePath,&apos;null&apos;));
&#x9;&#x9;END IF;

&#x9;&#x9;-- Extract the resource type
&#x9;&#x9;SET pos5 = INSTR(privilegeEntry, &apos;&lt;resource:type&gt;&apos;);
&#x9;&#x9;SET pos6 = INSTR(privilegeEntry, &apos;&lt;/resource:type&gt;&apos;);
&#x9;&#x9;SET resourceType = null;
&#x9;&#x9;IF (pos5 = 0 or pos6 = 0) THEN
&#x9;&#x9;&#x9;RAISE ex VALUE &apos;privilegeEntry[&apos;||numEntries||&apos;]/type not be blank or empty.&apos;;
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;SET len = LENGTH(&apos;&lt;resource:type&gt;&apos;);
&#x9;&#x9;&#x9;SET resourceType = TRIM(SUBSTRING(privilegeEntry, pos5+len, pos6-(pos5+len)));
&#x9;&#x9;&#x9;IF (LENGTH(TRIM(resourceType)) = 0) THEN
&#x9;&#x9;&#x9;&#x9;RAISE ex VALUE &apos;privilegeEntry[&apos;||numEntries||&apos;]/type not be blank or empty.&apos;;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END IF;
&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; : privilegeEntry[&apos;||numEntries||&apos;]/type=&apos;||NVL(resourceType,&apos;null&apos;));
&#x9;&#x9;END IF;

&#x9;&#x9;-- Extract the privilege.
&#x9;&#x9;SET pos3 = INSTR(privilegeEntry, &apos;&lt;resource:privilege&gt;&apos;);
&#x9;&#x9;SET pos4 = INSTR(privilegeEntry, &apos;&lt;/resource:privilege&gt;&apos;);
&#x9;&#x9;SET numPrivs = 0;
&#x9;&#x9;WHILE (pos3 &gt; 0 and pos4 &gt; 0) DO
&#x9;&#x9;&#x9;SET numPrivs = numPrivs + 1;
&#x9;&#x9;&#x9;SET len = LENGTH(&apos;&lt;resource:privilege&gt;&apos;);
&#x9;&#x9;&#x9;SET privilege = TRIM(SUBSTRING(privilegeEntry, pos3+len, pos4-(pos3+len)));
&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; : privilegeEntry[&apos;||numEntries||&apos;]/privilege[&apos;||numPrivs||&apos;]:  privilege=&apos;||REPLACE(privilege, CHR(10), &apos;&apos;));
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- Extract the privilege domain
&#x9;&#x9;&#x9;SET pos5 = INSTR(privilege, &apos;&lt;resource:domain&gt;&apos;);
&#x9;&#x9;&#x9;SET pos6 = INSTR(privilege, &apos;&lt;/resource:domain&gt;&apos;);
&#x9;&#x9;&#x9;SET resultStr = null;
&#x9;&#x9;&#x9;IF (pos5 = 0 or pos6 = 0) THEN
&#x9;&#x9;&#x9;&#x9;RAISE ex VALUE &apos;privilegeEntry[&apos;||numEntries||&apos;]/privilege[&apos;||numPrivs||&apos;]/domain not be blank or empty.&apos;;
&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;SET len = LENGTH(&apos;&lt;resource:domain&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;SET resultStr = TRIM(SUBSTRING(privilege, pos5+len, pos6-(pos5+len)));
&#x9;&#x9;&#x9;&#x9;IF (LENGTH(TRIM(resultStr)) = 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;RAISE ex VALUE &apos;privilegeEntry[&apos;||numEntries||&apos;]/privilege[&apos;||numPrivs||&apos;]/domain not be blank or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; : privilegeEntry[&apos;||numEntries||&apos;]/privilege[&apos;||numPrivs||&apos;]/domain=&apos;||NVL(resultStr,&apos;null&apos;));
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- Extract the privilege name
&#x9;&#x9;&#x9;SET pos5 = INSTR(privilege, &apos;&lt;resource:name&gt;&apos;);
&#x9;&#x9;&#x9;SET pos6 = INSTR(privilege, &apos;&lt;/resource:name&gt;&apos;);
&#x9;&#x9;&#x9;SET resultStr = null;
&#x9;&#x9;&#x9;IF (pos5 = 0 or pos6 = 0) THEN
&#x9;&#x9;&#x9;&#x9;RAISE ex VALUE &apos;privilegeEntry[&apos;||numEntries||&apos;]/privilege[&apos;||numPrivs||&apos;]/name not be blank or empty.&apos;;
&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;SET len = LENGTH(&apos;&lt;resource:name&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;SET resultStr = TRIM(SUBSTRING(privilege, pos5+len, pos6-(pos5+len)));
&#x9;&#x9;&#x9;&#x9;IF (LENGTH(TRIM(resultStr)) = 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;RAISE ex VALUE &apos;privilegeEntry[&apos;||numEntries||&apos;]/privilege[&apos;||numPrivs||&apos;]/name not be blank or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; : privilegeEntry[&apos;||numEntries||&apos;]/privilege[&apos;||numPrivs||&apos;]/name=&apos;||NVL(resultStr,&apos;null&apos;));
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- Extract the privilege nameType
&#x9;&#x9;&#x9;SET pos5 = INSTR(privilege, &apos;&lt;resource:nameType&gt;&apos;);
&#x9;&#x9;&#x9;SET pos6 = INSTR(privilege, &apos;&lt;/resource:nameType&gt;&apos;);
&#x9;&#x9;&#x9;SET resultStr = null;
&#x9;&#x9;&#x9;IF (pos5 = 0 or pos6 = 0) THEN
&#x9;&#x9;&#x9;&#x9;RAISE ex VALUE &apos;privilegeEntry[&apos;||numEntries||&apos;]/privilege[&apos;||numPrivs||&apos;]/nameType not be blank or empty.&apos;;
&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;SET len = LENGTH(&apos;&lt;resource:nameType&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;SET resultStr = TRIM(SUBSTRING(privilege, pos5+len, pos6-(pos5+len)));
&#x9;&#x9;&#x9;&#x9;IF (LENGTH(TRIM(resultStr)) = 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;RAISE ex VALUE &apos;privilegeEntry[&apos;||numEntries||&apos;]/privilege[&apos;||numPrivs||&apos;]/nameType not be blank or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;IF (resultStr NOT IN (&apos;USER&apos;,&apos;GROUP&apos;)) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;RAISE ex VALUE &apos;Invalid privilegeEntry[&apos;||numEntries||&apos;]/privilege[&apos;||numPrivs||&apos;]/nameType=&apos;||NVL(resultStr,&apos;null&apos;)||&apos;.  nameType must be in (&apos;&apos;USER&apos;&apos;,&apos;&apos;GROUP&apos;&apos;)&apos;;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; : privilegeEntry[&apos;||numEntries||&apos;]/privilege[&apos;||numPrivs||&apos;]/nameType=&apos;||NVL(resultStr,&apos;null&apos;));
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- Extract the privilege privs
&#x9;&#x9;&#x9;SET pos5 = INSTR(privilege, &apos;&lt;resource:privs&gt;&apos;);
&#x9;&#x9;&#x9;SET pos6 = INSTR(privilege, &apos;&lt;/resource:privs&gt;&apos;);
&#x9;&#x9;&#x9;SET resultStr = null;
&#x9;&#x9;&#x9;IF (pos5 = 0 or pos6 = 0) THEN
&#x9;&#x9;&#x9;&#x9;RAISE ex VALUE &apos;privilegeEntry[&apos;||numEntries||&apos;]/privilege[&apos;||numPrivs||&apos;]/privs not be blank or empty.&apos;;
&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;SET len = LENGTH(&apos;&lt;resource:privs&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;SET resultStr = TRIM(SUBSTRING(privilege, pos5+len, pos6-(pos5+len)));
&#x9;&#x9;&#x9;&#x9;IF (LENGTH(TRIM(resultStr)) = 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;RAISE ex VALUE &apos;privilegeEntry[&apos;||numEntries||&apos;]/privilege[&apos;||numPrivs||&apos;]/privs not be blank or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;SET resultStr = resultStr || &apos; &apos;; -- add a space to the end
&#x9;&#x9;&#x9;&#x9;SELECT {OPTION IGNORE_TRAILING_SPACES=&quot;FALSE&quot;} INSTR(resultStr, &apos; &apos;) INTO pos6 FROM /services/databases/system/DUAL;
&#x9;&#x9;&#x9;&#x9;SET pos5 = 1;
&#x9;&#x9;&#x9;&#x9;WHILE (pos6 &gt; 0) DO
&#x9;&#x9;&#x9;&#x9;&#x9;SET priv = TRIM(SUBSTRING(resultStr, pos5, pos6-pos5));
&#x9;&#x9;&#x9;&#x9;&#x9;IF (priv NOT IN (&apos;READ&apos;,&apos;WRITE&apos;,&apos;EXECUTE&apos;,&apos;SELECT&apos;,&apos;UPDATE&apos;,&apos;INSERT&apos;,&apos;DELETE&apos;,&apos;GRANT&apos;)) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RAISE ex VALUE &apos;Invalid privilege=&apos;||priv||&apos; for privilegeEntry[&apos;||numEntries||&apos;]/privilege[&apos;||numPrivs||&apos;]/privs=&apos;||TRIM(NVL(resultStr,&apos;null&apos;))||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;.  privs must be in (&apos;&apos;READ&apos;&apos;,&apos;&apos;WRITE&apos;&apos;,&apos;&apos;EXECUTE&apos;&apos;,&apos;&apos;SELECT&apos;&apos;,&apos;&apos;UPDATE&apos;&apos;,&apos;&apos;INSERT&apos;&apos;,&apos;&apos;DELETE&apos;&apos;,&apos;&apos;GRANT&apos;&apos;)&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;SET pos5 = pos6;
&#x9;&#x9;&#x9;&#x9;&#x9;SELECT {OPTION IGNORE_TRAILING_SPACES=&quot;FALSE&quot;} INSTR(resultStr, &apos; &apos;,pos6+1) INTO pos6 FROM /services/databases/system/DUAL;
&#x9;&#x9;&#x9;&#x9;END WHILE;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; : privilegeEntry[&apos;||numEntries||&apos;]/privilege[&apos;||numPrivs||&apos;]/privs=&apos;||NVL(resultStr,&apos;null&apos;));
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- Get the next privilege entry
&#x9;&#x9;&#x9;SET pos3 = INSTR(privilegeEntry, &apos;&lt;resource:privilege&gt;&apos;, pos3+1);
&#x9;&#x9;&#x9;SET pos4 = INSTR(privilegeEntry, &apos;&lt;/resource:privilege&gt;&apos;, pos4+1);
&#x9;&#x9;END WHILE;
&#x9;&#x9;-- Validate the resource path and type existence
&#x9;&#x9;CALL /lib/resource/ResourceExists(resourcePath, resourceType, null, resExists);
&#x9;&#x9;IF (resExists) THEN
&#x9;&#x9;&#x9;SET privilegeEntriesXMLValid = privilegeEntriesXMLValid || privilegeEntry||CHR(10);
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;IF (invalidPathList IS NULL) THEN
&#x9;&#x9;&#x9;&#x9;SET invalidPathList = &apos;&apos;;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;IF (LENGTH(invalidPathList) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET invalidPathList = invalidPathList || &apos;,&apos;;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;SET invalidPathList = invalidPathList || resourcePath || &apos;:&apos; || resourceType;
&#x9;&#x9;END IF;

&#x9;&#x9;-- Get the next privilege entry
&#x9;&#x9;SET pos1 = INSTR(privilegeEntriesXML, &apos;&lt;resource:privilegeEntry&gt;&apos;, pos1+1);
&#x9;&#x9;SET pos2 = INSTR(privilegeEntriesXML, &apos;&lt;/resource:privilegeEntry&gt;&apos;, pos2+1);
&#x9;END WHILE;

    -- construct the request XML envelope for updateResourcePrivileges
    SET requestXML =
&#x9;&#x9;&apos;&lt;resource:updateResourcePrivileges xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot;&gt;&apos;||CHR(10)||
&#x9;&#x9;&apos;    &lt;resource:updateRecursively&gt;&apos; || CAST(myRecurseChildResources AS VARCHAR) || &apos;&lt;/resource:updateRecursively&gt;&apos;||CHR(10)||
&#x9;&#x9;&apos;    &lt;resource:updateDependenciesRecursively&gt;&apos; || CAST(myRecurseDependencies AS VARCHAR) || &apos;&lt;/resource:updateDependenciesRecursively&gt;&apos;||CHR(10)||
&#x9;&#x9;&apos;    &lt;resource:updateDependentsRecursively&gt;&apos; || CAST(myRecurseDependents AS VARCHAR) || &apos;&lt;/resource:updateDependentsRecursively&gt;&apos;||CHR(10)||
&#x9;&#x9;&apos;    &lt;resource:privilegeEntries&gt;&apos;||CHR(10)||
&#x9;&#x9;privilegeEntriesXMLValid ||
&#x9;&#x9;&apos;    &lt;/resource:privilegeEntries&gt;&apos;||CHR(10)||
&#x9;&#x9;&apos;    &lt;resource:mode&gt;&apos; || CASE (mySetExactly) WHEN TRUE THEN &apos;SET_EXACTLY&apos; ELSE &apos;OVERWRITE_APPEND&apos; END || &apos;&lt;/resource:mode&gt;&apos;||CHR(10)||
&#x9;&#x9;&apos;&lt;/resource:updateResourcePrivileges&gt;&apos;;

&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(&apos;&apos;);
&#x9;&#x9;CALL PRINT(moduleName||&apos; : updateResourcePrivileges()  requestXML:&apos;||CHR(10)||NVL(requestXML,&apos;null&apos;));
&#x9;END IF;

&#x9;-----------------------------
&#x9;-- Invoke Web Service API
&#x9;-----------------------------
    -- Invoke the API to update resource privileges
    CALL /services/webservices/system/admin/resource/operations/updateResourcePrivileges(requestXML, createResponseXML, faultResponseXML);
&#x9;SET faultResponse = CAST(faultResponseXML AS LONGVARCHAR);
    -- check for success result
    IF (faultResponseXML IS NOT NULL) THEN
&#x9;&#x9;RAISE ex VALUE faultResponse;
    END IF;
&#x9;SET success = 1;
END</attribute>
  <attribute name="creationDate" type="LONG">1430319249160</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609965948495</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:4:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:6:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:7:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">9/230</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/212</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/247</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/213</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/293</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/167</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/166</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/259</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/165</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/164</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/276</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/168</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/342</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">15/185</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/313</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/382</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/381</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>