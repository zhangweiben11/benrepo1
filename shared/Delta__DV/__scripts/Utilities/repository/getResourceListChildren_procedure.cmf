<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="getResourceListChildren" path="/shared/Delta_DV/_scripts/Utilities/repository/getResourceListChildren" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[getResourceListChildren:

&#x9;Return a list of the immediate child resources, resource path, type and subtype for a given folder  
    path but not recursively. The input to this is a starting folder and not an actual resource. 
 
&#x9;Input:
   &#x9;&#x9;resourcePath - CIS source folder path to begin deriving a list of resources
&#x9;&#x9;&#x9;Values: e.g. /shared/ASAssets/Utilities [this folder]

&#x9;&#x9;resourceType - The type of folder. 
&#x9;&#x9;&#x9;Values: e.g. CONTAINER|DATA_SOURCE


&#x9;Output:
&#x9;&#x9;resourceTreeType - Cursor result set
&#x9;&#x9;&#x9;PIPE (
&#x9;&#x9;&#x9;&#x9;name&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(255),&#x9;&#x9;&#x9;&#x9;name of the CIS resource
&#x9;&#x9;&#x9;&#x9;resPath&#x9;&#x9;&#x9;&#x9;&#x9;TypeDefinitions.pathType,&#x9;full path of the CIS resource
&#x9;&#x9;&#x9;&#x9;resType&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(255),&#x9;&#x9;&#x9;&#x9;resource type
&#x9;&#x9;&#x9;&#x9;subType&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(255),&#x9;&#x9;&#x9;&#x9;resource sub type
&#x9;&#x9;&#x9;&#x9;creationDate&#x9;&#x9;&#x9;TIMESTAMP,
&#x9;&#x9;&#x9;&#x9;creationDateBigint&#x9;&#x9;BIGINT,
&#x9;&#x9;&#x9;&#x9;creatorUserDomain&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;&#x9;creatorUserName&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;&#x9;lastModifiedDate&#x9;&#x9;TIMESTAMP,
&#x9;&#x9;&#x9;&#x9;lastModifiedDateBigint&#x9;BIGINT,
&#x9;&#x9;&#x9;&#x9;lastModifiedUserDomain&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;&#x9;lastModifiedUserName&#x9;VARCHAR(255)
&#x9;&#x9;&#x9;)

&#x9;Exceptions:
&#x9;&#x9;Error:      Maximum Request Depth(30) exceeded.  Check request structure for unbounded recursion.  
&#x9;&#x9;Resoution:  Go to Administration, Configuration, Composite Server, Configuration, Transactions and set &quot;Maximum Request Depth&quot; to a higher number.

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2014.4&#x9;&#x9;10/20/2014&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.6&#x9;&#x9;&#x9;Created new

    (c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]></annotation>
  <parameters>
    <parameter name="resourcePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="256">
        <element name="name">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="resPath">
          <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
        </element>
        <element name="resType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="subtype">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="enabled">
          <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
        </element>
        <element name="id">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="changeid">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="version">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="introspectState">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="ownerDomain">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="ownerName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="impactLevel">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="impactMessage">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="annotation">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="explicitlyDesigned">
          <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
        </element>
        <element name="isFunction">
          <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
        </element>
        <element name="tableType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="sqlText">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="scriptText">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="proprietaryModel">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="childCount">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="dataSourceType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="creationDate">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="creationDateBigint">
          <datatype name="BIGINT" type="INTEGER"/>
        </element>
        <element name="creatorUserDomain">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="creatorUserId">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="creatorUserName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="lastModifiedDate">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="lastModifiedDateBigint">
          <datatype name="BIGINT" type="INTEGER"/>
        </element>
        <element name="lastModifiedUserDomain">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="lastModifiedUserId">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="lastModifiedUserName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/resource/operations/getChildResources" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="getChildResources" direction="IN">
        <datatype name="getChildResources" extendedName="{http://www.compositesw.com/services/system/admin/resource}getChildResources" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}getChildResources" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}getChildResources">
          <schemaDatatype>
            <datatype name="getChildResources" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="getChildResourcesRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="257">
              <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="detail" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="detailLevel" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="getChildResourcesResponse" direction="OUT">
        <datatype name="getChildResourcesResponse" extendedName="{http://www.compositesw.com/services/system/admin/resource}getChildResourcesResponse" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}getChildResourcesResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}getChildResourcesResponse">
          <schemaDatatype>
            <datatype name="getChildResourcesResponse" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="getChildResourcesResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="513">
              <element name="resources" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="resourceList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="769">
                  <element name="resource" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="resource" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1025">
                      <element name="name" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="subtype" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceSubType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="id" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="changeId" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                      </element>
                      <element name="version" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="introspectState" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="introspectState" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="ownerDomain" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="ownerName" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="impactLevel" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="impactLevel" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="impactMessage" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="enabled" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                      </element>
                      <element name="lockState" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="lockState" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1281">
                          <element name="lockOwnerDomain" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="lockOwnerName" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="lockCreateTime" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="dateTime" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DATETIME"/>
                          </element>
                          <element name="lockParentPath" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                        </datatype>
                      </element>
                      <element name="hints" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1537">
                          <element name="hint" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                            <datatype name="attribute" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1793">
                              <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="attributeTypeValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="2049">
                                  <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                    <datatype name="attributeTypeValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="2305">
                                      <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                                        <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                      </element>
                                      <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                      </element>
                                      <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <reference refId="2049"/>
                                      </element>
                                      <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeTypeValueMap" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="2561">
                                          <element name="entry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                            <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="2817">
                                              <element name="key" namespace="http://www.compositesw.com/services/system/util/common">
                                                <reference refId="2305"/>
                                              </element>
                                              <element name="value" namespace="http://www.compositesw.com/services/system/util/common">
                                                <reference refId="2305"/>
                                              </element>
                                            </datatype>
                                          </element>
                                        </datatype>
                                      </element>
                                      <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeSimpleValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="3073">
                                          <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                            <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                          </element>
                                        </datatype>
                                      </element>
                                    </datatype>
                                  </element>
                                </datatype>
                              </element>
                              <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <reference refId="2561"/>
                              </element>
                              <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <reference refId="3073"/>
                              </element>
                              <element name="unset" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                      <element name="annotation" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="attributes" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="attributeList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3329">
                          <element name="attribute" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                            <reference refId="1793"/>
                          </element>
                        </datatype>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="3585">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3841">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/time/DateUtils/BigintToTimestamp" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inBigint" direction="IN">
        <datatype type="INTEGER"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="DATETIME"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* getResourceListChildren:

&#x9;Return a list of the immediate child resources, resource path, type and subtype for a given folder  
    path but not recursively. The input to this is a starting folder and not an actual resource. 
 
&#x9;Input:
   &#x9;&#x9;resourcePath - CIS source folder path to begin deriving a list of resources
&#x9;&#x9;&#x9;Values: e.g. /shared/ASAssets/Utilities [this folder]
&#x9;&#x9;resourceType - The type of folder. 
&#x9;&#x9;&#x9;Values: e.g. CONTAINER|DATA_SOURCE

&#x9;Output:
&#x9;&#x9;OUT result&#x9;&#x9;&#x9;&#x9;&#x9;PIPE (
&#x9;&#x9;&#x9;name                &#x9;VARCHAR(255), 
&#x9;&#x9;&#x9;resPath              &#x9;VARCHAR(4096), 
&#x9;&#x9;&#x9;resType              &#x9;VARCHAR(255), 
&#x9;&#x9;&#x9;subtype             &#x9;VARCHAR(255), 
&#x9;&#x9;&#x9;enabled             &#x9;BIT,
&#x9;&#x9;&#x9;id                  &#x9;INTEGER,
&#x9;&#x9;&#x9;changeid            &#x9;INTEGER,
&#x9;&#x9;&#x9;version&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;introspectState&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;ownerDomain         &#x9;VARCHAR(255),
&#x9;&#x9;&#x9;ownerName           &#x9;VARCHAR(255),
&#x9;&#x9;&#x9;impactLevel         &#x9;VARCHAR(255),
&#x9;&#x9;&#x9;impactMessage       &#x9;VARCHAR(32768),
&#x9;&#x9;&#x9;annotation          &#x9;LONGVARCHAR,
&#x9;&#x9;&#x9;explicitlyDesigned  &#x9;BIT,
&#x9;&#x9;&#x9;isFunction&#x9;&#x9;&#x9;&#x9;BIT,
&#x9;&#x9;&#x9;tableType           &#x9;VARCHAR(255),
&#x9;&#x9;&#x9;sqlText             &#x9;LONGVARCHAR,
&#x9;&#x9;&#x9;scriptText          &#x9;LONGVARCHAR,
&#x9;&#x9;&#x9;proprietaryModel &#x9;&#x9;LONGVARCHAR,
&#x9;&#x9;&#x9;childCount          &#x9;INTEGER,
&#x9;&#x9;&#x9;dataSourceType&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;creationDate&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;creationDateBigint&#x9;&#x9;BIGINT,
&#x9;&#x9;&#x9;creatorUserDomain&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;creatorUserId&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;creatorUserName&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;lastModifiedDate&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;lastModifiedDateBigint&#x9;BIGINT,
&#x9;&#x9;&#x9;lastModifiedUserDomain&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;lastModifiedUserId&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;&#x9;lastModifiedUserName&#x9;VARCHAR(255)
&#x9;&#x9;)

&#x9;Exceptions:
&#x9;&#x9;Error:      Maximum Request Depth(30) exceeded.  Check request structure for unbounded recursion.  
&#x9;&#x9;Resoution:  Go to Administration, Configuration, Composite Server, Configuration, Transactions and set &quot;Maximum Request Depth&quot; to a higher number.

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2014.4&#x9;&#x9;10/20/2014&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.6&#x9;&#x9;&#x9;Created new
&#x9;2020.201&#x9;05/18/2020&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Added additional columns.  Made more efficient by going straight to the API with no other intermediate procedures being called.
&#x9;2020.400&#x9;10/15/2020&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Added XML unescape characters for all attributes.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/ 
PROCEDURE getResourceListChildren(
&#x9;IN resourcePath &#x9;&#x9;VARCHAR(4096), 
&#x9;IN resourceType &#x9;&#x9;VARCHAR, 
&#x9;OUT result&#x9;&#x9;&#x9;&#x9;&#x9;PIPE (
        name                &#x9;VARCHAR(255), 
        resPath              &#x9;VARCHAR(4096), 
        resType              &#x9;VARCHAR(255), 
        subtype             &#x9;VARCHAR(255), 
        enabled             &#x9;BIT,
        id                  &#x9;INTEGER,
        changeid            &#x9;INTEGER,
&#x9;&#x9;version&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;introspectState&#x9;&#x9;&#x9;VARCHAR(255),
        ownerDomain         &#x9;VARCHAR(255),
        ownerName           &#x9;VARCHAR(255),
        impactLevel         &#x9;VARCHAR(255),
        impactMessage       &#x9;VARCHAR(32768),
        annotation          &#x9;LONGVARCHAR,
        explicitlyDesigned  &#x9;BIT,
&#x9;&#x9;isFunction&#x9;&#x9;&#x9;&#x9;BIT,
        tableType           &#x9;VARCHAR(255),
        sqlText             &#x9;LONGVARCHAR,
        scriptText          &#x9;LONGVARCHAR,
        proprietaryModel &#x9;&#x9;LONGVARCHAR,
        childCount          &#x9;INTEGER,
&#x9;&#x9;dataSourceType&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;creationDate&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;creationDateBigint&#x9;&#x9;BIGINT,
&#x9;&#x9;creatorUserDomain&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;creatorUserId&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;creatorUserName&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;lastModifiedDate&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;lastModifiedDateBigint&#x9;BIGINT,
&#x9;&#x9;lastModifiedUserDomain&#x9;VARCHAR(255),
&#x9;&#x9;lastModifiedUserId&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;lastModifiedUserName&#x9;VARCHAR(255)
&#x9;)
)
BEGIN
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;getResourceListChildren&apos;;
&#x9;DECLARE debug&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1) DEFAULT &apos;N&apos;;
&#x9;DECLARE debugPrintSize&#x9;&#x9;&#x9;INTEGER DEFAULT 63900;
&#x9;DECLARE parseResourceNameList&#x9;LONGVARCHAR DEFAULT &apos;name,path,type,subtype,enabled,id,changeId,version,introspectState,ownerDomain,ownerName,impactLevel,impactMessage,&apos;||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;annotation,explicitlyDesigned,isFunction,tableType,sqlText,scriptText,proprietaryModel,childCount,dataSourceType,&apos;;
&#x9;DECLARE type recType&#x9;&#x9;&#x9;ROW(
        name                &#x9;VARCHAR(255), 
        resPath              &#x9;VARCHAR(4096), 
        resType              &#x9;VARCHAR(255), 
        subtype             &#x9;VARCHAR(255), 
        enabled             &#x9;BIT,
        id                  &#x9;INTEGER,
        changeid            &#x9;INTEGER,
&#x9;&#x9;version&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;introspectState&#x9;&#x9;&#x9;VARCHAR(255),
        ownerDomain         &#x9;VARCHAR(255),
        ownerName           &#x9;VARCHAR(255),
        impactLevel         &#x9;VARCHAR(255),
        impactMessage       &#x9;VARCHAR(32768),
        annotation          &#x9;LONGVARCHAR,
        explicitlyDesigned  &#x9;BIT,
&#x9;&#x9;isFunction&#x9;&#x9;&#x9;&#x9;BIT,
        tableType           &#x9;VARCHAR(255),
        sqlText             &#x9;LONGVARCHAR,
        scriptText          &#x9;LONGVARCHAR,
        proprietaryModel &#x9;&#x9;LONGVARCHAR,
        childCount          &#x9;INTEGER,
&#x9;&#x9;dataSourceType&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;creationDate&#x9;&#x9;&#x9;TIMESTAMP,
&#x9;&#x9;creationDateBigint&#x9;&#x9;BIGINT,
&#x9;&#x9;creatorUserDomain&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;creatorUserId&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;creatorUserName&#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;lastModifiedDate&#x9;&#x9;TIMESTAMP,
&#x9;&#x9;lastModifiedDateBigint&#x9;BIGINT,
&#x9;&#x9;lastModifiedUserDomain&#x9;VARCHAR(255),
&#x9;&#x9;lastModifiedUserId&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;lastModifiedUserName&#x9;VARCHAR(255)
&#x9;);
&#x9;DECLARE rec&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;recType;
&#x9;DECLARE request&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE createResponseXML&#x9;&#x9;XML;
&#x9;DECLARE faultResponseXML&#x9;&#x9;XML;
&#x9;DECLARE createResponseStr&#x9;&#x9;LONGVARCHAR;
&#x9;-- XML processing variables
&#x9;DECLARE resourceEntry&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE resourceAttributesEntry&#x9;LONGVARCHAR;
&#x9;DECLARE xmlEntry&#x9;&#x9;&#x9;&#x9;LONGVARCHAR; 
&#x9;DECLARE numResources&#x9;&#x9;&#x9;INTEGER DEFAULT 0;
&#x9;DECLARE numEntries&#x9;&#x9; &#x9;&#x9;INTEGER;
&#x9;DECLARE numFound&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE pos1, pos2&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE pos3, pos4&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE pos5, pos6, len&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE name&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR; 
&#x9;DECLARE nameValue&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE namespaceTag&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE ex&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION;

&#x9;BEGIN INDEPENDENT TRANSACTION
&#x9;&#x9;SET request = 
    &#x9;&#x9;&apos;&lt;ns1:getChildResources &apos;||CHR(10)||
    &#x9;&#x9;&apos;    xmlns:ns1=&quot;http://www.compositesw.com/services/system/admin/resource&quot; &apos;||CHR(10)||
    &#x9;&#x9;&apos;    xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; &apos;||CHR(10)||
    &#x9;&#x9;&apos;    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&apos;||CHR(10)||
    &#x9;&#x9;&apos;    &lt;ns1:path&gt;&apos;||CAST(XMLTEXT(resourcePath) AS LONGVARCHAR)||&apos;&lt;/ns1:path&gt;&apos;||CHR(10)||
    &#x9;&#x9;&apos;    &lt;ns1:type&gt;&apos;||CAST(XMLTEXT(resourceType) AS LONGVARCHAR)||&apos;&lt;/ns1:type&gt;&apos;||CHR(10)||
    &#x9;&#x9;&apos;    &lt;ns1:detail&gt;FULL&lt;/ns1:detail&gt;&apos;||CHR(10)||
    &#x9;&#x9;&apos;&lt;/ns1:getChildResources&gt;&apos;;

&#x9;&#x9;-----------------------------
&#x9;&#x9;-- Invoke Web Service API
&#x9;&#x9;-----------------------------
&#x9;&#x9;CALL /services/webservices/system/admin/resource/operations/getChildResources(request, createResponseXML, faultResponseXML);
&#x9;&#x9;IF (faultResponseXML IS NOT NULL) THEN
&#x9;&#x9;&#x9;RAISE ex VALUE CAST(faultResponseXML AS LONGVARCHAR);
&#x9;&#x9;END IF;

&#x9;&#x9;-- Get the namespace tag=ns1 from [&lt;ns1: and &lt;/ns1:] and replace it with [&lt;resource: and &lt;/resource:]
&#x9;&#x9;SET createResponseStr = CAST(createResponseXML AS LONGVARCHAR);
&#x9;&#x9;IF (createResponseStr IS NOT NULL AND LENGTH(createResponseStr) &gt; 0) THEN
&#x9;&#x9;&#x9;SET pos1 = INSTR(createResponseStr, &apos;&lt;&apos;);
&#x9;&#x9;&#x9;SET pos2 = INSTR(createResponseStr, &apos;:&apos;);
&#x9;&#x9;&#x9;IF (pos1 &gt; 0 AND pos2 &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET namespaceTag = SUBSTRING(createResponseStr, pos1+1, pos2-pos1-1);
&#x9;&#x9;&#x9;&#x9;IF (namespaceTag &lt;&gt; &apos;resource&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET createResponseStr = REPLACE(createResponseStr, &apos;&lt;&apos;||namespaceTag||&apos;:&apos;, &apos;&lt;resource:&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;SET createResponseStr = REPLACE(createResponseStr, &apos;&lt;/&apos;||namespaceTag||&apos;:&apos;, &apos;&lt;/resource:&apos;);
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END IF;
&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL PRINT(&apos;&apos;);
&#x9;&#x9;&#x9;CALL PRINT(SUBSTRING(moduleName||&apos;:     createResponseStr=&apos;||NVL(createResponseStr,&apos;null&apos;),1,debugPrintSize));
&#x9;&#x9;END IF;

&#x9;&#x9;-- Extract resource:resource
&#x9;&#x9;SET pos1 = INSTR(createResponseStr, &apos;&lt;resource:resource&apos;);
&#x9;&#x9;SET pos2 = INSTR(createResponseStr, &apos;&lt;/resource:resource&gt;&apos;);
&#x9;&#x9;WHILE (pos1 &gt; 0 AND pos2 &gt; 0) DO
&#x9;&#x9;&#x9;SET numResources = numResources + 1;
&#x9;&#x9;&#x9;SET len = LENGTH(&apos;&lt;resource:resource&gt;&apos;);
&#x9;&#x9;&#x9;SET resourceEntry = TRIM(SUBSTRING(createResponseStr, pos1, pos2-pos1+len+1));
&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL PRINT(&apos;&apos;);
&#x9;&#x9;&#x9;&#x9;CALL PRINT(SUBSTRING(moduleName||&apos;:     resource:resource[&apos;||numResources||&apos;]:&apos;||NVL(resourceEntry,&apos;null&apos;),1,debugPrintSize));
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- Extract Resource Attributes
&#x9;&#x9;&#x9;SET pos3 = INSTR(resourceEntry, &apos;&lt;resource:attributes&gt;&apos;);
&#x9;&#x9;&#x9;SET pos4 = INSTR(resourceEntry, &apos;&lt;/resource:attributes&gt;&apos;);
&#x9;&#x9;&#x9;SET len = LENGTH(&apos;&lt;resource:attributes&gt;&apos;);
&#x9;&#x9;&#x9;SET resourceAttributesEntry = TRIM(SUBSTRING(resourceEntry, pos3, pos4-pos3+len+1));
&#x9;&#x9;&#x9;IF (UPPER(debug&#x9;) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL PRINT(&apos;&apos;);
&#x9;&#x9;&#x9;&#x9;CALL PRINT(SUBSTRING(moduleName||&apos;:     resource:attributes[&apos;||numResources||&apos;]:&apos;||NVL(resourceAttributesEntry,&apos;null&apos;),1,debugPrintSize));
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- Initialize resource record structure
&#x9;&#x9;&#x9;SET rec = null;

&#x9;&#x9;&#x9;-- Extract all top level resource attributes
&#x9;&#x9;&#x9;SET pos3 = 1;
&#x9;&#x9;&#x9;SET pos4 = INSTR(parseResourceNameList, &apos;,&apos;);
&#x9;&#x9;&#x9;WHILE (pos4 &gt; 0) DO
&#x9;&#x9;&#x9;&#x9;SET name = SUBSTRING(parseResourceNameList, pos3, pos4-pos3);

&#x9;&#x9;&#x9;&#x9;-- Extract the name value
&#x9;&#x9;&#x9;&#x9;SET nameValue = null;
&#x9;&#x9;&#x9;&#x9;SET pos5 = INSTR(resourceEntry, &apos;&lt;resource:&apos;||name||&apos;&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;SET pos6 = INSTR(resourceEntry, &apos;&lt;/resource:&apos;||name||&apos;&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;IF (pos5 &gt; 0 AND pos6 &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET len = LENGTH(&apos;&lt;resource:&apos;||name||&apos;&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;SET nameValue = TRIM(SUBSTRING(resourceEntry, pos5+len, pos6-(pos5+len)));
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(SUBSTRING(moduleName||&apos;:     name=&apos;||NVL(name,&apos;null&apos;)||&apos;  value=&apos;||NVL(nameValue,&apos;[NULL]&apos;),1,debugPrintSize));
&#x9;&#x9;&#x9;&#x9;END IF;

/*
&#x9;The Escape Characters: &#x9;When unescaping parsed data from XML: 
&#x9;quote &#x9;&#x9;&#x9;(&quot;) &#x9;&#x9;&amp;quot; 
&#x9;apostrophe &#x9;&#x9;(&apos;)&#x9;&#x9;&#x9;&amp;apos; 
&#x9;ampersand&#x9;&#x9;(&amp;)&#x9;&#x9;&#x9;&amp;amp;
&#x9;less than &#x9;&#x9;(&lt;) &#x9;&#x9;&amp;lt; 
&#x9;greater than &#x9;(&gt;) &#x9;&#x9;&amp;gt; 
*/
&#x9;&#x9;&#x9;&#x9;IF (INSTR(nameValue, &apos;&amp;&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET nameValue = REPLACE(nameValue, &apos;&amp;lt;&apos;, &apos;&lt;&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;SET&#x9;nameValue = REPLACE(nameValue, &apos;&amp;gt;&apos;, &apos;&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;SET&#x9;nameValue = REPLACE(nameValue, &apos;&amp;apos;&apos;, &apos;&apos;&apos;&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;SET&#x9;nameValue = REPLACE(nameValue, &apos;&amp;quot;&apos;, &apos;&quot;&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;SET&#x9;nameValue = REPLACE(nameValue, &apos;&amp;amp;&apos;, &apos;&amp;&apos;);
&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;-- Assign the resource value to output record structure variables
&#x9;&#x9;&#x9;&#x9;CASE
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;name&apos;) THEN &#x9;&#x9;&#x9;&#x9;SET rec.name = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;path&apos;) THEN &#x9;&#x9;&#x9;&#x9;SET rec.resPath = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;type&apos;) THEN &#x9;&#x9;&#x9;&#x9;SET rec.resType = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;subtype&apos;) THEN &#x9;&#x9;&#x9;SET rec.subtype = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;enabled&apos;) THEN &#x9;&#x9;&#x9;SET rec.enabled = CASE WHEN LOWER(nameValue) = &apos;true&apos; THEN 1 ELSE 0 END;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;id&apos;) THEN &#x9;&#x9;&#x9;&#x9;SET rec.id = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;changeId&apos;) THEN &#x9;&#x9;&#x9;SET rec.changeId = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;version&apos;) THEN &#x9;&#x9;&#x9;SET rec.version = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;introspectState&apos;) THEN &#x9;SET rec.introspectState = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;ownerDomain&apos;) THEN &#x9;&#x9;SET rec.ownerDomain = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;ownerName&apos;) THEN &#x9;&#x9;&#x9;SET rec.ownerName = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;impactLevel&apos;) THEN &#x9;&#x9;SET rec.impactLevel = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;impactMessage&apos;) THEN &#x9;&#x9;SET rec.impactMessage = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;annotation&apos;) THEN &#x9;&#x9;SET rec.annotation = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;explicitlyDesigned&apos;) THEN SET rec.explicitlyDesigned = CASE WHEN LOWER(nameValue) = &apos;true&apos; THEN 1 ELSE 0 END;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;isFunction&apos;) THEN &#x9;&#x9;SET rec.isFunction = CASE WHEN LOWER(nameValue) = &apos;true&apos; THEN 1 ELSE 0 END;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;tableType&apos;) THEN &#x9;&#x9;&#x9;SET rec.tableType = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;sqlText&apos;) THEN &#x9;&#x9;&#x9;SET rec.sqlText = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;scriptText&apos;) THEN &#x9;&#x9;SET rec.scriptText = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;proprietaryModel&apos;) THEN &#x9;SET rec.proprietaryModel = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;childCount&apos;) THEN &#x9;&#x9;SET rec.childCount = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LOWER(name) = LOWER(&apos;dataSourceType&apos;) THEN &#x9;SET rec.dataSourceType = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;END CASE;
&#x9;&#x9;&#x9;&#x9;SET pos3 = pos4+1;
&#x9;&#x9;&#x9;&#x9;SET pos4 = INSTR(parseResourceNameList, &apos;,&apos;,pos3);
&#x9;&#x9;&#x9;END WHILE;

&#x9;&#x9;&#x9;SET numEntries = 0;
&#x9;&#x9;&#x9;SET numFound = 0;
&#x9;&#x9;&#x9;SET pos3 = INSTR(resourceAttributesEntry, &apos;&lt;common:attribute&gt;&apos;);
&#x9;&#x9;&#x9;SET pos4 = INSTR(resourceAttributesEntry, &apos;&lt;/common:attribute&gt;&apos;);
&#x9;&#x9;&#x9;attributeLoop:
&#x9;&#x9;&#x9;WHILE (pos3 &gt; 0 AND pos4 &gt; 0) DO
&#x9;&#x9;&#x9;&#x9;SET len = LENGTH(&apos;&lt;common:attribute&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;SET xmlEntry = &apos;    &apos;||TRIM(SUBSTRING(resourceAttributesEntry, pos3, pos4-pos3+len+1));
&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug&#x9;) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(&apos;&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(SUBSTRING(moduleName||&apos;:     common:attribute[&apos;||numEntries||&apos;]:&apos;||NVL(xmlEntry,&apos;null&apos;),1,debugPrintSize));
&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;-- Extract the name
&#x9;&#x9;&#x9;&#x9;SET name = null;
&#x9;&#x9;&#x9;&#x9;SET pos5 = INSTR(xmlEntry, &apos;&lt;common:name&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;SET pos6 = INSTR(xmlEntry, &apos;&lt;/common:name&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;IF (pos5 &gt; 0 AND pos6 &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET len = LENGTH(&apos;&lt;common:name&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;SET name = TRIM(SUBSTRING(xmlEntry, pos5+len, pos6-(pos5+len)));
&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;-- Extract the name value
&#x9;&#x9;&#x9;&#x9;IF (name IS NOT NULL) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET numEntries = numEntries + 1;
&#x9;&#x9;&#x9;&#x9;&#x9;SET nameValue = null;
&#x9;&#x9;&#x9;&#x9;&#x9;SET pos5 = INSTR(xmlEntry, &apos;&lt;common:value&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;SET pos6 = INSTR(xmlEntry, &apos;&lt;/common:value&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;IF (pos5 &gt; 0 AND pos6 &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET len = LENGTH(&apos;&lt;common:value&gt;&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET nameValue = TRIM(SUBSTRING(xmlEntry, pos5+len, pos6-(pos5+len)));

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Only capture the value if it is not null
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN name = &apos;creationDate&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.creationDateBigint = CAST(nameValue AS BIGINT);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/&quot;time&quot;/DateUtils/BigintToTimestamp(nameValue, rec.creationDate);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET numFound = numFound + 1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN name = &apos;creatorUserDomain&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.creatorUserDomain = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET numFound = numFound + 1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN name = &apos;creatorUserId&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.creatorUserId = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET numFound = numFound + 1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN name = &apos;creatorUserName&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.creatorUserName = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET numFound = numFound + 1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN name = &apos;lastModifiedDate&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.lastModifiedDateBigint = CAST(nameValue AS BIGINT);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/&quot;time&quot;/DateUtils/BigintToTimestamp(nameValue, rec.lastModifiedDate);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET numFound = numFound + 1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN name = &apos;lastModifiedUserDomain&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.lastModifiedUserDomain = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET numFound = numFound + 1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN name = &apos;lastModifiedUserId&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.lastModifiedUserId = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET numFound = numFound + 1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN name = &apos;lastModifiedUserName&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.lastModifiedUserName = nameValue;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET numFound = numFound + 1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END CASE;
&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug&#x9;) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(SUBSTRING(moduleName||&apos;:     common:attribute[&apos;||numEntries||&apos;]/name=&apos;||NVL(name,&apos;null&apos;)||&apos;  /value=&apos;||NVL(nameValue,&apos;[NULL]&apos;),1,debugPrintSize));
&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug&#x9;) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos;:  CURRENT: pos3=&apos;||pos3||&apos;  pos4=&apos;||pos4);
&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;END IF;&#x9;
&#x9;&#x9;&#x9;&#x9;-- If all 8 attributes have been found then leave the loop and avoid further processing.
&#x9;&#x9;&#x9;&#x9;IF (numFound = 8) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;LEAVE attributeLoop;
&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;-- Get the next attributes entry
&#x9;&#x9;&#x9;&#x9;SET pos3 = pos4;
&#x9;&#x9;&#x9;&#x9;SET pos3 = INSTR(resourceAttributesEntry, &apos;&lt;common:attribute&gt;&apos;, pos3+1);
&#x9;&#x9;&#x9;&#x9;SET pos4 = INSTR(resourceAttributesEntry, &apos;&lt;/common:attribute&gt;&apos;, pos4+1);
&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug&#x9;) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos;:  NEXT: pos3=&apos;||pos3||&apos;  pos4=&apos;||pos4);
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;END WHILE;
&#x9;&#x9;&#x9;-- Check the child count
&#x9;&#x9;&#x9;IF (rec.childCount IS NULL) THEN
&#x9;&#x9;&#x9;&#x9;SET rec.childCount = 0;
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- Insert the column results into the PIPE cursor
&#x9;&#x9;&#x9;INSERT INTO result VALUES(rec);

&#x9;&#x9;&#x9;-- Get the next resource entry
&#x9;&#x9;&#x9;SET pos1 = pos2;
&#x9;&#x9;&#x9;SET pos1 = INSTR(createResponseStr, &apos;&lt;resource:resource&apos;, pos1+1);
&#x9;&#x9;&#x9;SET pos2 = INSTR(createResponseStr, &apos;&lt;/resource:resource&gt;&apos;, pos2+1);
&#x9;&#x9;&#x9;IF (UPPER(debug&#x9;) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos;:  NEXT: pos1=&apos;||pos1||&apos;  pos2=&apos;||pos2);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END WHILE;
&#x9;EXCEPTION
&#x9;&#x9;ELSE raise ex value moduleName||&apos;:  &apos;||cast(CURRENT_EXCEPTION.TRACE as longvarchar);
&#x9;END;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609965948495</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">11/378</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/394</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/308</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/307</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/249</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/227</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">12/365</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">12/362</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/205</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/206</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/218</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/217</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/228</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>