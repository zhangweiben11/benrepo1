<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:cde82315-e936-41f1-90c6-32daeeda6afd -->
<metadata name="extractTime" path="/shared/Delta_DV/_scripts/Utilities/time/extractTime" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[extractTime:
&#x9;This procedure takes an input string that is expected to contain a time value. It compares this string
&#x9;against a (non-exhaustive) set of time formats, and extracts the time value.
&#x9;The time formats supported in this procedure are defined as constants in DefaultValues.
 
&#x9;Input:
&#x9;&#x9;inTimeStr - contains any varchar of length 255.  
&#x9;&#x9;&#x9;Values: Any text value in a reasonable date or timestamp format such as ‘12:00:00’
&#x9;&#x9;isMandatory - contains any varchar of length 255.  
&#x9;&#x9;&#x9;Values: 0 means not mandatory, 1 means mandatory. No other values accepted
&#x9;&#x9;debug - defines the debugging options for this procedure.  
&#x9;&#x9;&#x9;Values: Y or T = debugging turned on, N or F = debugging turned off
&#x9;Output:
&#x9;&#x9;extractTime - 1. contains a valid time
&#x9;&#x9;&#x9;&#x9;   2. null if isMandatory=0 and no time could be extracted
&#x9;&#x9;&#x9;&#x9;   3. Exception is thrown if isMandatory=1 and no timestamp could be extracted
&#x9;&#x9;&#x9;Values: null or a time value such as 00:00:00

&#x9;Exceptions:  InvalidTimeException
&#x9;&#x9;&#x9;If isMandatory=0 and no format could be found then return null.
&#x9;&#x9;&#x9;If isMandatory=1 and no format could be found then an exception is thrown.

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2010.3&#x9;&#x9;08/02/2010&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.1.0&#x9;&#x9;&#x9;Created new.
&#x9;2019.200&#x9;05/20/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Removed the use of VECTOR

    (c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]></annotation>
  <parameters>
    <parameter name="inTimeStr" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="isMandatory" direction="IN" nullable="true">
      <datatype name="SMALLINT" type="INTEGER" minValue="-32768" maxValue="32767"/>
    </parameter>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="extractTime" direction="OUT" nullable="true">
      <datatype name="TIME" type="TIME"/>
    </parameter>
  </parameters>
  <security>
    <owner user="nobody" domain="composite"/>
  </security>
  <dependency target="/shared/Delta_DV/_scripts/Utilities" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/ExceptionDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258"></datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/Delta_DV/&quot;_scripts&quot;/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/Delta_DV/_scripts/Utilities/string/extractTextList" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="separator" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="preserveDoubleQuotes" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="preserveSingleQuotes" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="preserveParenthesis" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="preserveQualifier" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="trimResults" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="textExpression">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* extractTime:
&#x9;This procedure takes an input string that is expected to contain a time value. It compares this string
&#x9;against a (non-exhaustive) set of time formats, and extracts the time value.
&#x9;The time formats supported in this procedure are defined as constants in DefaultValues.
 
&#x9;Input:
&#x9;&#x9;inTimeStr - contains any varchar of length 255.  
&#x9;&#x9;&#x9;Values: Any text value in a reasonable date or timestamp format such as ‘12:00:00’
&#x9;&#x9;isMandatory - contains any varchar of length 255.  
&#x9;&#x9;&#x9;Values: 0 means not mandatory, 1 means mandatory. No other values accepted
&#x9;&#x9;debug - defines the debugging options for this procedure.  
&#x9;&#x9;&#x9;Values: Y or T = debugging turned on, N or F = debugging turned off
&#x9;Output:
&#x9;&#x9;extractTime - 1. contains a valid time
&#x9;&#x9;&#x9;&#x9;   2. null if isMandatory=0 and no time could be extracted
&#x9;&#x9;&#x9;&#x9;   3. Exception is thrown if isMandatory=1 and no timestamp could be extracted
&#x9;&#x9;&#x9;Values: null or a time value such as 00:00:00

&#x9;Exceptions:  InvalidTimeException
&#x9;&#x9;&#x9;If isMandatory=0 and no format could be found then return null.
&#x9;&#x9;&#x9;If isMandatory=1 and no format could be found then an exception is thrown.

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2010.3&#x9;&#x9;08/02/2010&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.1.0&#x9;&#x9;&#x9;Created new.
&#x9;2019.200&#x9;05/20/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Removed the use of VECTOR

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE extractTime(
&#x9;IN inTimeStr &#x9;&#x9;&#x9;VARCHAR(255), 
    IN isMandatory &#x9;&#x9;&#x9;SMALLINT,   -- 0 means not mandatory, 1 means mandatory. No other values accepted.
&#x9;IN debug &#x9;&#x9;&#x9;&#x9;CHAR(1), -- true=&apos;Y&apos; and false=&apos;N&apos;&#x9;  
&#x9;OUT extractTime&#x9;&#x9; &#x9;TIME
)
BEGIN
 &#x9;PATH /shared/Delta_DV/&quot;_scripts&quot;/Utilities;
&#x9;DECLARE moduleName &#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;extractTime()&apos;;
&#x9;DECLARE errorMessage&#x9;&#x9;LONGVARCHAR DEFAULT &apos;&apos;;
&#x9;DECLARE i&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER DEFAULT 0;
&#x9;DECLARE timeStr &#x9;&#x9;&#x9;VARCHAR; 
&#x9;DECLARE pattern&#x9;&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE timeFormatList&#x9;&#x9;LONGVARCHAR DEFAULT
&#x9;&#x9;&#x9;&#x9;&#x9;   &apos;hh24:mi:ss.ff|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hh24:mi:ss|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hh24:mi|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hh24&apos;;

&#x9;set timeStr = TRIM(NVL(inTimeStr,&apos;  &apos;));
&#x9;-- Initialize it.
&#x9;SET extractTime = NULL;
&#x9;SET pattern = &apos;&apos;;

&#x9;IF (LENGTH(timeStr) &gt; 0) THEN
&#x9;    dateLoop:
&#x9;&#x9;FOR r AS 
&#x9;&#x9;&#x9;SELECT * FROM /shared/Delta_DV/&quot;_scripts&quot;/Utilities/string/extractTextList(REPLACE(timeFormatList,CHR(10), &apos;&apos;), &apos;|&apos;, 0, 0, 0, 0, 1)
&#x9;&#x9;&#x9;WHERE textExpression IS NOT NULL AND LENGTH(TRIM(textExpression)) &gt; 0
&#x9;&#x9;DO
&#x9;&#x9;&#x9;SET i = i + 1;
&#x9;&#x9;&#x9;SET pattern = r.textExpression;
&#x9;&#x9;&#x9;--CALL print(&apos;i=&apos;||i||&apos;  pattern=&apos;||NVL(pattern,&apos;null&apos;));
&#x9;    &#x9;BEGIN
&#x9;&#x9;&#x9;&#x9;SET extractTime = PARSE_TIME(timeStr, pattern);
&#x9;&#x9;&#x9;&#x9;LEAVE dateLoop;
&#x9;    &#x9;EXCEPTION
&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;    &#x9;END;
&#x9;&#x9;END FOR;
&#x9;    IF (extractTime IS NULL) THEN
&#x9;&#x9;&#x9;SET i = 0;
&#x9;&#x9;&#x9;SET pattern = &apos;&apos;;
&#x9;    END IF;
&#x9;END IF;

&#x9;IF (UPPER(debug) = &apos;Y&apos; or UPPER(debug) = &apos;T&apos;) THEN
&#x9;&#x9;call /shared/Delta_DV/&quot;_scripts&quot;/Utilities/log/logDebugMessage(moduleName,debug,
&#x9;&#x9;&#x9;&apos;length=&apos;|| length(TRIM(NVL(inTimeStr,&apos;  &apos;))) || 
&#x9;&#x9;&#x9;&apos;,  inTimeStr=&apos;||TRIM(NVL(inTimeStr,&apos;  &apos;)) || 
&#x9;&#x9;&#x9;&apos;,  extractTime=&apos;||TRIM(NVL(CAST(extractTime AS VARCHAR),&apos;  &apos;)) || 
&#x9;&#x9;&#x9;&apos;   Pattern[&apos;|| i || &apos;]=[&apos;|| pattern || &apos;]&apos;);&#x9;
&#x9;END IF;
&#x9;IF (extractTime is null) THEN
&#x9;&#x9;IF (isMandatory = 1) THEN
&#x9;&#x9;&#x9;-- Mandatory means if we cannot extract a valid time, then we have to raise an exception.
&#x9;&#x9;&#x9;SET errorMessage = &apos;ERROR: extractTime(): isMandatory=1. Unable to process date=[&apos;|| timeStr || &apos;]&apos;;
&#x9;    &#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/log/logDebugMessage(moduleName,&apos;Y&apos;,errorMessage);&#x9;
&#x9;&#x9;&#x9;RAISE /shared/Delta_DV/&quot;_scripts&quot;/Utilities/ExceptionDefinitions.InvalidTimeException value errorMessage;
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;-- Not mandatory means if we cannot produce a valid timestamp, just return NULL (which has been set already).
&#x9;&#x9;&#x9;-- Do not raise exception here.
&#x9;&#x9;&#x9;SET errorMessage = &apos;WARNING: extractTime(): isMandatory=0 or null. Unable to process this date=[&apos;|| timeStr || &apos;]. NULL value returned.&apos;;
&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos; or UPPER(debug) = &apos;T&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL /shared/Delta_DV/&quot;_scripts&quot;/Utilities/log/logDebugMessage(moduleName,debug,errorMessage);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END IF;
&#x9;END IF;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1609965948495</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>