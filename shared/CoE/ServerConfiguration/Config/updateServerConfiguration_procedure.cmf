<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:4eac6a34-df40-4265-b123-32a6ac34cac2 -->
<metadata name="updateServerConfiguration" path="/shared/CoE/ServerConfiguration/Config/updateServerConfiguration" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="performUpdateConfig" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="environmentName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="numRowsTotal" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="numRowsUpdated" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="numRowsSkipped" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="numRowsError" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="message" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege user="anonymous" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/GetProperty" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="property" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyName" type="STRING" maxLength="255"/>
      </element>
      <element name="result" direction="OUT">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyValue" type="STRING" maxLength="4096"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inPath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getBasicResourceCursor_SQL_TABLE" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="fullResourcePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="resourceId">
            <datatype type="INTEGER"/>
          </element>
          <element name="resourceName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resourcePath">
            <datatype type="STRING" maxLength="1024"/>
          </element>
          <element name="resourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="changeId">
            <datatype type="INTEGER"/>
          </element>
          <element name="ownerName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactLevel">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="explicitlyDesigned">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="tableType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="sqlText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="proprietaryModel">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="columnNum">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="columnName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="columnType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="nativeBaseType">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="nativeType">
            <datatype type="STRING" maxLength="32768"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/server/updateServerConfiguration" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="environmentName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="serverConfigurationSql" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="numRowsTotal" direction="OUT">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="numRowsUpdated" direction="OUT">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="numRowsSkipped" direction="OUT">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="numRowsError" direction="OUT">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="message" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*
&#x9;updateServerConfiguration:

&#x9;This procedure updates the server configuration for a given hostname using the server configuration spreadsheet.
&#x9;Any column in the spreadsheet must have a first row column name with the hostname contained as the column name.
&#x9;It does not have to be exact.  The column name just must have hostname present.  There can be other text before and after the hostname.

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;2020.201&#x9;05/13/2020&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Created new

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE updateServerConfiguration(
&#x9;IN debug&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1),&#x9;&#x9;-- Y=debug on.  N=debug off.
&#x9;IN performUpdateConfig&#x9;&#x9;CHAR(1),&#x9;&#x9;-- Y=perform the server configuration upate.  N=do not perform the update.
&#x9;IN environmentName&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- The input environment name contained within the spreadsheet.  Example: DEV, UAT, PROD
&#x9;OUT result&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR, &#x9;&#x9;-- SUCCESS, FAIL or an exception is thrown
&#x9;OUT numRowsTotal&#x9;&#x9;&#x9;INTEGER,&#x9;&#x9;-- The total number of rows processed.
&#x9;OUT numRowsUpdated&#x9;&#x9;&#x9;INTEGER,&#x9;&#x9;-- The number of rows updated.
&#x9;OUT numRowsSkipped&#x9;&#x9;&#x9;INTEGER,&#x9;&#x9;-- The number of rows skipped and not updated.
&#x9;OUT numRowsError&#x9;&#x9;&#x9;INTEGER,&#x9;&#x9;-- The number of rows with exceptions.
&#x9;OUT message&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR&#x9;&#x9;-- Null if no messages or the list of messages.  Format: attributepath=[updateAttributeValue]  EXCEPTION=[exception message]CHR(10)
)
BEGIN
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;updateServerConfiguration&apos;;
&#x9;DECLARE attrName&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;&quot;Attribute Path:&quot;&apos;;
&#x9;DECLARE execName&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;&quot;Execute:&quot;&apos;;
&#x9;DECLARE exelTablePath&#x9;&#x9;&#x9;VARCHAR(4000) DEFAULT &apos;/shared/CoE/ServerConfiguration/Datasources/ServerConfiguration/CoeServerConfiguration.xlsx/ServerConfig&apos;;
&#x9;-- The SQL statement to the ServerConfiguration spreadsheet, table or view.&#x9;Procedures are not supported within the FROM clause.
&#x9;--  The SQL Statement must have only 3 columns [environment, attrName, attrValue].  Where clause and order by are not needed.
&#x9;-- The spreadsheet, table or view may have more columns but the SQL statement must only specify the three shown below:
&#x9;--&#x9;&#x9;1. environment - the environment designation for the parameters listed.  Allows more than one environment to be stored within source.
&#x9;--&#x9;&#x9;2. attrName - the full path to the attribute.
&#x9;--&#x9;&#x9;3. attrValue - the configuration value to be updated.  If the value of &apos;null&apos; is found, it is converted to an actual null value.
&#x9;-- Example: select environment, attrName, attrValue from /shared/Common/ServerConfig/ServerConfiguration/ServerConfiguration.xlsx/ServerConfiguration
&#x9;-- Note: It is not necessary to place double-quotes around paths.  This will be taken care of within this procedure.
&#x9;DECLARE serverConfigurationSql&#x9;LONGVARCHAR;
&#x9;DECLARE hostname&#x9;&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE hostnamePart1&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE pos&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE columnName&#x9;&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE columnNameList&#x9;&#x9;&#x9;LONGVARCHAR DEFAULT &apos;&apos;;
&#x9;DECLARE ex&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION;

&#x9;SET result = &apos;SUCCESS&apos;;
&#x9;IF (environmentName IS NULL OR LENGTH(TRIM(environmentName)) = 0) THEN
&#x9;&#x9;RAISE ex VALUE moduleName||&apos; : The input parameter &quot;environmentName&quot; may not be null or emptly.&apos;;
&#x9;END IF;

&#x9;-------------------------------------------
&#x9;-- Dynamically determine [attrValue] column name
&#x9;--------------------------------------------
&#x9;-- Get the current hostname
&#x9;SELECT A.result INTO hostname FROM /lib/util/GetProperty(&apos;SERVER_HOSTNAME&apos;) A;
&#x9;-- Extract the first part of the hostname as in hostpart1.part2.part3
&#x9;SET pos = INSTR(hostname, &apos;.&apos;);
&#x9;IF (pos &gt; 0) THEN
&#x9;&#x9;SET hostnamePart1 = SUBSTRING(hostname, 1, pos-1);
&#x9;ELSE
&#x9;&#x9;SET hostnamePart1 = hostname;
&#x9;END IF;
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos; : hostname=[&apos;||NVL(hostname,&apos;null&apos;)||&apos;]  hostnamePart1=[&apos;||NVL(hostnamePart1,&apos;null&apos;)||&apos;]&apos;);
&#x9;END IF;

&#x9;-- Get the children from the server configuration spreadsheet
&#x9;columnLoop:
&#x9;FOR r AS
&#x9;&#x9;SELECT columnName FROM /shared/ASAssets/Utilities/repository/getBasicResourceCursor_SQL_TABLE(exelTablePath, &apos;TABLE&apos;)
&#x9;&#x9;WHERE columnName IS NOT NULL 
&#x9;&#x9;  AND LOWER(columnName) LIKE &apos;%&apos;||LOWER(hostnamePart1)||&apos;%&apos;
&#x9;DO
&#x9;&#x9;SET columnName = &apos;&quot;&apos;||r.columnName||&apos;&quot;&apos;;
&#x9;&#x9;LEAVE columnLoop;
&#x9;END FOR;
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos; : columnName=[&apos;||NVL(columnName,&apos;null&apos;)||&apos;]&apos;);
&#x9;END IF;
&#x9;-- Raise an exception if the column name is null.
&#x9;IF (columnName IS NULL) THEN
&#x9;&#x9;FOR r AS
&#x9;&#x9;&#x9;SELECT columnName FROM /shared/ASAssets/Utilities/repository/getBasicResourceCursor_SQL_TABLE(exelTablePath, &apos;TABLE&apos;)
&#x9;&#x9;&#x9;WHERE columnName IS NOT NULL
&#x9;&#x9;&#x9;  AND LENGTH(TRIM(columnName)) &gt; 0
&#x9;&#x9;&#x9;  AND INSTR(LOWER(columnName), &apos;col&apos;) = 0 
&#x9;&#x9;DO
&#x9;&#x9;&#x9;IF (LENGTH(columnNameList) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET columnNameList = columnNameList || &apos;,&apos;;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;SET columnNameList = columnNameList || &apos;&quot;&apos;||LOWER(r.columnName)||&apos;&quot;&apos;;
&#x9;&#x9;END FOR;

&#x9;&#x9;RAISE ex VALUE &apos;There is no column name in the target spreadsheet matching &apos;&apos;%&apos;||LOWER(hostnamePart1)||&apos;%&apos;&apos;.  The column list includes [&apos;||columnNameList||&apos;]&apos;;
&#x9;END IF;

&#x9;-------------------------------------------
&#x9;-- Dynamically Create the SQL Statement
&#x9;--------------------------------------------
&#x9;-- Put double quotes around path parts that need it.
&#x9;CALL /shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath(exelTablePath, null, exelTablePath);
&#x9;SET serverConfigurationSql =
&#x9;&#x9;&apos;SELECT &apos;||CHR(10)||
&#x9;&#x9;&apos;    &apos;&apos;&apos;||environmentName||&apos;&apos;&apos; environment, &apos;||CHR(10)||
&#x9;&#x9;&apos;    [attrName] attrName,  &apos;||CHR(10)||
&#x9;&#x9;&apos;    CASE WHEN INSTR([attrValue], &apos;&apos;[hostname]&apos;&apos;) &gt; 0 THEN REPLACE([attrValue], &apos;&apos;[hostname]&apos;&apos;, &apos;&apos;&apos;||hostnamePart1||&apos;&apos;&apos;) ELSE [attrValue] END attrValue&apos;||CHR(10)||
&#x9;&#x9;&apos;FROM &apos;||exelTablePath||&apos; &apos;||CHR(10)||
&#x9;&#x9;&apos;WHERE UPPER(&apos;||execName||&apos;) = &apos;&apos;Y&apos;&apos;&apos;;

&#x9;-------------------------------------------
&#x9;-- Replace the attribute name
&#x9;-------------------------------------------
&#x9;SET serverConfigurationSql = REPLACE(serverConfigurationSql, &apos;[attrName]&apos;, attrName);

&#x9;-------------------------------------------
&#x9;-- Replace the attribute Value column name
&#x9;-------------------------------------------
&#x9;SET serverConfigurationSql = REPLACE(serverConfigurationSql, &apos;[attrValue]&apos;, columnName);

&#x9;-------------------------------------------
&#x9;-- Print out SQL Statement
&#x9;--------------------------------------------
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos; : serverConfigurationSql=&apos;||CHR(10)||NVL(serverConfigurationSql,&apos;null&apos;));
&#x9;END IF;
&#x9;IF (serverConfigurationSql IS NULL) THEN
&#x9;&#x9;RAISE ex VALUE moduleName||&apos; : The &quot;serverConfigurationSql&quot; is null&apos;;
&#x9;END IF;

&#x9;-------------------------------------------
&#x9;-- Print out SQL Statement
&#x9;--------------------------------------------
&#x9;IF (UPPER(performUpdateConfig) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL /shared/ASAssets/Utilities/repository/server/updateServerConfiguration(
&#x9;&#x9;&#x9;debug,&#x9;&#x9;&#x9;&#x9;&#x9;-- Y=debug on.  N=debug off.
&#x9;&#x9;&#x9;environmentName&#x9;,&#x9;&#x9;-- The input environment name contained within the spreadsheet.  Example: DEV, UAT, PROD
&#x9;&#x9;&#x9;serverConfigurationSql,&#x9;-- The SQL statement to the ServerConfiguration spreadsheet, table or view.&#x9;Procedures are not supported within the FROM clause.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--  The SQL Statement must have only 3 columns [environment, attrName, attrValue].  Where clause and order by are not needed.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- The spreadsheet, table or view may have more columns but the SQL statement must only specify the three shown below:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;1. environment - the environment designation for the parameters listed.  Allows more than one environment to be stored within source.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;2. attrName - the full path to the attribute.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;3. attrValue - the configuration value to be updated.  If the value of &apos;null&apos; is found, it is converted to an actual null value.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Example: select environment, attrName, attrValue from /shared/Common/ServerConfig/ServerConfiguration/ServerConfiguration.xlsx/ServerConfiguration
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Note: It is not necessary to place double-quotes around paths.  This will be taken care of within this procedure.
&#x9;&#x9;&#x9;numRowsTotal,&#x9;&#x9;&#x9;-- The total number of rows processed.
&#x9;&#x9;&#x9;numRowsUpdated,&#x9;&#x9;&#x9;-- The number of rows updated.
&#x9;&#x9;&#x9;numRowsSkipped,&#x9;&#x9;&#x9;-- The number of rows skipped and not updated.
&#x9;&#x9;&#x9;numRowsError,&#x9;&#x9;&#x9;-- The number of rows with exceptions.
&#x9;&#x9;&#x9;message&#x9;&#x9;&#x9;&#x9;&#x9;-- Null if no messages or the list of messages.  Format: attributepath=[updateAttributeValue]  EXCEPTION=[exception message]CHR(10)
&#x9;&#x9;);
&#x9;&#x9;IF (INSTR(message, &apos;EXCEPTION=&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;SET result = &apos;FAIL&apos;;
&#x9;&#x9;END IF;
&#x9;END IF;
END</attribute>
  <attribute name="creationDate" type="LONG">1587590595332</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1593880942118</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">8/78</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/138</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/92</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1587590595332</attribute>
</metadata>