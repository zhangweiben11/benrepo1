<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:4eac6a34-df40-4265-b123-32a6ac34cac2 -->
<metadata name="getServerNames" path="/shared/CoE/MonitorServer/Common/getServerNames" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[getServerNames:

    Get the list of server names for a single node or cluster.

&#x9;Release&#x9;&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2019.402&#x9;12/04/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Created new.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]></annotation>
  <parameters>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="256">
        <element name="iscluster">
          <datatype name="BOOLEAN" type="BOOLEAN"/>
        </element>
        <element name="isCurrentNode">
          <datatype name="BOOLEAN" type="BOOLEAN"/>
        </element>
        <element name="isDedicatedTimekeeper">
          <datatype name="BOOLEAN" type="BOOLEAN"/>
        </element>
        <element name="isTimeKeeper">
          <datatype name="BOOLEAN" type="BOOLEAN"/>
        </element>
        <element name="hostName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="server_port">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="nodeSuffix">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="status">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/GetProperty" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="property" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyName" type="STRING" maxLength="255"/>
      </element>
      <element name="result" direction="OUT">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyValue" type="STRING" maxLength="4096"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/services/databases/system/SYS_CLUSTER" type="TABLE">
    <datatype type="TABLE" refId="256">
      <element name="SERVER_ID">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="SERVER_NAME">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="SERVER_HOST">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="SERVER_PORT">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="STATUS">
        <datatype type="STRING" maxLength="24"/>
      </element>
      <element name="TIMEKEEPER">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="CONNECT_TIME">
        <datatype type="DATETIME"/>
      </element>
      <element name="LAST_CONTACT">
        <datatype type="DATETIME"/>
      </element>
      <element name="IDLE_DURATION">
        <datatype type="INTEGER"/>
      </element>
      <element name="NUM_CONNECTS">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="BYTES_TO">
        <datatype type="INTEGER"/>
      </element>
      <element name="BYTES_FROM">
        <datatype type="INTEGER"/>
      </element>
      <element name="MESSAGE">
        <datatype type="STRING" maxLength="65535"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/CoE/MonitorServer/Customize/commonValues" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
&#x9;getServerNames:

    Get the list of server names for a single node or cluster.
&#x9;The nodeSuffix is N## and is determined by the ascending alphabetic order of the hostname and port.
&#x9;&#x9;Example 1:  Give host1:9400 and host1:9500.   host1:9400=N01, host1:9500=N02
&#x9;&#x9;Example 2:  Give host1:9400 and host2:9400.   host1:9400=N01, host2:9400=N02
&#x9;&#x9;&#x9;
&#x9;Release&#x9;&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2019.402&#x9;12/04/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Created new.
&#x9;2020.200&#x9;05/27/2020&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Adapted from KPImetrics.
&#x9;2020.300&#x9;08/25/2020&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8/8.3&#x9;&#x9;Fixed reserved word port to server_port for 8.3.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.
*/
PROCEDURE getServerNames(
&#x9;OUT result &#x9;&#x9;&#x9;&#x9;&#x9;PIPE(
&#x9;&#x9;iscluster&#x9;&#x9;&#x9;&#x9;BOOLEAN,
&#x9;&#x9;isCurrentNode&#x9;&#x9;&#x9;BOOLEAN,
&#x9;&#x9;isDedicatedTimekeeper&#x9;BOOLEAN,
&#x9;&#x9;isTimeKeeper&#x9;&#x9;&#x9;BOOLEAN,
&#x9;&#x9;hostName&#x9;&#x9;&#x9;&#x9;VARCHAR,
&#x9;&#x9;server_port&#x9;&#x9;&#x9;&#x9;INTEGER,
&#x9;&#x9;nodeSuffix&#x9;&#x9;&#x9;&#x9;VARCHAR,
&#x9;&#x9;status&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR
&#x9;)
)
BEGIN
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;getServerNames&apos;;
&#x9;DECLARE debug&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1) DEFAULT &apos;N&apos;;
&#x9;DECLARE TYPE recType&#x9;&#x9;&#x9;&#x9;&#x9;ROW (
&#x9;&#x9;iscluster&#x9;&#x9;&#x9;&#x9;BOOLEAN,
&#x9;&#x9;isCurrentNode&#x9;&#x9;&#x9;BOOLEAN,
&#x9;&#x9;isDedicatedTimekeeper&#x9;BOOLEAN,
&#x9;&#x9;isTimeKeeper&#x9;&#x9;&#x9;BOOLEAN,
&#x9;&#x9;hostName&#x9;&#x9;&#x9;&#x9;VARCHAR,
&#x9;&#x9;server_port&#x9;&#x9;&#x9;&#x9;INTEGER,
&#x9;&#x9;nodeSuffix&#x9;&#x9;&#x9;&#x9;VARCHAR,
&#x9;&#x9;status&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR
&#x9;);
&#x9;DECLARE rec&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;recType;
&#x9;DECLARE currentHostname&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE currentPort&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE jdbcPort&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE numServers&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER DEFAULT 0;
&#x9;DECLARE nodeNum&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER DEFAULT 0;
&#x9;DECLARE numberOfWorkerNodes&#x9;&#x9;&#x9;&#x9;INTEGER DEFAULT 0;
&#x9;DECLARE hostnamePortList &#x9;&#x9;&#x9;&#x9;LONGVARCHAR DEFAULT &apos;&apos;;
&#x9;DECLARE dedicatedTimeKeeperFound&#x9;&#x9;BOOLEAN DEFAULT false;
&#x9;DECLARE dedicatedTimeKeeperHostname&#x9;&#x9;VARCHAR DEFAULT /shared/CoE/MonitorServer/Customize/commonValues.dedicatedTimeKeeperHostname;
&#x9;DECLARE dedicatedTimeKeeperPort&#x9;&#x9;&#x9;INTEGER DEFAULT /shared/CoE/MonitorServer/Customize/commonValues.dedicatedTimeKeeperPort;
&#x9;DECLARE totalNumberWorkerNodes&#x9;&#x9;&#x9;INTEGER DEFAULT /shared/CoE/MonitorServer/Customize/commonValues.totalNumberWorkerNodes;
&#x9;DECLARE ex&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION;

&#x9;-- Validate commonValues.totalNumberWorkerNodes
&#x9;IF (totalNumberWorkerNodes IS NULL OR totalNumberWorkerNodes &lt;= 0) THEN
&#x9;&#x9;RAISE ex VALUE &apos;The value of commonValues.totalNumberWorkerNodes[&apos;||NVL(CAST(totalNumberWorkerNodes AS VARCHAR),&apos;null&apos;)||&apos;] may not be NULL or &lt;= 0.&apos;;
&#x9;END IF;

&#x9;-- If no cluster then get the current host and port first in order to insure that it is output first in the cluster list.
&#x9;SELECT A.result INTO currentHostname FROM /lib/util/GetProperty(&apos;SERVER_HOSTNAME&apos;) A;
&#x9;SELECT A.result INTO jdbcPort FROM /lib/util/GetProperty(&apos;SERVER_JDBC_PORT&apos;) A;
&#x9;SET currentPort = CAST(jdbcPort as INTEGER) - 1;

&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(&apos;dedicatedTimeKeeperHostname=&apos;||NVL(dedicatedTimeKeeperHostname,&apos;null&apos;));
&#x9;&#x9;CALL PRINT(&apos;dedicatedTimeKeeperPort=&apos;||NVL(CAST(dedicatedTimeKeeperPort AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;CALL PRINT(&apos;totalNumberWorkerNodes=&apos;||NVL(CAST(totalNumberWorkerNodes AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;CALL PRINT(&apos;&apos;);
&#x9;&#x9;CALL PRINT(&apos;currentHostname=&apos;||NVL(currentHostname,&apos;null&apos;));
&#x9;&#x9;CALL PRINT(&apos;currentPort=&apos;||NVL(CAST(currentPort AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;CALL PRINT(&apos;&apos;);
&#x9;END IF;

&#x9;BEGIN INDEPENDENT TRANSACTION
&#x9;&#x9;-- get the server names in the cluster
&#x9;&#x9;FOR r AS 
&#x9;&#x9;&#x9;SELECT LOWER(SERVER_HOST) hostname, SERVER_PORT server_port, TIMEKEEPER timekeeper, STATUS status
&#x9;&#x9;&#x9;FROM /services/databases/system/SYS_CLUSTER
&#x9;&#x9;&#x9;ORDER BY LOWER(SERVER_HOST), SERVER_PORT
&#x9;&#x9;DO
&#x9;&#x9;&#x9;SET numServers = numServers + 1;
&#x9;&#x9;&#x9;SET rec.isCluster = true;
&#x9;&#x9;&#x9;SET rec.hostname = r.hostname;
&#x9;&#x9;&#x9;SET rec.server_port = r.server_port;
&#x9;&#x9;&#x9;SET rec.status = r.status;

&#x9;&#x9;&#x9;-- Add the hostname and port to the list
&#x9;&#x9;&#x9;IF (LENGTH(hostnamePortList) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET hostnamePortList = hostnamePortList || &apos;|&apos;;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;SET hostnamePortList = hostnamePortList || r.hostname||&apos;::&apos;||r.server_port;

&#x9;&#x9;&#x9;-- Check to see if this is the current node this process is running on.
&#x9;&#x9;&#x9;SET rec.isCurrentNode = false;
&#x9;&#x9;&#x9;IF (LOWER(currentHostname) = LOWER(r.hostname) AND currentPort = r.server_port) THEN
&#x9;&#x9;&#x9;&#x9;SET rec.isCurrentNode = true;
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- Determine if the node is a dedicated timekeeper or not.
&#x9;&#x9;&#x9;SET rec.isDedicatedTimekeeper = false;
&#x9;&#x9;&#x9;IF (dedicatedTimeKeeperHostname IS NOT NULL AND LENGTH(TRIM(dedicatedTimeKeeperHostname)) &gt; 0 AND dedicatedTimeKeeperPort IS NOT NULL AND dedicatedTimeKeeperPort &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;IF (LOWER(r.hostname) = LOWER(dedicatedTimeKeeperHostname) AND r.server_port = dedicatedTimeKeeperPort) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET rec.isDedicatedTimekeeper = true;
&#x9;&#x9;&#x9;&#x9;&#x9;SET dedicatedTimeKeeperFound = true;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- Check the current timekeeper status of this node
&#x9;&#x9;&#x9;SET rec.isTimekeeper = false;
&#x9;&#x9;&#x9;IF (r.timekeeper = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;SET rec.isTimekeeper = true;
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- Only increment the node number if this is not a dedicated timekeeper node.  
&#x9;&#x9;&#x9;-- KPImetrics processes do not run on dedicated timekeeper nodes so don&apos;t count them.
&#x9;&#x9;&#x9;IF (NOT rec.isDedicatedTimekeeper) THEN
&#x9;&#x9;&#x9;&#x9;SET nodeNum = nodeNum + 1;
&#x9;&#x9;&#x9;&#x9;SET numberOfWorkerNodes = numberOfWorkerNodes + 1;
&#x9;&#x9;&#x9;&#x9;SET rec.nodeSuffix = &apos;N&apos;||LPAD(CAST(nodeNum AS VARCHAR),2,&apos;0&apos;);
&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;SET rec.nodeSuffix = &apos;N00&apos;;
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL PRINT(&apos;numServers=&apos;||numServers||&apos;  numberOfWorkerNodes=&apos;||numberOfWorkerNodes);
&#x9;&#x9;&#x9;&#x9;CALL PRINT(&apos;   rec.iscluster=&apos;||NVL(CAST(rec.iscluster AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;CALL PRINT(&apos;   rec.isDedicatedTimekeeper=&apos;||NVL(CAST(rec.isDedicatedTimekeeper AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;CALL PRINT(&apos;   rec.isCurrentNode=&apos;||NVL(CAST(rec.isCurrentNode AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;CALL PRINT(&apos;   rec.hostName=&apos;||NVL(CAST(rec.hostName AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;CALL PRINT(&apos;   rec.server_port=&apos;||NVL(CAST(rec.server_port AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;CALL PRINT(&apos;   rec.nodeSuffix=&apos;||NVL(CAST(rec.nodeSuffix AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;CALL PRINT(&apos;   rec.status=&apos;||NVL(CAST(rec.status AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- Insert the record into the result pipe
&#x9;&#x9;&#x9;INSERT INTO result VALUES(rec);
&#x9;&#x9;END FOR;
&#x9;EXCEPTION
&#x9;&#x9;ELSE RAISE;
&#x9;END;

&#x9;IF (numServers = 0) THEN
&#x9;&#x9;SET numServers = 1;
&#x9;&#x9;SET numberOfWorkerNodes = 1;

&#x9;&#x9;-- Add the current single node host and port to the list. 
&#x9;&#x9;SET hostnamePortList = currentHostname||&apos;::&apos;||currentPort;
&#x9;&#x9;SET rec.iscluster = false;
&#x9;&#x9;SET rec.isCurrentNode = true;
&#x9;&#x9;SET rec.isDedicatedTimekeeper = false;
&#x9;&#x9;SET rec.isTimekeeper = false;
&#x9;&#x9;SET rec.hostname = currentHostname;
&#x9;&#x9;SET rec.server_port = currentPort;
&#x9;&#x9;SET rec.nodeSuffix = &apos;N01&apos;;
&#x9;&#x9;SET rec.status = &apos;OPERATIONAL&apos;;

&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL PRINT(&apos;numServers=&apos;||numServers||&apos;  numberOfWorkerNodes=&apos;||numberOfWorkerNodes);
&#x9;&#x9;&#x9;CALL PRINT(&apos;   rec.iscluster=&apos;||NVL(CAST(rec.iscluster AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;&#x9;CALL PRINT(&apos;   rec.isDedicatedTimekeeper=&apos;||NVL(CAST(rec.isDedicatedTimekeeper AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;&#x9;CALL PRINT(&apos;   rec.isCurrentNode=&apos;||NVL(CAST(rec.isCurrentNode AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;&#x9;CALL PRINT(&apos;   rec.hostName=&apos;||NVL(CAST(rec.hostName AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;&#x9;CALL PRINT(&apos;   rec.server_port=&apos;||NVL(CAST(rec.server_port AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;&#x9;CALL PRINT(&apos;   rec.nodeSuffix=&apos;||NVL(CAST(rec.nodeSuffix AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;&#x9;CALL PRINT(&apos;   rec.status=&apos;||NVL(CAST(rec.status AS VARCHAR),&apos;null&apos;));
&#x9;&#x9;END IF;

&#x9;&#x9;-- Insert the record into the result pipe
&#x9;&#x9;INSERT INTO result VALUES(rec);
&#x9;END IF;

&#x9;-- Validate that the dedicated hostname and port were found.  If not then the configuration was wrong.
&#x9;-- Throw an exception if not equal.
&#x9;IF (NOT dedicatedTimeKeeperFound AND dedicatedTimeKeeperHostname IS NOT NULL AND LENGTH(TRIM(dedicatedTimeKeeperHostname)) &gt; 0 AND dedicatedTimeKeeperPort IS NOT NULL AND dedicatedTimeKeeperPort &gt; 0) THEN
&#x9;&#x9;RAISE ex VALUE &apos;The configured commonValues.dedicatedTimeKeeperHostname[&apos;||NVL(dedicatedTimeKeeperHostname,&apos;null&apos;)||&apos;] and dedicatedTimeKeeperPort[&apos;||NVL(CAST(dedicatedTimeKeeperPort AS VARCHAR),&apos;null&apos;)||&apos;] was not found in the list of cluster nodes [&apos;||NVL(hostnamePortList,&apos;null&apos;)||&apos;].&apos;;
&#x9;END IF;

&#x9;-- Validate the totalNumberWorkerNodes is the same as the numberOfWorkerNodes found in the cluster.
&#x9;-- Throw an exception if not equal.
&#x9;IF (totalNumberWorkerNodes &lt;&gt; numberOfWorkerNodes) THEN
&#x9;&#x9;RAISE ex VALUE &apos;The configured commonValues.totalNumberWorkerNodes[&apos;||totalNumberWorkerNodes||&apos;] != numberOfWorkerNodes[&apos;||numberOfWorkerNodes||&apos;] [the actual number of nodes].&apos;;
&#x9;END IF;
END </attribute>
  <attribute name="creationDate" type="LONG">1575488595108</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1601333668980</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">9/175</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/174</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/177</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/176</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/179</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/178</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/83</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/142</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/84</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/141</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/81</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/140</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/180</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/82</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/85</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/173</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/86</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/147</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/146</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/80</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/145</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/144</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/143</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1575488595108</attribute>
</metadata>