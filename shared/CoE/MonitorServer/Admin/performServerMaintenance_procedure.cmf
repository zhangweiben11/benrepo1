<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:4eac6a34-df40-4265-b123-32a6ac34cac2 -->
<metadata name="performServerMaintenance" path="/shared/CoE/MonitorServer/Admin/performServerMaintenance" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="maintenanceAction" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="status" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="serverState" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="message" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/GenerateEvent" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="eventName" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyName" type="STRING" maxLength="255"/>
      </element>
      <element name="value" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyValue" type="STRING" maxLength="4096"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/GetProperty" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="property" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyName" type="STRING" maxLength="255"/>
      </element>
      <element name="result" direction="OUT">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyValue" type="STRING" maxLength="4096"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/getConstantV2" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="constantsPath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="constantsName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="optionReturn" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="outValue" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/modifyConstant" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="constantsPath" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="constantsName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="constantsValue" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/CoE/MonitorServer/Customize/commonValues" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*
&#x9;performServerMaintenance:

&#x9;This procedure gets invoked by a remote program to set the status of a server when performing maintenance operations.
&#x9;The health-check probe will utilize this information to send an SERVER_UP, SERVER_DOWN, or SERVER_BUSY to the load balancer.

&#x9;INPUT:
&#x9;&#x9;debug&#x9;&#x9;&#x9;&#x9;CHAR(1),&#x9;&#x9;-- Debug: N=Debug off.  Y=Debug on.
&#x9;&#x9;maintenanceAction&#x9;VARCHAR,&#x9;&#x9;-- The maintenance action indicates what to perform for this node
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;SERVER_UP - bring the node &quot;UP&quot; from maintenance.  Generates a user defined event &quot;ServerStatusUp&quot;.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;SERVER_DOWN - bring the node &quot;DOWN&quot; for maintenance.  Generates a user defined event &quot;ServerStatusDown&quot;.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--  SERVER_STATUS - return the current status of this node.
&#x9;OUTPUT:
&#x9;&#x9;status&#x9;&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- The status of the action. [SUCCESS or FAIL]
&#x9;&#x9;message&#x9;&#x9;&#x9;&#x9;LONGVARCHAR&#x9;&#x9;-- The result message:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;When STATUS=SUCCESS, &apos;SERVER STATUS=SERVER_UP&apos; when commonValues.serverMaintenanceList does not contain this node&apos;s hostname
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;When STATUS=SUCCESS, &apos;SERVER STATUS=SERVER_DOWN&apos; when commonValues.serverMaintenanceList contains this node&apos;s hostname
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;When STATUS=FAIL, message contains the exception message text.

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2020.200&#x9;05/27/2020&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Created new.
&#x9;2020.300&#x9;09/01/2020&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Fixed debug documentation and maintenanceAction documentation that was misleading.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE performServerMaintenance(
&#x9;-- Debug: Y=Debug off.  N=Debug on.
&#x9;IN debug&#x9;&#x9;&#x9;&#x9;CHAR(1),

&#x9;-- The maintenance action indicates what to perform for this node
&#x9;--&#x9;SERVER_UP - bring the node &quot;UP&quot; from maintenance.
&#x9;--&#x9;SERVER_DOWN - bring the node &quot;DOWN&quot; for maintenance.
&#x9;--  SERVER_STATUS - return the current status of this node.
&#x9;IN maintenanceAction&#x9;VARCHAR,

&#x9;-- The status of the action.
&#x9;--&#x9;SUCCESS - the action was successfully performed with a message.
&#x9;--&#x9;FAIL - the action was not successfully performed followed by the error message.
&#x9;OUT status&#x9;&#x9;&#x9;&#x9;VARCHAR,

&#x9;-- The server state is either SERVER_UP or SERVER_DOWN.
&#x9;OUT serverState&#x9;&#x9;&#x9;VARCHAR,

&#x9;-- The result message:
&#x9;--&#x9;When STATUS=SUCCESS, &apos;SERVER STATUS=SERVER_UP&apos; when commonValues.serverMaintenanceList does not contain this node&apos;s hostname
&#x9;--&#x9;When STATUS=SUCCESS, &apos;SERVER STATUS=SERVER_DOWN&apos; when commonValues.serverMaintenanceList contains this node&apos;s hostname
&#x9;--&#x9;When STATUS=FAIL, message contains the exception message text.
&#x9;OUT message&#x9;&#x9;&#x9;&#x9;LONGVARCHAR
)
BEGIN
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR &#x9;&#x9;DEFAULT &apos;performServerMaintenance&apos;;
&#x9;DECLARE constantPath&#x9;&#x9;&#x9;&#x9;VARCHAR(4000) &#x9;DEFAULT /shared/CoE/MonitorServer/Customize/commonValues.commonValuesPath;
&#x9;DECLARE constantName&#x9;&#x9;&#x9;&#x9;VARCHAR &#x9;&#x9;DEFAULT &apos;serverMaintenanceList&apos;;
&#x9;DECLARE serverMaintenanceList&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE currentHostname&#x9;&#x9;&#x9;&#x9;VARCHAR;

&#x9;BEGIN INDEPENDENT TRANSACTION
&#x9;&#x9;SELECT A.result INTO currentHostname FROM /lib/util/GetProperty(&apos;SERVER_HOSTNAME&apos;) A;

&#x9;&#x9;IF (maintenanceAction IS NOT NULL AND UPPER(maintenanceAction) IN (&apos;SERVER_UP&apos;,&apos;SERVER_DOWN&apos;,&apos;SERVER_STATUS&apos;,&apos;UP&apos;,&apos;DOWN&apos;,&apos;STATUS&apos;)) THEN
&#x9;&#x9;&#x9;-- SERVER MAINTENANCE: SERVER_UP requested
&#x9;&#x9;&#x9;IF (INSTR(UPPER(maintenanceAction),&apos;UP&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; : Change server state to: SERVER_UP:&apos;);
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(constantPath, constantName, 3, serverMaintenanceList);
&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; :     current constant=[&apos;||constantName||&apos;]  serverMaintenanceList=[&apos;||NVL(serverMaintenanceList,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;IF (serverMaintenanceList IS NOT NULL AND LENGTH(TRIM(serverMaintenanceList)) &gt; 0 AND INSTR(serverMaintenanceList, currentHostname) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;-- Add a comma to the end of the string if it does not exist.
&#x9;&#x9;&#x9;&#x9;&#x9;IF (SUBSTRING(serverMaintenanceList, LENGTH(serverMaintenanceList), 1) &lt;&gt; &apos;,&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET serverMaintenanceList = serverMaintenanceList || &apos;,&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;SET serverMaintenanceList = &apos;&apos;&apos;&apos; || REPLACE(serverMaintenanceList, currentHostname||&apos;,&apos;, &apos;&apos;) || &apos;&apos;&apos;&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; :     Modify constant=[&apos;||constantName||&apos;]  serverMaintenanceList=[&apos;||NVL(serverMaintenanceList,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;-- Modify the constant
&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/string/modifyConstant(constantPath, constantName, serverMaintenanceList);
&#x9;&#x9;&#x9;&#x9;&#x9;SET serverState = &apos;SERVER_UP&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;SET message = &apos;SERVER STATUS=&apos;||serverState;
&#x9;&#x9;&#x9;&#x9;&#x9;-- Generate a system user-defined event
&#x9;&#x9;&#x9;&#x9;&#x9;CALL /lib/util/GenerateEvent(&apos;ServerStatusUp&apos;, message);
&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;SET serverState = &apos;SERVER_UP&apos;;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;SET message = &apos;SERVER STATUS=&apos;||serverState;
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- SERVER MAINTENANCE: SERVER_DOWN requested
&#x9;&#x9;&#x9;IF (INSTR(UPPER(maintenanceAction),&apos;DOWN&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; : Change server state to: SERVER_DOWN:&apos;);
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(constantPath, constantName, 3, serverMaintenanceList);
&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; :     current constant=[&apos;||constantName||&apos;]  serverMaintenanceList=[&apos;||NVL(serverMaintenanceList,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;IF (serverMaintenanceList IS NULL OR LENGTH(TRIM(serverMaintenanceList)) = 0 OR INSTR(serverMaintenanceList, currentHostname) = 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET serverMaintenanceList = &apos;&apos;&apos;&apos; || TRIM(NVL(serverMaintenanceList,&apos;  &apos;)) || currentHostname || &apos;,&apos; || &apos;&apos;&apos;&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; :     Modify constant=[&apos;||constantName||&apos;]  serverMaintenanceList=[&apos;||NVL(serverMaintenanceList,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/string/modifyConstant(constantPath, constantName, serverMaintenanceList);
&#x9;&#x9;&#x9;&#x9;&#x9;SET serverState = &apos;SERVER_DOWN&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;SET message = &apos;SERVER STATUS=&apos;||serverState;
&#x9;&#x9;&#x9;&#x9;&#x9;-- Generate a system user-defined event
&#x9;&#x9;&#x9;&#x9;&#x9;CALL /lib/util/GenerateEvent(&apos;ServerStatusDown&apos;, message);
&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;SET serverState = &apos;SERVER_DOWN&apos;;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;SET message = &apos;SERVER STATUS=&apos;||serverState;
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- SERVER MAINTENANCE: SERVER_STATUS requested
&#x9;&#x9;&#x9;IF (INSTR(UPPER(maintenanceAction),&apos;STATUS&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; : Request server state: SERVER_STATUS:&apos;);
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(constantPath, constantName, 3, serverMaintenanceList);
&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(moduleName||&apos; :     current constant=[&apos;||constantName||&apos;]  serverMaintenanceList=[&apos;||NVL(serverMaintenanceList,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;IF (serverMaintenanceList IS NULL OR LENGTH(TRIM(serverMaintenanceList)) = 0 OR INSTR(serverMaintenanceList, currentHostname) = 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET serverState = &apos;SERVER_UP&apos;;
&#x9;&#x9;&#x9;&#x9;ELSEIF (serverMaintenanceList IS NOT NULL AND LENGTH(TRIM(serverMaintenanceList)) &gt; 0 AND INSTR(serverMaintenanceList, currentHostname) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET serverState = &apos;SERVER_DOWN&apos;;
&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;SET serverState = &apos;UNKNOWN&apos;;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;SET message = &apos;SERVER STATUS=&apos;||serverState;
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- Successfuly executed this procedure
&#x9;&#x9;&#x9;SET status = &apos;SUCCESS&apos;;
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;SET status = &apos;FAIL&apos;;
&#x9;&#x9;&#x9;SET message = &apos;The &quot;maintenanceAction&quot; must be in (&apos;&apos;SERVER_UP&apos;&apos;,&apos;&apos;SERVER_DOWN&apos;&apos;,&apos;&apos;SERVER_STATUS&apos;&apos;)&apos;;
&#x9;&#x9;END IF;
&#x9;EXCEPTION
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;SET message = CAST(CURRENT_EXCEPTION.TRACE AS LONGVARCHAR);
&#x9;&#x9;&#x9;SET status = &apos;FAIL&apos;;
&#x9;END;
END</attribute>
  <attribute name="creationDate" type="LONG">1590521117231</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1601333668980</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">11/138</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/113</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/83</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/134</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/79</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/109</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">12/92</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">12/118</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1590521117231</attribute>
</metadata>