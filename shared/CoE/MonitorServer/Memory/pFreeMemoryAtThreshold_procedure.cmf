<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:4eac6a34-df40-4265-b123-32a6ac34cac2 -->
<metadata name="pFreeMemoryAtThreshold" path="/shared/CoE/MonitorServer/Memory/pFreeMemoryAtThreshold" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="totalHeapUsedPercentThresholdIn" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/GenerateEvent" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="eventName" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyName" type="STRING" maxLength="255"/>
      </element>
      <element name="value" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyValue" type="STRING" maxLength="4096"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/freeUnusedMemory" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258"></datatype>
  </dependency>
  <dependency target="/shared/CoE/MonitorServer/Customize/commonValues" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*
&#x9;pFreeMemoryAtThreshold:

&#x9;This procedure gets invoked by a trigger periodically and frees memory based on a percentage that is passed
&#x9;&#x9;into this procedure.  If the trigger passes in a null value then the procedure will look for a default
&#x9;&#x9;value in commonValues.totalHeapUsedPercentThreshold.

&#x9;INPUT:
&#x9;&#x9;debug&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1),  &#x9;-- Y=debug on.  N=debug off
&#x9;&#x9;inTotalHeapUsedPercentThreshold&#x9;&#x9;INTEGER&#x9;&#x9;-- NULL if using commonValues.totalHeapUsedPercentThreshold otherwise an integer threshold value to compare with current memory usage.

&#x9;OUTPUT:
&#x9;&#x9;NONE

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2020.200&#x9;05/27/2020&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Created new.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.
*/
PROCEDURE pFreeMemoryAtThreshold(
&#x9;IN debug&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1), -- Y=debug on.  N=debug off.
&#x9;IN totalHeapUsedPercentThresholdIn&#x9;INTEGER&#x9; -- NULL if using commonValues.totalHeapUsedPercentThreshold 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; -- otherwise an integer threshold value to compare with current memory usage.
)
BEGIN
&#x9;DECLARE totalHeapUsedPercent&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE totalHeapUsedPercentThreshold&#x9;INTEGER; 
&#x9;DECLARE sqlStatementCount&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE cursCount&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CURSOR(totalHeapUsedPercent INTEGER);
&#x9;DECLARE message&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(4000);

&#x9;IF (totalHeapUsedPercentThresholdIn IS NOT NULL) THEN
&#x9;&#x9;SET totalHeapUsedPercentThreshold = totalHeapUsedPercentThresholdIn;
&#x9;ELSE
&#x9;&#x9;SET totalHeapUsedPercentThreshold = /shared/CoE/MonitorServer/Customize/commonValues.totalHeapUsedPercentThreshold;
&#x9;END IF;

&#x9;-- Look to see if the actual memory (bytes) has exceeded the managed memory max using the custom percentage.
&#x9;SET sqlStatementCount = 
&#x9;&#x9;&apos;SELECT TOP 1 ROUND((MEMORY_BYTES / CAST(MEMORY_MAX AS DECIMAL(12,2))) * 100) TOTAL_HEAP_USED_PERCENT&apos;||CHR(10)||
&#x9;&#x9;&apos;FROM /services/databases/system/LOG_MEMORY LOG_MEMORY&apos;||CHR(10)||
&#x9;&#x9;&apos;ORDER BY EVENT_TIME DESC&apos;;
&#x9;-- Get the total current heap used percent
&#x9;OPEN cursCount FOR sqlStatementCount;
&#x9;FETCH cursCount INTO totalHeapUsedPercent;
&#x9;CLOSE cursCount;

&#x9;/*******************************************
&#x9; * Invoke free unused memory
&#x9; *******************************************/
&#x9;IF (totalHeapUsedPercent &gt; totalHeapUsedPercentThreshold) THEN
&#x9;&#x9;SET message = &apos;FREE MEMORY:  totalHeapUsedPercent[&apos;||CAST(totalHeapUsedPercent AS VARCHAR)||&apos;] &gt; totalHeapUsedPercentThreshold[&apos;||CAST(totalHeapUsedPercentThreshold AS VARCHAR)||&apos;]&apos;;
&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL PRINT(message);
&#x9;&#x9;END IF;

&#x9;&#x9;CALL /shared/ASAssets/Utilities/repository/freeUnusedMemory();

&#x9;&#x9;-- Generate a system user-defined event
&#x9;&#x9;CALL /lib/util/GenerateEvent(&apos;FreeMemory&apos;, message);
&#x9;ELSE
&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL PRINT(&apos;DO NOT FREE MEMORY:  totalHeapUsedPercent[&apos;||CAST(totalHeapUsedPercent AS VARCHAR)||&apos;] &lt;= totalHeapUsedPercentThreshold[&apos;||CAST(totalHeapUsedPercentThreshold AS VARCHAR)||&apos;]&apos;);
&#x9;&#x9;END IF;
&#x9;END IF;
END</attribute>
  <attribute name="creationDate" type="LONG">1586550525519</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1601333668980</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">9/68</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/77</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1586550525519</attribute>
</metadata>