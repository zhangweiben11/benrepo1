<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:4eac6a34-df40-4265-b123-32a6ac34cac2 -->
<metadata name="runAfterImport" path="/shared/CoE/Deployment/PostDeployment/runAfterImport" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation><![CDATA[runAfterImport_template:

&#x9;This procedure is a template for running internal DV procedure after import of a DV migration.
&#x9;This procedure should be copied to a different location so that it does not get overwritten when the Utilities are upgraded.

&#x9;Instructions:
&#x9;&#x9;1. Modify /shared/ASAssets/Utilities/environment/getEnvName() and provide an environment name such as DEV, TEST, PROD etc based on the TDV server environment.
&#x9;&#x9;2. Copy this template to a different location outside of the /shared/ASAssets/Utilities folder so that it does not get overwritten if the Utilities are updated.
&#x9;&#x9;3. Modify the variable &quot;scriptEnv&quot; below to match environment name that comes from getEnvName().
&#x9;&#x9;4. Modify this procedure and add procedure calls to additional logic that you want to &quot;run after import&quot;.
&#x9;&#x9;5. Publish the copied procedure &quot;runAfterImport&quot; to /services/databases/ASAssets/Utilities/deployment
&#x9;&#x9;6. The script deployProject.sh would invoke runAfterImport.

&#x9;Input:
&#x9;&#x9;NONE
&#x9;Output:
&#x9;&#x9;NONE

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
 &#x9;2014.4&#x9;&#x9;10/16/2014      Jeremy Akers        6.2.6           Created new
&#x9;2019.200&#x9;05/30/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Modified from original

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]></annotation>
  <parameters>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="input1" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="input2" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="input3" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/debug/Log" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToLog" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/resource/TestDataSourceConnection" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="status" direction="OUT">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="OperationStatus" type="STRING" maxLength="255"/>
      </element>
      <element name="messages" direction="OUT">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="MessageValue" type="STRING" maxLength="64000"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/DataSource/CacheInstructions/pqCreate_postgres_cache_tables" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="schemaName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="result">
            <datatype type="STRING" minLength="255" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/updateResourceEnabled" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="resourcePath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="enable" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="status" direction="OUT">
        <datatype type="STRING" maxLength="10"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*
&#x9;runAfterImport_template:

&#x9;This procedure is a template for running internal DV procedures after import of a CAR file during a DV migration.
&#x9;This procedure should be copied to a different location so that it does not get overwritten when the Utilities are upgraded.

&#x9;Instructions:
&#x9;&#x9;1. Modify /shared/ASAssets/Utilities/environment/getEnvName() and provide an environment name such as DEV, TEST, PROD etc based on the TDV server environment.
&#x9;&#x9;2. Copy this template to a different location outside of the /shared/ASAssets/Utilities folder so that it does not get overwritten if the Utilities are updated.
&#x9;&#x9;3. Modify the copied procedure
&#x9;&#x9;&#x9;a. Modify the variable &quot;scriptEnv&quot; to match environment name that comes from getEnvName().
&#x9;&#x9;&#x9;b. Add procedure calls to add additional logic that you want to &quot;run after import&quot;.
&#x9;&#x9;4. Publish the copied procedure &quot;runAfterImport&quot; to /services/databases/ASAssets/Utilities/deployment
&#x9;&#x9;5. The script deployProject.[bat|sh] would invoke runAfterImport.  
&#x9;&#x9;&#x9;See the following for script details: /shared/ASAssets/Utilities/deployment/_README

&#x9;Input:
&#x9;&#x9;debug&#x9;&#x9;&#x9;CHAR(1)&#x9;&#x9;-- Y=debug on,  N=debug off.  Debug writes to CONSOLE and LOG.
&#x9;Output:
&#x9;&#x9;result&#x9;&#x9;&#x9;VARCHAR&#x9;&#x9;-- SUCCESS otherwise an exception is thrown.

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
 &#x9;2014.4&#x9;&#x9;10/16/2014      Jeremy Akers        6.2.6           Created new
&#x9;2019.200&#x9;05/30/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Modified from original
&#x9;2020.301&#x9;08/28/2020&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Modified to accommadate automated TDV installs.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE runAfterImport(
&#x9;IN debug&#x9;&#x9;&#x9;CHAR(1),&#x9;&#x9;-- Y=debug on,  N=debug off.  Debug writes to CONSOLE and LOG.
&#x9;IN input1&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- Any character value that can be used within this program that is passed from deployProject.[bat|sh].
&#x9;IN input2&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- Any character value that can be used within this program that is passed from deployProject.[bat|sh].
&#x9;IN input3&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- Any character value that can be used within this program that is passed from deployProject.[bat|sh].
&#x9;OUT result&#x9;&#x9;&#x9;LONGVARCHAR&#x9;&#x9;-- SUCCESS otherwise an exception is thrown.
)
BEGIN
&#x9;---------------------------------------------------------------
&#x9;-- Modify &quot;scriptEnv&quot; value to match the actual environment as set in /shared/ASAssets/Utilities/environment/getEnvName().
&#x9;---------------------------------------------------------------
&#x9;DECLARE scriptEnv &#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;DEV&apos;;
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;runAfterImport&apos;;
&#x9;DECLARE env&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT scriptEnv;
&#x9;DECLARE message&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE ex &#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION;
&#x9;DECLARE intVal&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE longvarcharVal&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE resExists&#x9;&#x9;&#x9;BOOLEAN;
&#x9;DECLARE maxPrintSize&#x9;&#x9;INTEGER DEFAULT 63000;
&#x9;DECLARE datasourcePath&#x9;&#x9;VARCHAR;
&#x9;DECLARE catalogName&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE schemaName&#x9;&#x9;&#x9;VARCHAR;
&#x9;SET result = &apos;SUCCESS&apos;;
&#x9;---------------------------------------------------------------
&#x9;-- Modify the value in getEnvName to represent the environment.
&#x9;-- OPTIONAL: Comment out if not using this feature
&#x9;--           If not using this feature then make sure &quot;scriptEnv&quot; is set to the correct environment.
&#x9;-- CALL /shared/ASAssets/Utilities/environment/getEnvName(env);
&#x9;---------------------------------------------------------------
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;SET message = moduleName||&apos; :: BEGIN execute &apos;||moduleName||&apos;() [&apos;||scriptEnv||&apos;]  for the current environment=[&apos;||NVL(env,&apos;null&apos;)||&apos;]&apos;||
&#x9;&#x9;&#x9;&#x9;&apos;  input1=[&apos;||NVL(input1,&apos;null&apos;)||&apos;]&apos;||  &apos;  input2=[&apos;||NVL(input2,&apos;null&apos;)||&apos;]&apos;||  &apos;  input3=[&apos;||NVL(input3,&apos;null&apos;)||&apos;]&apos;;
&#x9;&#x9;CALL PRINT(SUBSTRING(message,1,maxPrintSize));
&#x9;&#x9;CALL LOG(message);
&#x9;END IF;
&#x9;IF (env is null or env &lt;&gt; scriptEnv) THEN
&#x9;&#x9;RAISE ex VALUE &apos;You cannot execute &apos;||moduleName||&apos;() [&apos;||scriptEnv||&apos;]  for the current environment of &apos;||NVL(env,&apos;null&apos;)||&apos;.&apos;;
&#x9;END IF;

&#x9;---------------------------------------------------------------
&#x9;-- Modify the case statement as required.
&#x9;---------------------------------------------------------------
&#x9;-- Execute environment specific actions here:
&#x9;CASE
&#x9;&#x9;WHEN env = &apos;TEST&apos; THEN

&#x9;&#x9;WHEN env = &apos;PROD&apos; THEN

&#x9;&#x9;ELSE
&#x9;END CASE;

&#x9;---------------------------------------------------------------
&#x9;-- Modify custom code section as required.
&#x9;---------------------------------------------------------------
&#x9;-- Execute other customized procedure actions here:



&#x9;-- This is for automated installation only.  This post-deployment action is meant to create the database tables for the CommonModelCache if it exists and the connection tests successfully.
&#x9;--   By executing this, it will alleviate many errors be thrown to the log which is quite annoying.
&#x9;IF (input1 IS NOT NULL AND input1 = &apos;INSTALL&apos;) THEN
&#x9;&#x9;BEGIN INDEPENDENT TRANSACTION
&#x9;&#x9;&#x9;SET datasourcePath = &apos;/shared/ASAssets/BestPractices_v81/DataSource/CommonModelCache&apos;;
&#x9;&#x9;&#x9;SET catalogName = null;
&#x9;&#x9;&#x9;SET schemaName = &apos;ciscache&apos;;
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/repository/updateResourceEnabled(debug, datasourcePath, &apos;DATA_SOURCE&apos;, 1, message);
&#x9;&#x9;EXCEPTION
&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;SET message = CAST(CURRENT_EXCEPTION.TRACE AS LONGVARCHAR);
&#x9;&#x9;&#x9;&#x9;SET result = &apos;WARNING :: &apos;||message;
&#x9;&#x9;&#x9;&#x9;SET message = moduleName||&apos; :: Installation WARNING: &apos;||message;
&#x9;&#x9;&#x9;&#x9;CALL LOG(message);
&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(SUBSTRING(message,1,maxPrintSize));
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END;
&#x9;&#x9;BEGIN INDEPENDENT TRANSACTION
&#x9;&#x9;&#x9;CALL /lib/resource/ResourceExists(&apos;/shared/ASAssets/BestPractices_v81/DataSource/CacheInstructions/pqCreate_postgres_cache_tables&apos;, &apos;PROCEDURE&apos;, null, resExists);
&#x9;&#x9;&#x9;IF (resExists) THEN
&#x9;&#x9;&#x9;&#x9;CALL /lib/resource/TestDataSourceConnection(datasourcePath, result, message);
&#x9;&#x9;&#x9;&#x9;FOR r AS SELECT * FROM  /shared/ASAssets/BestPractices_v81/DataSource/CacheInstructions/pqCreate_postgres_cache_tables(schemaName) DO
&#x9;&#x9;&#x9;&#x9;&#x9;SET result = r.result;
&#x9;&#x9;&#x9;&#x9;END FOR;
&#x9;&#x9;&#x9;&#x9;SET message = moduleName||&apos; :: Installation SUCCESS: Executed pqCreate_postgres_cache_tables(&apos;&apos;&apos;||schemaName||&apos;&apos;&apos;)&apos;;
&#x9;&#x9;&#x9;&#x9;CALL LOG(message);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;EXCEPTION
&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;SET message = CAST(CURRENT_EXCEPTION.TRACE AS LONGVARCHAR);
&#x9;&#x9;&#x9;&#x9;SET result = &apos;WARNING :: &apos;||message;
&#x9;&#x9;&#x9;&#x9;SET message = moduleName||&apos; :: Installation WARNING: &apos;||message;
&#x9;&#x9;&#x9;&#x9;CALL LOG(message);
&#x9;&#x9;&#x9;&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;CALL PRINT(SUBSTRING(message,1,maxPrintSize));
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END;
&#x9;END IF;

&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;SET message = moduleName||&apos; :: END sucessfully executed.&apos;;
&#x9;&#x9;CALL PRINT(SUBSTRING(message,1,maxPrintSize));
&#x9;&#x9;CALL LOG(message);
&#x9;END IF;
END</attribute>
  <attribute name="creationDate" type="LONG">1459950192081</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1598704095262</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">8/145</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/116</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Log</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/138</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/78</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Log</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/136</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Log</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/146</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Log</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/77</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/118</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/129</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Log</item>
      </value>
    </item>
  </attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1459950192081</attribute>
</metadata>