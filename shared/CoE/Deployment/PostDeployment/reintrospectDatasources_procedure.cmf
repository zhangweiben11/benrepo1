<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:4eac6a34-df40-4265-b123-32a6ac34cac2 -->
<metadata name="reintrospectDatasources" path="/shared/CoE/Deployment/PostDeployment/reintrospectDatasources" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="delimiter" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="datasourcePaths" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege user="anonymous" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/reintrospectDataSource" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="fullResourcePath" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="isBlocking" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/extractDelimitedText" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inputString" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="delimiter" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="occurrence" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="reverseInputText" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="reverseOutput" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="trimText" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="includeDelimiter" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="object">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
&#x9;reintrospectDatasources:

    This procedure is published to allow for reintrospecting one or more data source paths after deployment.
&#x9;
&#x9;INPUT:
&#x9;&#x9;debug&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1),&#x9;&#x9;-- Y=debug on.  N=debug off.
&#x9;&#x9;delimiter&#x9;&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- The delimiter used between paths.  If null or blank the default is &quot;~~&quot;.
&#x9;&#x9;datasourcePaths&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- One or more full data source paths separated by the input variable &quot;delimiter&quot;.  Double quotes are not required around paths containing special characters.

&#x9;OUTPUT:
&#x9;&#x9;result - SUCCESS or an exception is thrown

&#x9;Release&#x9;&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2020.300&#x9;07/16/2020&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Created new.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.
*/
PROCEDURE reintrospectDatasources(
&#x9;IN debug &#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1),&#x9;&#x9;-- e.g. Y or N
&#x9;IN delimiter&#x9;&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- The delimiter used between paths.  If null or blank the default is &quot;~~&quot;.
&#x9;IN datasourcePaths&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- One or more full data source paths separated by the input variable &quot;delimiter&quot;.  Double quotes are not required around paths containing special characters.
&#x9;OUT result&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR &#x9;&#x9;-- SUCCESS or an exception is thrown
)
BEGIN
&#x9;DECLARE isBlocking&#x9;&#x9;&#x9;&#x9;BIT DEFAULT 1;
&#x9;DECLARE delimiterMod&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;~~&apos;;
&#x9;DECLARE resExists&#x9;&#x9;&#x9;&#x9;BOOLEAN;
&#x9;DECLARE datasourcePathsNotExist&#x9;LONGVARCHAR DEFAULT &apos;&apos;;
&#x9;DECLARE ex&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION;

&#x9;IF (datasourcePaths IS NULL OR LENGTH(TRIM(datasourcePaths)) = 0) THEN
&#x9;&#x9;RAISE ex VALUE &apos;The input variable &quot;datasourcePaths&quot; may not be null or empty.&apos;;
&#x9;END IF;
&#x9;-- Assign the delimiter if not null otherwise use the default delimiter.
&#x9;IF (delimiter IS NOT NULL AND LENGTH(TRIM(delimiter)) &gt; 0) THEN
&#x9;&#x9;SET delimiterMod = delimiter;
&#x9;END IF;
&#x9;-- Extract the various paths and introspect one at a time.  Do not trim the results in case trailing spaces are required in the data source path.
&#x9;FOR r AS
&#x9;&#x9;SELECT object datasourcePath FROM /shared/ASAssets/Utilities/string/extractDelimitedText(datasourcePaths, delimiterMod, 0,0,0,0,0)
&#x9;&#x9;WHERE object IS NOT NULL AND LENGTH(TRIM(object)) &gt; 0
&#x9;DO
&#x9;&#x9;CALL /lib/resource/ResourceExists(r.datasourcePath, &apos;DATA_SOURCE&apos;, null, resExists);
&#x9;&#x9;IF (resExists) THEN
&#x9;&#x9;&#x9;-- Invoke the reintrospect
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/repository/reintrospectDataSource(debug, r.datasourcePath, isBlocking);
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;-- Add the data source path to the does not exist list.
&#x9;&#x9;&#x9;IF (LENGTH(TRIM(datasourcePathsNotExist)) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET datasourcePathsNotExist = datasourcePathsNotExist || delimiterMod;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;SET datasourcePathsNotExist = datasourcePathsNotExist || r.datasourcePath;
&#x9;&#x9;END IF;
&#x9;END FOR;
&#x9;IF (LENGTH(TRIM(datasourcePathsNotExist)) = 0) THEN
&#x9;&#x9;SET result = &apos;SUCCESS&apos;;
&#x9;ELSE
&#x9;&#x9;RAISE ex VALUE &apos;The data source paths do not exist in the list=[&apos;||datasourcePathsNotExist||&apos;]&apos;;
&#x9;END IF;
END</attribute>
  <attribute name="creationDate" type="LONG">1594907651159</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1594916408342</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1594907651159</attribute>
</metadata>